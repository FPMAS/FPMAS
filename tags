!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
$(ACLOCAL_M4)	zoltan/Makefile.in	/^$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)$/;"	t
$(ACLOCAL_M4)	zoltan/driver/Makefile.in	/^$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)$/;"	t
$(ACLOCAL_M4)	zoltan/fdriver/Makefile.in	/^$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)$/;"	t
$(RECURSIVE_CLEAN_TARGETS)	zoltan/Makefile.in	/^$(RECURSIVE_CLEAN_TARGETS):$/;"	t
$(RECURSIVE_TARGETS)	zoltan/Makefile.in	/^$(RECURSIVE_TARGETS):$/;"	t
$(ZOD)/cwrap.o	zoltan/fort/makefile	/^$(ZOD)\/cwrap.o: cwrap.c$/;"	t
$(ZOD)/farg.o	zoltan/fdriver/makefile	/^$(ZOD)\/farg.o: $(FARG).f$/;"	t
$(ZOD)/fdr_chaco_io.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_chaco_io.o: 	fdr_chaco_io.f90 $(ZOD)\/mpi_h.o $(ZOD)\/fdr_const.o \\$/;"	t
$(ZOD)/fdr_const.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_const.o: 	fdr_const.f90 $/;"	t
$(ZOD)/fdr_input.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_input.o: 	fdr_input.f90 $(ZOD)\/mpi_h.o $(ZOD)\/fdr_const.o $/;"	t
$(ZOD)/fdr_loadbal.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_loadbal.o: 	fdr_loadbal.f90 $(ZOD)\/mpi_h.o $(ZOD)\/fdr_const.o \\$/;"	t
$(ZOD)/fdr_main.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_main.o: 	fdr_main.f90 $(ZOD)\/mpi_h.o $(ZOD)\/fdr_const.o \\$/;"	t
$(ZOD)/fdr_migrate.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_migrate.o: 	fdr_migrate.f90 $(ZOD)\/mpi_h.o $(ZOD)\/fdr_const.o \\$/;"	t
$(ZOD)/fdr_mm_io.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_mm_io.o: 	fdr_mm_io.f90 $(ZOD)\/mmio.o $(ZOD)\/mpi_h.o $(ZOD)\/fdr_const.o $(ZOD)\/f/;"	t
$(ZOD)/fdr_param_file.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_param_file.o: 	fdr_param_file.f90 $(ZOD)\/mpi_h.o$/;"	t
$(ZOD)/fdr_sort.o	zoltan/fdriver/makefile	/^$(ZOD)\/fdr_sort.o: 	fdr_sort.f90 $/;"	t
$(ZOD)/fwrap.o	zoltan/fort/makefile	/^$(ZOD)\/fwrap.o: 	$(ZOD)\/ztypes.o  \\$/;"	t
$(ZOD)/lampmpi.o	zoltan/fdriver/makefile	/^$(ZOD)\/lampmpi.o: 	lampmpi.f90$/;"	t
$(ZOD)/mmio.o	zoltan/fdriver/makefile	/^$(ZOD)\/mmio.o: 	mmio.f $/;"	t
$(ZOD)/mpi_h.o	zoltan/fdriver/makefile	/^$(ZOD)\/mpi_h.o: 	mpi_h.f$/;"	t
$(ZOD)/mpistring.o	zoltan/fdriver/makefile	/^$(ZOD)\/mpistring.o: 	mpistring.c$/;"	t
$(ZOD)/zoltan_user_data.o	zoltan/fort/makefile	/^$(ZOD)\/zoltan_user_data.o:	zoltan_user_data.f90 \\$/;"	t
$(ZOD)/ztypes.o	zoltan/fort/makefile	/^$(ZOD)\/ztypes.o: 	ztypes.f90$/;"	t
$(ZOLTAN_LIB)	zoltan/Makefile.am	/^lib_LIBRARIES = $(ZOLTAN_LIB)$/;"	L	directory:lib
$(am__aclocal_m4_deps)	zoltan/Makefile.in	/^$(am__aclocal_m4_deps):$/;"	t
$(am__aclocal_m4_deps)	zoltan/driver/Makefile.in	/^$(am__aclocal_m4_deps):$/;"	t
$(am__aclocal_m4_deps)	zoltan/fdriver/Makefile.in	/^$(am__aclocal_m4_deps):$/;"	t
$(srcdir)/Makefile.in	zoltan/Makefile.in	/^$(srcdir)\/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)\/Makefile.am  $(am__configure_deps)$/;"	t
$(srcdir)/Makefile.in	zoltan/driver/Makefile.in	/^$(srcdir)\/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)\/Makefile.am  $(am__configure_deps)$/;"	t
$(srcdir)/Makefile.in	zoltan/fdriver/Makefile.in	/^$(srcdir)\/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)\/Makefile.am  $(am__configure_deps)$/;"	t
$(top_builddir)/config.status	zoltan/Makefile.in	/^$(top_builddir)\/config.status: $(top_srcdir)\/configure $(CONFIG_STATUS_DEPENDENCIES)$/;"	t
$(top_builddir)/config.status	zoltan/driver/Makefile.in	/^$(top_builddir)\/config.status: $(top_srcdir)\/configure $(CONFIG_STATUS_DEPENDENCIES)$/;"	t
$(top_builddir)/config.status	zoltan/fdriver/Makefile.in	/^$(top_builddir)\/config.status: $(top_srcdir)\/configure $(CONFIG_STATUS_DEPENDENCIES)$/;"	t
$(top_srcdir)/configure	zoltan/Makefile.in	/^$(top_srcdir)\/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)$/;"	t
$(top_srcdir)/configure	zoltan/driver/Makefile.in	/^$(top_srcdir)\/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)$/;"	t
$(top_srcdir)/configure	zoltan/fdriver/Makefile.in	/^$(top_srcdir)\/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)$/;"	t
.c.o	zoltan/Makefile.in	/^.c.o:$/;"	t
.c.o	zoltan/driver/Makefile.in	/^.c.o:$/;"	t
.c.obj	zoltan/Makefile.in	/^.c.obj:$/;"	t
.c.obj	zoltan/driver/Makefile.in	/^.c.obj:$/;"	t
.cpp.o	zoltan/driver/Makefile.in	/^.cpp.o:$/;"	t
.cpp.obj	zoltan/driver/Makefile.in	/^.cpp.obj:$/;"	t
.f.o	zoltan/fdriver/Makefile.in	/^.f.o:$/;"	t
.f.obj	zoltan/fdriver/Makefile.in	/^.f.obj:$/;"	t
.f90.o	zoltan/Makefile.in	/^.f90.o:$/;"	t
.f90.o	zoltan/fdriver/Makefile.in	/^.f90.o:$/;"	t
.f90.obj	zoltan/Makefile.in	/^.f90.obj:$/;"	t
.f90.obj	zoltan/fdriver/Makefile.in	/^.f90.obj:$/;"	t
10	zoltan/fdriver/mmio.f	/^ 10         continue$/;"	l	subroutine:mmwrite	file:
10	zoltan/fdriver/mmio.f	/^ 10   call getwd(tmp2,string,1024,next,next,wordlength)$/;"	l	subroutine:countwd	file:
10	zoltan/fdriver/mmio.f	/^ 10   continue$/;"	l	subroutine:lowerc	file:
10	zoltan/fdriver/mmio.f	/^ 10   continue$/;"	l	subroutine:mminfo	file:
10	zoltan/fdriver/mmio.f	/^ 10   continue$/;"	l	subroutine:mmread	file:
100	zoltan/fdriver/mmio.f	/^ 100  continue$/;"	l	subroutine:getwd	file:
1000	zoltan/fdriver/mmio.f	/^ 1000 print *,'''',rep,''' representation not recognized.'$/;"	l	subroutine:mmwrite	file:
1000	zoltan/fdriver/mmio.f	/^ 1000 print *,'Premature end-of-file.'$/;"	l	subroutine:mminfo	file:
1000	zoltan/fdriver/mmio.f	/^ 1000 print *,'Premature end-of-file.'$/;"	l	subroutine:mmread	file:
20	zoltan/fdriver/mmio.f	/^ 20         continue$/;"	l	subroutine:mmwrite	file:
20	zoltan/fdriver/mmio.f	/^ 20   continue$/;"	l	subroutine:mminfo	file:
20	zoltan/fdriver/mmio.f	/^ 20   continue$/;"	l	subroutine:mmread	file:
200	zoltan/fdriver/mmio.f	/^ 200  format(1a)$/;"	l	subroutine:mminfo	file:
200	zoltan/fdriver/mmio.f	/^ 200  format(1a)$/;"	l	subroutine:mmread	file:
2000	zoltan/fdriver/mmio.f	/^ 2000 print *,'''',field,''' field is not recognized.'$/;"	l	subroutine:mmwrite	file:
2000	zoltan/fdriver/mmio.f	/^ 2000 print *,'Premature end-of-file.'$/;"	l	subroutine:mminfo	file:
2000	zoltan/fdriver/mmio.f	/^ 2000 print *,'Premature end-of-file.'$/;"	l	subroutine:mmread	file:
30	zoltan/fdriver/mmio.f	/^ 30         continue$/;"	l	subroutine:mmwrite	file:
30	zoltan/fdriver/mmio.f	/^ 30       continue$/;"	l	subroutine:mmread	file:
3000	zoltan/fdriver/mmio.f	/^ 3000 print *,'''',field,''' arrays are not recognized.'$/;"	l	subroutine:mmwrite	file:
3000	zoltan/fdriver/mmio.f	/^ 3000 print *,'Size info inconsistant with representation.'$/;"	l	subroutine:mminfo	file:
3000	zoltan/fdriver/mmio.f	/^ 3000 print *,'Size info inconsistant with representation.'$/;"	l	subroutine:mmread	file:
35	zoltan/fdriver/mmio.f	/^ 35       continue$/;"	l	subroutine:mmread	file:
3500	zoltan/fdriver/mmio.f	/^ 3500 print *,'Size info inconsistant with representation.'$/;"	l	subroutine:mminfo	file:
3500	zoltan/fdriver/mmio.f	/^ 3500 print *,'Size info inconsistant with representation.'$/;"	l	subroutine:mmread	file:
40	zoltan/fdriver/mmio.f	/^ 40         continue$/;"	l	subroutine:mmwrite	file:
40	zoltan/fdriver/mmio.f	/^ 40       continue$/;"	l	subroutine:mmread	file:
4000	zoltan/fdriver/mmio.f	/^ 4000 print *,'''',symm,''' symmetry is not recognized.'$/;"	l	subroutine:mmwrite	file:
4000	zoltan/fdriver/mmio.f	/^ 4000 print *,'Premature end-of-file.'$/;"	l	subroutine:mmread	file:
5	zoltan/fdriver/mmio.f	/^ 5    continue$/;"	l	subroutine:getwd	file:
5	zoltan/fdriver/mmio.f	/^ 5    format('%%MatrixMarket matrix ',11A,1A,8A,1A,20A)$/;"	l	subroutine:mmwrite	file:
5	zoltan/fdriver/mmio.f	/^ 5    format(1024A)$/;"	l	subroutine:mminfo	file:
5	zoltan/fdriver/mmio.f	/^ 5    format(1024A)$/;"	l	subroutine:mmread	file:
50	zoltan/fdriver/mmio.f	/^ 50         continue$/;"	l	subroutine:mmwrite	file:
50	zoltan/fdriver/mmio.f	/^ 50       continue $/;"	l	subroutine:mmread	file:
5000	zoltan/fdriver/mmio.f	/^ 5000 print *,'Invalid matrix header: ',tmp1$/;"	l	subroutine:mminfo	file:
5000	zoltan/fdriver/mmio.f	/^ 5000 print *,'Invalid matrix header: ',tmp1$/;"	l	subroutine:mmread	file:
60	zoltan/fdriver/mmio.f	/^ 60         continue$/;"	l	subroutine:mmwrite	file:
60	zoltan/fdriver/mmio.f	/^ 60      continue$/;"	l	subroutine:mmread	file:
6000	zoltan/fdriver/mmio.f	/^ 6000 print *,'''',rep,''' representation not recognized.'$/;"	l	subroutine:mminfo	file:
6000	zoltan/fdriver/mmio.f	/^ 6000 print *,'''',rep,''' representation not recognized.'$/;"	l	subroutine:mmread	file:
65	zoltan/fdriver/mmio.f	/^ 65      continue$/;"	l	subroutine:mmread	file:
70	zoltan/fdriver/mmio.f	/^ 70         continue$/;"	l	subroutine:mmwrite	file:
70	zoltan/fdriver/mmio.f	/^ 70      continue$/;"	l	subroutine:mmread	file:
7000	zoltan/fdriver/mmio.f	/^ 7000 print *,'''',field,''' field is not recognized.'$/;"	l	subroutine:mminfo	file:
7000	zoltan/fdriver/mmio.f	/^ 7000 print *,'''',field,''' field is not recognized.'$/;"	l	subroutine:mmread	file:
8000	zoltan/fdriver/mmio.f	/^ 8000 print *,'''',field,''' arrays are not recognized.'$/;"	l	subroutine:mminfo	file:
8000	zoltan/fdriver/mmio.f	/^ 8000 print *,'''',field,''' arrays are not recognized.'$/;"	l	subroutine:mmread	file:
9000	zoltan/fdriver/mmio.f	/^ 9000 print *,'''',symm,''' symmetry is not recognized.'$/;"	l	subroutine:mminfo	file:
9000	zoltan/fdriver/mmio.f	/^ 9000 print *,'''',symm,''' symmetry is not recognized.'$/;"	l	subroutine:mmread	file:
9994	zoltan/fdriver/fdr_loadbal.f90	/^9994 continue$/;"	l	function:run_zoltan	file:
9996	zoltan/fdriver/fdr_loadbal.f90	/^9996 continue$/;"	l	function:run_zoltan	file:
9998	zoltan/fdriver/fdr_loadbal.f90	/^9998 continue$/;"	l	function:run_zoltan	file:
9999	zoltan/fdriver/fdr_loadbal.f90	/^9999 continue$/;"	l	function:run_zoltan	file:
9999	zoltan/fdriver/fdr_main.f90	/^9999 continue$/;"	l	program:fdriver	file:
==	zoltan/fort/ztypes.f90	/^interface operator(==)/;"	i	module:zoltan_types
A	zoltan/matlab/mmread.m	/^        A = [A(1:currenti); zeros(j,1);A(currenti+1:length(A))];$/;"	v
A	zoltan/matlab/mmread.m	/^      A  = [A; tmpr + tmpi*i];$/;"	v
A	zoltan/matlab/mmread.m	/^      A = reshape(A,rows,cols);$/;"	v
A	zoltan/matlab/mmread.m	/^    A  = tmpr+tmpi*i;$/;"	v
A	zoltan/matlab/mmread.m	/^    A = [A; fscanf(mmfile,'%f')];$/;"	v
A	zoltan/matlab/mmread.m	/^    A = fscanf(mmfile,'%f',1);$/;"	v
A	zoltan/matlab/mmread.m	/^    A = reshape(A,rows,cols);$/;"	v
A	zoltan/matlab/mmread.m	/^    A = sparse(T(:,1), T(:,2), T(:,3) + T(:,4)*sqrt(-1), rows , cols);$/;"	v
A	zoltan/matlab/mmread.m	/^    A = sparse(T(:,1), T(:,2), T(:,3), rows , cols);$/;"	v
A	zoltan/matlab/mmread.m	/^    A = sparse(T(:,1), T(:,2), ones(entries,1) , rows , cols);$/;"	v
A	zoltan/matlab/mmread.m	/^   A = A + A' - diag(diag(A));$/;"	v
A	zoltan/matlab/mmread.m	/^   A = A + A.' - diag(diag(A));$/;"	v
A	zoltan/matlab/mmread.m	/^   A = A - A';$/;"	v
A	zoltan/matlab/zoltPartSpy.m	/^   A = mmread(matFilename);$/;"	v
A	zoltan/matlab/zoltan.m	/^      A = A'*A;$/;"	v
A	zoltan/matlab/zoltan.m	/^      A = A*A';$/;"	v
A	zoltan/matlab/zoltan.m	/^      A = A+A';$/;"	v
ABS	zoltan/par/par_median_randomized.c	/^#define ABS(/;"	d	file:
ACLOCAL	zoltan/Makefile.in	/^ACLOCAL = @ACLOCAL@$/;"	m
ACLOCAL	zoltan/driver/Makefile.in	/^ACLOCAL = @ACLOCAL@$/;"	m
ACLOCAL	zoltan/fdriver/Makefile.in	/^ACLOCAL = @ACLOCAL@$/;"	m
ACLOCAL_M4	zoltan/Makefile.in	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	zoltan/driver/Makefile.in	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	zoltan/fdriver/Makefile.in	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADDR_TO_LB	zoltan/fort/cwrap.c	/^#define ADDR_TO_LB(/;"	d	file:
ADD_WEIGHT	zoltan/matrix/zoltan_matrix.h	/^typedef enum {ADD_WEIGHT=0, MAX_WEIGHT, CMP_WEIGHT} WgtOp;$/;"	e	enum:__anonbcb9ea720103
AFFECT_NOT_NULL	zoltan/graph/graph.c	/^#define AFFECT_NOT_NULL(/;"	d	file:
AGG_INNER_PRODUCT1	zoltan/phg/phg_match.c	/^#define AGG_INNER_PRODUCT1(/;"	d	file:
AGG_MATCH_OK	zoltan/phg/phg_match.c	/^#define AGG_MATCH_OK(/;"	d	file:
ALL	zoltan/Makefile.am	/^ALL = \\$/;"	m
ALL	zoltan/Makefile.in	/^ALL = \\$/;"	m
ALL_H	zoltan/Makefile.am	/^ALL_H = \\$/;"	m
ALL_H	zoltan/Makefile.in	/^ALL_H = \\$/;"	m
ALMOST_ONE	zoltan/par/par_bisect.c	/^#define ALMOST_ONE /;"	d	file:
ALTERNATE_AR	zoltan/Makefile.in	/^ALTERNATE_AR = @ALTERNATE_AR@$/;"	m
ALTERNATE_AR	zoltan/driver/Makefile.in	/^ALTERNATE_AR = @ALTERNATE_AR@$/;"	m
ALTERNATE_AR	zoltan/fdriver/Makefile.in	/^ALTERNATE_AR = @ALTERNATE_AR@$/;"	m
AMTAR	zoltan/Makefile.in	/^AMTAR = @AMTAR@$/;"	m
AMTAR	zoltan/driver/Makefile.in	/^AMTAR = @AMTAR@$/;"	m
AMTAR	zoltan/fdriver/Makefile.in	/^AMTAR = @AMTAR@$/;"	m
AM_CPPFLAGS	zoltan/Makefile.am	/^AM_CPPFLAGS = $(EXPORT_INCLUDES) @MPI_RECV_LIMIT_FLAG@$/;"	m
AM_CPPFLAGS	zoltan/Makefile.in	/^AM_CPPFLAGS = $(EXPORT_INCLUDES) @MPI_RECV_LIMIT_FLAG@$/;"	m
AM_CPPFLAGS	zoltan/driver/Makefile.am	/^AM_CPPFLAGS = $(EXPORT_INC_PATH)$/;"	m
AM_CPPFLAGS	zoltan/driver/Makefile.in	/^AM_CPPFLAGS = $(EXPORT_INC_PATH)$/;"	m
AM_CPPFLAGS	zoltan/fdriver/Makefile.am	/^AM_CPPFLAGS = $(EXPORT_INC_PATH)$/;"	m
AM_CPPFLAGS	zoltan/fdriver/Makefile.in	/^AM_CPPFLAGS = $(EXPORT_INC_PATH)$/;"	m
AM_FCFLAGS	zoltan/Makefile.am	/^AM_FCFLAGS = -I@abs_top_srcdir@\/src\/fort $/;"	m
AM_FCFLAGS	zoltan/Makefile.in	/^AM_FCFLAGS = -I@abs_top_srcdir@\/src\/fort $/;"	m
AM_FFLAGS	zoltan/Makefile.am	/^AM_FFLAGS = -I@abs_top_srcdir@\/src\/fort $/;"	m
AM_FFLAGS	zoltan/Makefile.in	/^AM_FFLAGS = -I@abs_top_srcdir@\/src\/fort $/;"	m
AM_FFLAGS	zoltan/fdriver/Makefile.am	/^AM_FFLAGS=$(FCFLAGS)$/;"	m
AM_FFLAGS	zoltan/fdriver/Makefile.in	/^AM_FFLAGS = $(FCFLAGS)$/;"	m
AM_RECURSIVE_TARGETS	zoltan/Makefile.in	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AR	zoltan/Makefile.in	/^AR = ar$/;"	m
ARFLAGS	zoltan/Makefile.in	/^ARFLAGS = cru$/;"	m
ASYNCHRONOUS	zoltan/coloring/coloring.c	/^#define ASYNCHRONOUS /;"	d	file:
ATEMP	zoltan/matlab/mmwrite.m	/^          ATEMP = tril(A);$/;"	v
ATEMP	zoltan/matlab/mmwrite.m	/^        ATEMP = tril(A);$/;"	v
ATEMP	zoltan/matlab/mmwrite.m	/^      ATEMP = tril(A);$/;"	v
AUTOCONF	zoltan/Makefile.in	/^AUTOCONF = @AUTOCONF@$/;"	m
AUTOCONF	zoltan/driver/Makefile.in	/^AUTOCONF = @AUTOCONF@$/;"	m
AUTOCONF	zoltan/fdriver/Makefile.in	/^AUTOCONF = @AUTOCONF@$/;"	m
AUTOHEADER	zoltan/Makefile.in	/^AUTOHEADER = @AUTOHEADER@$/;"	m
AUTOHEADER	zoltan/driver/Makefile.in	/^AUTOHEADER = @AUTOHEADER@$/;"	m
AUTOHEADER	zoltan/fdriver/Makefile.in	/^AUTOHEADER = @AUTOHEADER@$/;"	m
AUTOMAKE	zoltan/Makefile.in	/^AUTOMAKE = @AUTOMAKE@$/;"	m
AUTOMAKE	zoltan/driver/Makefile.in	/^AUTOMAKE = @AUTOMAKE@$/;"	m
AUTOMAKE	zoltan/fdriver/Makefile.in	/^AUTOMAKE = @AUTOMAKE@$/;"	m
AWK	zoltan/Makefile.in	/^AWK = @AWK@$/;"	m
AWK	zoltan/driver/Makefile.in	/^AWK = @AWK@$/;"	m
AWK	zoltan/fdriver/Makefile.in	/^AWK = @AWK@$/;"	m
AppObjSizes	zoltan/phg/phg_hypergraph.h	/^  int *AppObjSizes;         \/* Object sizes for on-processor objects *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
Approach	zoltan/lb/lb_const.h	/^  char Approach[MAX_PARAM_STRING_LEN];              $/;"	m	struct:Zoltan_LB_Struct	typeref:typename:char[]
Areal	zoltan/matlab/mmwrite.m	/^    Areal = 0; $/;"	v
Areal	zoltan/matlab/mmwrite.m	/^    Areal = 1; $/;"	v
Auto_Migrate	zoltan/lb/lb_const.h	/^  int Auto_Migrate;                   \/*  Flag indicating whether the load$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:int
Axis_Order	zoltan/zz/zz_const.h	/^  int Axis_Order[3];  \/* saved axis alignment information *\/$/;"	m	struct:Zoltan_Transform_Struct	typeref:typename:int[3]
BADBALANCE	zoltan/phg/phg_refinement.c	/^#define BADBALANCE /;"	d	file:
BAR1	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
BAR2	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
BIGSKIP	zoltan/driver/dr_input.c	/^#define BIGSKIP /;"	d	file:
BIG_CONSTANT	zoltan/zz/murmur3.c	/^#define BIG_CONSTANT(/;"	d	file:
BITCHECK	zoltan/phg/phg_coarse.c	/^#define BITCHECK(/;"	d	file:
BITSET	zoltan/phg/phg_coarse.c	/^#define BITSET(/;"	d	file:
BLOCK	zoltan/lb/lb_const.h	/^  BLOCK, $/;"	e	enum:Zoltan_LB_Method
BUFF_SIZE	zoltan/driver/dr_compress.c	/^#define BUFF_SIZE /;"	d	file:
BUF_LEN	zoltan/driver/dr_hg_readfile.c	/^#define BUF_LEN /;"	d	file:
BZIP2	zoltan/driver/dr_compress_const.h	/^  BZIP2 = 2,$/;"	e	enum:ZOLTAN_FILETYPE_
Box	zoltan/rcb/rcb.h	/^  struct rcb_box *Box;$/;"	m	struct:RCB_Struct	typeref:struct:rcb_box *
Box_Assign	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_BOX_ASSIGN_FN *Box_Assign;$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:ZOLTAN_LB_BOX_ASSIGN_FN *
Box_Assign	zoltan/rcb/box_assign.c	/^static void Box_Assign($/;"	f	typeref:typename:void	file:
Box_Assign1	zoltan/rcb/box_assign.c	/^static void Box_Assign1($/;"	f	typeref:typename:void	file:
Box_Assign2	zoltan/rcb/box_assign.c	/^static void Box_Assign2($/;"	f	typeref:typename:void	file:
Box_Assign3	zoltan/rcb/box_assign.c	/^static void Box_Assign3($/;"	f	typeref:typename:void	file:
Bucket	zoltan/coloring/bucket.h	/^} Bucket;$/;"	t	typeref:struct:arg
Bucket_element	zoltan/coloring/bucket.h	/^} Bucket_element;$/;"	t	typeref:struct:S
CC	zoltan/Makefile.in	/^CC = @CC@$/;"	m
CC	zoltan/driver/Makefile.in	/^CC = @CC@$/;"	m
CC	zoltan/fdriver/Makefile.in	/^CC = @CC@$/;"	m
CCDEPMODE	zoltan/Makefile.in	/^CCDEPMODE = @CCDEPMODE@$/;"	m
CCDEPMODE	zoltan/driver/Makefile.in	/^CCDEPMODE = @CCDEPMODE@$/;"	m
CCDEPMODE	zoltan/fdriver/Makefile.in	/^CCDEPMODE = @CCDEPMODE@$/;"	m
CCLD	zoltan/Makefile.in	/^CCLD = $(CC)$/;"	m
CCLD	zoltan/driver/Makefile.in	/^CCLD = $(CC)$/;"	m
CFLAGS	zoltan/Makefile.in	/^CFLAGS = @CFLAGS@$/;"	m
CFLAGS	zoltan/driver/Makefile.in	/^CFLAGS = @CFLAGS@$/;"	m
CFLAGS	zoltan/fdriver/Makefile.in	/^CFLAGS = @CFLAGS@$/;"	m
CHACO_FILE	zoltan/driver/dr_input_const.h	/^#define CHACO_FILE /;"	d
CHACO_FILE	zoltan/fdriver/fdr_input.f90	/^                             CHACO_FILE /;"	v	module:dr_input
CHECK_FOR_MPI_ERROR	zoltan/zz/zz_const.h	/^#define CHECK_FOR_MPI_ERROR(/;"	d
CHECK_IERR	zoltan/zz/zz_const.h	/^#define CHECK_IERR /;"	d
CHECK_INPUT	zoltan/fdriver/fdr_chaco_io.f90	/^logical, parameter :: CHECK_INPUT /;"	v	module:dr_chaco_io
CHECK_ZOLTAN_FREE	zoltan/order/order_tools.c	/^#define CHECK_ZOLTAN_FREE(/;"	d	file:
CHECK_ZOLTAN_FREE	zoltan/tpls/third_library.c	/^#define CHECK_ZOLTAN_FREE(/;"	d	file:
CHUNKSIZE	zoltan/tpls/third_library_tools.h	/^#define CHUNKSIZE /;"	d
CH_INIT_DIST_CONST_H	zoltan/ch/ch_init_dist_const.h	/^#define CH_INIT_DIST_CONST_H$/;"	d
CITESEER	zoltan/driver/dr_main.c	/^int CITESEER[200]; \/* Hack for Citeseer Vtx_Inc experiments *\/$/;"	v	typeref:typename:int[200]
CLOCKS_PER_SEC	zoltan/Utilities/Timer/timer.h	/^#define CLOCKS_PER_SEC /;"	d
CM	zoltan/zz/zz_const.h	/^  double CM[3];       \/* saved center of mass *\/$/;"	m	struct:Zoltan_Transform_Struct	typeref:typename:double[3]
CMAKE_EXPORT_COMPILE_COMMANDS	zoltan/CMakeLists.txt	/^SET(CMAKE_EXPORT_COMPILE_COMMANDS YES)$/;"	v
CMP_WEIGHT	zoltan/matrix/zoltan_matrix.h	/^typedef enum {ADD_WEIGHT=0, MAX_WEIGHT, CMP_WEIGHT} WgtOp;$/;"	e	enum:__anonbcb9ea720103
COARSEN_FRACTION_LIMIT	zoltan/phg/phg_Vcycle.c	/^#define COARSEN_FRACTION_LIMIT /;"	d	file:
COLORING	zoltan/Makefile.am	/^COLORING = \\$/;"	m
COLORING	zoltan/Makefile.in	/^COLORING = \\$/;"	m
COLORING_H	zoltan/Makefile.am	/^COLORING_H = \\$/;"	m
COLORING_H	zoltan/Makefile.in	/^COLORING_H = \\$/;"	m
COLORTAG	zoltan/coloring/coloring.c	/^#define COLORTAG /;"	d	file:
COLUMNS	zoltan/driver/dr_input_const.h	/^#define COLUMNS /;"	d
COMMENT_CHAR	zoltan/driver/dr_hg_io.c	/^#define COMMENT_CHAR /;"	d	file:
COMMON_DRIVER_HDRS	zoltan/driver/CMakeLists.txt	/^SET(COMMON_DRIVER_HDRS$/;"	v
COMMON_DRIVER_HDRS	zoltan/driver/Makefile.am	/^COMMON_DRIVER_HDRS = \\$/;"	m
COMMON_DRIVER_HDRS	zoltan/driver/Makefile.in	/^COMMON_DRIVER_HDRS = \\$/;"	m
COMMON_DRIVER_SRC	zoltan/driver/CMakeLists.txt	/^SET(COMMON_DRIVER_SRC$/;"	v
COMMON_DRIVER_SRC	zoltan/driver/Makefile.am	/^COMMON_DRIVER_SRC = \\$/;"	m
COMMON_DRIVER_SRC	zoltan/driver/Makefile.in	/^COMMON_DRIVER_SRC = $(srcdir)\/dr_err.c $(srcdir)\/dr_input.c \\$/;"	m
COMM_DO_ERROR	zoltan/rcb/shared.c	/^#define COMM_DO_ERROR /;"	d	file:
COMM_TAG	zoltan/phg/phg_Vcycle.c	/^#define COMM_TAG /;"	d	file:
COMPILE	zoltan/Makefile.in	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	zoltan/driver/Makefile.in	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	zoltan/fdriver/makefile	/^COMPILE = $(F90) -g$/;"	m
COMPILE_LIB	zoltan/fdriver/makefile	/^COMPILE_LIB = -lm$/;"	m
CONFIG_CLEAN_FILES	zoltan/Makefile.in	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	zoltan/driver/Makefile.in	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	zoltan/fdriver/Makefile.in	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	zoltan/Makefile.in	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	zoltan/driver/Makefile.in	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	zoltan/fdriver/Makefile.in	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	zoltan/Makefile.in	/^CONFIG_HEADER = $(top_builddir)\/src\/include\/Zoltan_config.h$/;"	m
CONFIG_HEADER	zoltan/driver/Makefile.in	/^CONFIG_HEADER = $(top_builddir)\/src\/include\/Zoltan_config.h$/;"	m
CONFIG_HEADER	zoltan/fdriver/Makefile.in	/^CONFIG_HEADER = $(top_builddir)\/src\/include\/Zoltan_config.h$/;"	m
CONFLICT_TAG	zoltan/phg/phg_match.c	/^#define CONFLICT_TAG /;"	d	file:
COPY_BUFFER	zoltan/Utilities/Communication/comm_create.c	/^#define COPY_BUFFER(/;"	d	file:
COPY_BUFFER	zoltan/lb/lb_copy.c	/^#define COPY_BUFFER(/;"	d	file:
COPY_BUFFER	zoltan/rcb/rcb_util.c	/^#define COPY_BUFFER(/;"	d	file:
COPY_BUFFER	zoltan/rcb/rib_util.c	/^#define COPY_BUFFER(/;"	d	file:
COUPLED	zoltan/tpls/parmetis_interface.h	/^#define COUPLED /;"	d
CPPFLAGS	zoltan/Makefile.in	/^CPPFLAGS = @CPPFLAGS@$/;"	m
CPPFLAGS	zoltan/driver/Makefile.in	/^CPPFLAGS = @CPPFLAGS@$/;"	m
CPPFLAGS	zoltan/fdriver/Makefile.in	/^CPPFLAGS = @CPPFLAGS@$/;"	m
CTAGS	zoltan/Makefile.in	/^CTAGS = ctags$/;"	m
CTAGS	zoltan/Makefile.in	/^CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\$/;"	t
CTAGS	zoltan/driver/Makefile.in	/^CTAGS = ctags$/;"	m
CTAGS	zoltan/driver/Makefile.in	/^CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\$/;"	t
CTAGS	zoltan/fdriver/Makefile.in	/^CTAGS = ctags$/;"	m
CTAGS	zoltan/fdriver/Makefile.in	/^CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\$/;"	t
CTX	zoltan/hier/hier.c	/^      CTX,$/;"	e	enum:zoltan_platform_names	file:
CWRAPFMANGLEH_	zoltan/fort/cwrap_fmangle.h	/^#define CWRAPFMANGLEH_$/;"	d
CXX	zoltan/Makefile.in	/^CXX = @CXX@$/;"	m
CXX	zoltan/driver/Makefile.in	/^CXX = @CXX@$/;"	m
CXX	zoltan/fdriver/Makefile.in	/^CXX = @CXX@$/;"	m
CXXCOMPILE	zoltan/driver/Makefile.in	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	zoltan/Makefile.in	/^CXXCPP = @CXXCPP@$/;"	m
CXXCPP	zoltan/driver/Makefile.in	/^CXXCPP = @CXXCPP@$/;"	m
CXXCPP	zoltan/fdriver/Makefile.in	/^CXXCPP = @CXXCPP@$/;"	m
CXXDEPMODE	zoltan/Makefile.in	/^CXXDEPMODE = @CXXDEPMODE@$/;"	m
CXXDEPMODE	zoltan/driver/Makefile.in	/^CXXDEPMODE = @CXXDEPMODE@$/;"	m
CXXDEPMODE	zoltan/fdriver/Makefile.in	/^CXXDEPMODE = @CXXDEPMODE@$/;"	m
CXXFLAGS	zoltan/Makefile.in	/^CXXFLAGS = @CXXFLAGS@$/;"	m
CXXFLAGS	zoltan/driver/Makefile.in	/^CXXFLAGS = @CXXFLAGS@$/;"	m
CXXFLAGS	zoltan/fdriver/Makefile.in	/^CXXFLAGS = @CXXFLAGS@$/;"	m
CXXLD	zoltan/driver/Makefile.in	/^CXXLD = $(CXX)$/;"	m
CXXLINK	zoltan/driver/Makefile.in	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYCLIC	zoltan/lb/lb_const.h	/^  CYCLIC, $/;"	e	enum:Zoltan_LB_Method
CYGPATH_W	zoltan/Makefile.in	/^CYGPATH_W = @CYGPATH_W@$/;"	m
CYGPATH_W	zoltan/driver/Makefile.in	/^CYGPATH_W = @CYGPATH_W@$/;"	m
CYGPATH_W	zoltan/fdriver/Makefile.in	/^CYGPATH_W = @CYGPATH_W@$/;"	m
Chaco_In_Assign_Inv	zoltan/driver/dr_main.c	/^int Chaco_In_Assign_Inv = 0;$/;"	v	typeref:typename:int
Chaco_In_Assign_Inv	zoltan/driver/dr_mainCPP.cpp	/^int Chaco_In_Assign_Inv = 0;$/;"	v	typeref:typename:int
CoarsePartition	zoltan/phg/phg.h	/^  ZOLTAN_PHG_COARSEPARTITION_FN *CoarsePartition;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:ZOLTAN_PHG_COARSEPARTITION_FN *
CoarsePartitionFns	zoltan/phg/phg_serialpartition.c	/^static ZOLTAN_PHG_COARSEPARTITION_FN* CoarsePartitionFns[] = $/;"	v	typeref:typename:ZOLTAN_PHG_COARSEPARTITION_FN * []	file:
Color	zoltan/include/zoltan_cpp.h	/^  int Color (int &num_gid_entries,$/;"	f	class:Zoltan	typeref:typename:int
Color_Test	zoltan/include/zoltan_cpp.h	/^  int Color_Test (int &num_gid_entries,$/;"	f	class:Zoltan	typeref:typename:int
Color_params	zoltan/coloring/color_test.c	/^static PARAM_VARS Color_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
Color_params	zoltan/coloring/coloring.c	/^static PARAM_VARS Color_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
Communicator	zoltan/phg/phg_comm.h	/^  MPI_Comm Communicator;  \/* MPI Communicator for all procs partitioning$/;"	m	struct:PHGCommStruct	typeref:typename:MPI_Comm
Communicator	zoltan/zz/zz_const.h	/^  MPI_Comm Communicator;          \/*  The MPI Communicator.                  *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:MPI_Comm
Compute_Adjpart	zoltan/tpls/postprocessing.c	/^static int Compute_Adjpart($/;"	f	typeref:typename:int	file:
Compute_Bal	zoltan/tpls/postprocessing.c	/^static int Compute_Bal($/;"	f	typeref:typename:int	file:
Compute_ConCut	zoltan/tpls/postprocessing.c	/^static float Compute_ConCut($/;"	f	typeref:typename:float	file:
Compute_EdgeCut	zoltan/tpls/postprocessing.c	/^static int Compute_EdgeCut($/;"	f	typeref:typename:int	file:
Compute_NetCut	zoltan/tpls/postprocessing.c	/^static float Compute_NetCut($/;"	f	typeref:typename:float	file:
Convert_To_CSR	zoltan/phg/phg_build_calls.c	/^static int Convert_To_CSR($/;"	f	typeref:typename:int	file:
Copy_Structure	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_COPY_DATA_FN *Copy_Structure;$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:ZOLTAN_LB_COPY_DATA_FN *
Create	zoltan/include/zoltan_comm_cpp.h	/^  int Create(const int &nvals, int *assign, const MPI_Comm &comm, $/;"	f	class:Zoltan_Comm	typeref:typename:int
Create	zoltan/include/zoltan_dd_cpp.h	/^  int Create(const MPI_Comm &comm, const int &num_gid, const int &num_lid, $/;"	f	class:Zoltan_DD	typeref:typename:int
D1coloring	zoltan/coloring/coloring.c	/^static int D1coloring($/;"	f	typeref:typename:int	file:
DATA_TYPE	zoltan/driver/dr_const.h	/^enum DATA_TYPE {$/;"	g
DD	zoltan/include/zoltan_dd_cpp.h	/^  Zoltan_DD_Directory *DD;$/;"	m	class:Zoltan_DD	typeref:typename:Zoltan_DD_Directory *
DD_Create.o	zoltan/Makefile.in	/^DD_Create.o: $(srcdir)\/Utilities\/DDirectory\/DD_Create.c$/;"	t
DD_Create.obj	zoltan/Makefile.in	/^DD_Create.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Create.c$/;"	t
DD_Destroy.o	zoltan/Makefile.in	/^DD_Destroy.o: $(srcdir)\/Utilities\/DDirectory\/DD_Destroy.c$/;"	t
DD_Destroy.obj	zoltan/Makefile.in	/^DD_Destroy.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Destroy.c$/;"	t
DD_Find.o	zoltan/Makefile.in	/^DD_Find.o: $(srcdir)\/Utilities\/DDirectory\/DD_Find.c$/;"	t
DD_Find.obj	zoltan/Makefile.in	/^DD_Find.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Find.c$/;"	t
DD_Find_Local	zoltan/Utilities/DDirectory/DD_Find.c	/^static int DD_Find_Local (Zoltan_DD_Directory *dd,$/;"	f	typeref:typename:int	file:
DD_Find_Msg	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^} DD_Find_Msg;$/;"	t	typeref:struct:__anonc14baf7a0208
DD_Hash2.o	zoltan/Makefile.in	/^DD_Hash2.o: $(srcdir)\/Utilities\/DDirectory\/DD_Hash2.c$/;"	t
DD_Hash2.obj	zoltan/Makefile.in	/^DD_Hash2.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Hash2.c$/;"	t
DD_Memory.o	zoltan/Makefile.in	/^DD_Memory.o: $(srcdir)\/Utilities\/DDirectory\/DD_Memory.c$/;"	t
DD_Memory.obj	zoltan/Makefile.in	/^DD_Memory.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Memory.c$/;"	t
DD_Memory_Alloc_Node	zoltan/Utilities/DDirectory/DD_Memory.c	/^DD_NodeIdx DD_Memory_Alloc_Node(Zoltan_DD_Directory *dd)$/;"	f	typeref:typename:DD_NodeIdx
DD_Memory_Alloc_Nodelist	zoltan/Utilities/DDirectory/DD_Memory.c	/^int DD_Memory_Alloc_Nodelist($/;"	f	typeref:typename:int
DD_Memory_Free_Node	zoltan/Utilities/DDirectory/DD_Memory.c	/^void DD_Memory_Free_Node($/;"	f	typeref:typename:void
DD_Node	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^typedef struct DD_Node  {$/;"	s
DD_Node	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^} DD_Node;$/;"	t	typeref:struct:DD_Node
DD_NodeIdx	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^typedef int DD_NodeIdx;   \/* Index into dd->nodelist; $/;"	t	typeref:typename:int
DD_Print.o	zoltan/Makefile.in	/^DD_Print.o: $(srcdir)\/Utilities\/DDirectory\/DD_Print.c$/;"	t
DD_Print.obj	zoltan/Makefile.in	/^DD_Print.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Print.c$/;"	t
DD_Remove.o	zoltan/Makefile.in	/^DD_Remove.o: $(srcdir)\/Utilities\/DDirectory\/DD_Remove.c$/;"	t
DD_Remove.obj	zoltan/Makefile.in	/^DD_Remove.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Remove.c$/;"	t
DD_Remove_Local	zoltan/Utilities/DDirectory/DD_Remove.c	/^static int DD_Remove_Local (Zoltan_DD_Directory *dd,$/;"	f	typeref:typename:int	file:
DD_Remove_Msg	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^}  DD_Remove_Msg;$/;"	t	typeref:struct:__anonc14baf7a0308
DD_Set_Hash_Fn.o	zoltan/Makefile.in	/^DD_Set_Hash_Fn.o: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Hash_Fn.c$/;"	t
DD_Set_Hash_Fn.obj	zoltan/Makefile.in	/^DD_Set_Hash_Fn.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Hash_Fn.c$/;"	t
DD_Set_Neighbor_Hash_Fn1.o	zoltan/Makefile.in	/^DD_Set_Neighbor_Hash_Fn1.o: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Neighbor_Hash_Fn1.c$/;"	t
DD_Set_Neighbor_Hash_Fn1.obj	zoltan/Makefile.in	/^DD_Set_Neighbor_Hash_Fn1.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Neighbor_Hash_Fn1.c$/;"	t
DD_Set_Neighbor_Hash_Fn2.o	zoltan/Makefile.in	/^DD_Set_Neighbor_Hash_Fn2.o: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Neighbor_Hash_Fn2.c$/;"	t
DD_Set_Neighbor_Hash_Fn2.obj	zoltan/Makefile.in	/^DD_Set_Neighbor_Hash_Fn2.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Neighbor_Hash_Fn2.c$/;"	t
DD_Set_Neighbor_Hash_Fn3.o	zoltan/Makefile.in	/^DD_Set_Neighbor_Hash_Fn3.o: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Neighbor_Hash_Fn3.c$/;"	t
DD_Set_Neighbor_Hash_Fn3.obj	zoltan/Makefile.in	/^DD_Set_Neighbor_Hash_Fn3.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Set_Neighbor_Hash_Fn3.c$/;"	t
DD_Stats.o	zoltan/Makefile.in	/^DD_Stats.o: $(srcdir)\/Utilities\/DDirectory\/DD_Stats.c$/;"	t
DD_Stats.obj	zoltan/Makefile.in	/^DD_Stats.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Stats.c$/;"	t
DD_Update.o	zoltan/Makefile.in	/^DD_Update.o: $(srcdir)\/Utilities\/DDirectory\/DD_Update.c$/;"	t
DD_Update.obj	zoltan/Makefile.in	/^DD_Update.obj: $(srcdir)\/Utilities\/DDirectory\/DD_Update.c$/;"	t
DD_Update_Local	zoltan/Utilities/DDirectory/DD_Update.c	/^static int DD_Update_Local (Zoltan_DD_Directory *dd,$/;"	f	typeref:typename:int	file:
DD_Update_Msg	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^} DD_Update_Msg;$/;"	t	typeref:struct:__anonc14baf7a0108
DDirectory	zoltan/driver/dr_const.h	/^  int DDirectory;           \/* Exercises data directories *\/$/;"	m	struct:Test_Flags	typeref:typename:int
DEBUG	zoltan/fdriver/fdr_param_file.f90	/^logical, parameter :: DEBUG /;"	v	module:dr_param_file
DEBUG_MEMORY	zoltan/Utilities/Memory/mem.c	/^static int DEBUG_MEMORY = 0;	\/* Flag for detecting memory leaks *\/$/;"	v	typeref:typename:int	file:
DEBUG_TRACE_DETAIL	zoltan/driver/dr_const.h	/^#define DEBUG_TRACE_DETAIL(/;"	d
DEBUG_TRACE_END	zoltan/driver/dr_const.h	/^#define DEBUG_TRACE_END(/;"	d
DEBUG_TRACE_START	zoltan/driver/dr_const.h	/^#define DEBUG_TRACE_START(/;"	d
DEFAULT_BIN_MAX	zoltan/hsfc/hsfc.h	/^static const double  DEFAULT_BIN_MAX = -2.0;$/;"	v	typeref:typename:const double
DEFAULT_BIN_MIN	zoltan/hsfc/hsfc.h	/^static const double  DEFAULT_BIN_MIN =  2.0;$/;"	v	typeref:typename:const double
DEFAULT_CHECK_GEOM	zoltan/rcb/shared.h	/^#define DEFAULT_CHECK_GEOM /;"	d
DEFAULT_HASH_TABLE_SIZE	zoltan/reftree/reftree.h	/^#define DEFAULT_HASH_TABLE_SIZE /;"	d
DEFAULT_INCLUDES	zoltan/Makefile.in	/^DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\/src\/include$/;"	m
DEFAULT_INCLUDES	zoltan/driver/Makefile.in	/^DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\/src\/include$/;"	m
DEFAULT_INCLUDES	zoltan/fdriver/Makefile.in	/^DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\/src\/include$/;"	m
DEFAULT_INITPATH	zoltan/reftree/reftree.h	/^#define DEFAULT_INITPATH /;"	d
DEFAULT_WEIGHT	zoltan/hsfc/hsfc.h	/^static const double  DEFAULT_WEIGHT = 1.0;$/;"	v	typeref:typename:const double
DEFS	zoltan/Makefile.in	/^DEFS = @DEFS@$/;"	m
DEFS	zoltan/driver/Makefile.in	/^DEFS = @DEFS@$/;"	m
DEFS	zoltan/fdriver/Makefile.in	/^DEFS = @DEFS@$/;"	m
DEPDIR	zoltan/Makefile.in	/^DEPDIR = @DEPDIR@$/;"	m
DEPDIR	zoltan/driver/Makefile.in	/^DEPDIR = @DEPDIR@$/;"	m
DEPDIR	zoltan/fdriver/Makefile.in	/^DEPDIR = @DEPDIR@$/;"	m
DEPTHMAX	zoltan/par/par_median_randomized.c	/^#define DEPTHMAX /;"	d	file:
DISCOUPLED	zoltan/tpls/parmetis_interface.h	/^#define DISCOUPLED /;"	d
DISTFILES	zoltan/Makefile.in	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	zoltan/driver/Makefile.in	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	zoltan/fdriver/Makefile.in	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	zoltan/Makefile.in	/^DIST_COMMON = $(am__include_HEADERS_DIST) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	zoltan/driver/Makefile.in	/^DIST_COMMON = README $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	zoltan/fdriver/Makefile.in	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	zoltan/Makefile.in	/^DIST_SOURCES = $(am__libzoltan_a_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	zoltan/driver/Makefile.in	/^DIST_SOURCES = $(am__zCPPdrive_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	zoltan/fdriver/Makefile.in	/^DIST_SOURCES = $(am__zfdrive_SOURCES_DIST)$/;"	m
DIST_SUBDIRS	zoltan/Makefile.in	/^DIST_SUBDIRS = . driver fdriver$/;"	m
DRIVER_NAME	zoltan/driver/dr_const.h	/^#define DRIVER_NAME /;"	d
DRIVER_NAME	zoltan/fdriver/fdr_const.f90	/^character(len=7), parameter :: DRIVER_NAME /;"	v	module:dr_const
Data_Structure	zoltan/lb/lb_const.h	/^  void *Data_Structure;           \/*  Data structure used by the load$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:void *
Debug_Chaco_Input	zoltan/driver/dr_main.c	/^int Debug_Chaco_Input = 0;$/;"	v	typeref:typename:int
Debug_Chaco_Input	zoltan/driver/dr_mainCPP.cpp	/^int Debug_Chaco_Input = 0;$/;"	v	typeref:typename:int
Debug_Driver	zoltan/driver/dr_main.c	/^int Debug_Driver = 1;$/;"	v	typeref:typename:int
Debug_Driver	zoltan/driver/dr_mainCPP.cpp	/^int Debug_Driver = 1;$/;"	v	typeref:typename:int
Debug_Level	zoltan/zz/zz_const.h	/^  int Debug_Level;                \/*  Debug level for this instance of$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Debug_Proc	zoltan/zz/zz_const.h	/^  int Debug_Proc;                 \/*  Print from this processor any debugging $/;"	m	struct:Zoltan_Struct	typeref:typename:int
Deterministic	zoltan/zz/zz_const.h	/^  int Deterministic;              \/*  Flag indicating whether algorithms used$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Do	zoltan/include/zoltan_comm_cpp.h	/^  int Do(const int &tag, char *send_data, const int &nbytes, char *recv_data)$/;"	f	class:Zoltan_Comm	typeref:typename:int
Do_Post	zoltan/include/zoltan_comm_cpp.h	/^  int Do_Post( const int &tag, char *send_data, const int &nbytes, char *recv_data)$/;"	f	class:Zoltan_Comm	typeref:typename:int
Do_Reverse	zoltan/include/zoltan_comm_cpp.h	/^  int Do_Reverse(const int &tag, char *send_data, const int &nbytes, int *sizes, char *recv_data/;"	f	class:Zoltan_Comm	typeref:typename:int
Do_Reverse_Post	zoltan/include/zoltan_comm_cpp.h	/^  int Do_Reverse_Post(const int &tag, char *send_data, const int &nbytes, int *sizes, $/;"	f	class:Zoltan_Comm	typeref:typename:int
Do_Reverse_Wait	zoltan/include/zoltan_comm_cpp.h	/^  int Do_Reverse_Wait(const int &tag, char *send_data, const int &nbytes, int *sizes, $/;"	f	class:Zoltan_Comm	typeref:typename:int
Do_Wait	zoltan/include/zoltan_comm_cpp.h	/^  int Do_Wait(const int &tag, char *send_data, const int &nbytes, char *recv_data)$/;"	f	class:Zoltan_Comm	typeref:typename:int
Dot_Struct	zoltan/rcb/shared.h	/^struct Dot_Struct {	        \/* dot = point in 3-space *\/$/;"	s
Dots	zoltan/hsfc/hsfc.h	/^   } Dots;              \/* represents objects being load-balanced *\/$/;"	t	typeref:struct:Dots
Dots	zoltan/hsfc/hsfc.h	/^typedef struct Dots {$/;"	s
Dots	zoltan/rcb/rcb.h	/^  struct Dot_Struct Dots;       \/* coordinates, weights, etc *\/$/;"	m	struct:RCB_Struct	typeref:struct:Dot_Struct
Dots	zoltan/rcb/rib.h	/^    struct Dot_Struct Dots;$/;"	m	struct:RIB_Struct	typeref:struct:Dot_Struct
Driver_Action	zoltan/driver/dr_main.c	/^int Driver_Action = 1;	\/* Flag indicating coloring, load-balancing or ordering. *\/$/;"	v	typeref:typename:int
Driver_Action	zoltan/driver/dr_mainCPP.cpp	/^int Driver_Action = 1;	\/* Flag indicating coloring, load-balancing or ordering. *\/$/;"	v	typeref:typename:int
Driver_Action	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Driver_Action /;"	v	module:dr_const
Drops	zoltan/driver/dr_const.h	/^  int Drops;                \/* Exercises point- and box-assign. *\/$/;"	m	struct:Test_Flags	typeref:typename:int
Dynamic_Graph	zoltan/driver/dr_const.h	/^  float Dynamic_Graph;      \/* Graph pertubation between iterations. *\/$/;"	m	struct:Test_Flags	typeref:typename:float
Dynamic_Weights	zoltan/driver/dr_const.h	/^  float Dynamic_Weights;    \/* Perturb weights between iterations. *\/$/;"	m	struct:Test_Flags	typeref:typename:float
ECHO_C	zoltan/Makefile.in	/^ECHO_C = @ECHO_C@$/;"	m
ECHO_C	zoltan/driver/Makefile.in	/^ECHO_C = @ECHO_C@$/;"	m
ECHO_C	zoltan/fdriver/Makefile.in	/^ECHO_C = @ECHO_C@$/;"	m
ECHO_N	zoltan/Makefile.in	/^ECHO_N = @ECHO_N@$/;"	m
ECHO_N	zoltan/driver/Makefile.in	/^ECHO_N = @ECHO_N@$/;"	m
ECHO_N	zoltan/fdriver/Makefile.in	/^ECHO_N = @ECHO_N@$/;"	m
ECHO_T	zoltan/Makefile.in	/^ECHO_T = @ECHO_T@$/;"	m
ECHO_T	zoltan/driver/Makefile.in	/^ECHO_T = @ECHO_T@$/;"	m
ECHO_T	zoltan/fdriver/Makefile.in	/^ECHO_T = @ECHO_T@$/;"	m
EDGE_GNO_TO_LNO	zoltan/phg/phg_hypergraph.h	/^#define EDGE_GNO_TO_LNO(/;"	d
EDGE_LNO_TO_GNO	zoltan/phg/phg_hypergraph.h	/^#define EDGE_LNO_TO_GNO(/;"	d
EDGE_TO_PROC_Y	zoltan/phg/phg_hypergraph.h	/^#define EDGE_TO_PROC_Y(/;"	d
ELEM_INFO	zoltan/driver/dr_const.h	/^typedef struct Element_Description ELEM_INFO;$/;"	t	typeref:struct:Element_Description
ELEM_INFO	zoltan/fdriver/fdr_const.f90	/^type ELEM_INFO$/;"	t	module:dr_const
ELEM_INFO_PTR	zoltan/driver/dr_const.h	/^typedef struct Element_Description *ELEM_INFO_PTR;$/;"	t	typeref:struct:Element_Description *
ERROR	zoltan/driver/dr_hg_readfile.c	/^#define ERROR(/;"	d	file:
ERROR_MSG	zoltan/driver/dr_err_const.h	/^typedef struct error_message ERROR_MSG;$/;"	t	typeref:struct:error_message
ERROR_MSG_PTR	zoltan/driver/dr_err_const.h	/^typedef struct error_message *ERROR_MSG_PTR;$/;"	t	typeref:struct:error_message *
ETAGS	zoltan/Makefile.in	/^ETAGS = etags$/;"	m
ETAGS	zoltan/driver/Makefile.in	/^ETAGS = etags$/;"	m
ETAGS	zoltan/fdriver/Makefile.in	/^ETAGS = etags$/;"	m
EVAL_GLOBAL_AVG	zoltan/include/zoltan_eval.h	/^#define EVAL_GLOBAL_AVG /;"	d
EVAL_GLOBAL_MAX	zoltan/include/zoltan_eval.h	/^#define EVAL_GLOBAL_MAX /;"	d
EVAL_GLOBAL_MIN	zoltan/include/zoltan_eval.h	/^#define EVAL_GLOBAL_MIN /;"	d
EVAL_GLOBAL_SUM	zoltan/include/zoltan_eval.h	/^#define EVAL_GLOBAL_SUM /;"	d
EVAL_LOCAL_SUM	zoltan/include/zoltan_eval.h	/^#define EVAL_LOCAL_SUM /;"	d
EVAL_MAX_XTRA_EWGTS	zoltan/include/zoltan_eval.h	/^#define EVAL_MAX_XTRA_EWGTS /;"	d
EVAL_MAX_XTRA_VWGTS	zoltan/include/zoltan_eval.h	/^#define EVAL_MAX_XTRA_VWGTS /;"	d
EVAL_SIZE	zoltan/include/zoltan_eval.h	/^#define EVAL_SIZE /;"	d
EXEEXT	zoltan/Makefile.in	/^EXEEXT = @EXEEXT@$/;"	m
EXEEXT	zoltan/driver/Makefile.am	/^EXEEXT = .exe$/;"	m
EXEEXT	zoltan/driver/Makefile.in	/^EXEEXT = .exe$/;"	m
EXEEXT	zoltan/fdriver/Makefile.am	/^EXEEXT = .exe$/;"	m
EXEEXT	zoltan/fdriver/Makefile.in	/^EXEEXT = .exe$/;"	m
EXPORT_INCLUDES	zoltan/Makefile.am	/^EXPORT_INCLUDES = $(ZOLTAN_LIBRARY_INCLUDES)$/;"	m
EXPORT_INCLUDES	zoltan/Makefile.in	/^EXPORT_INCLUDES = $(ZOLTAN_LIBRARY_INCLUDES)$/;"	m
EXPORT_INC_PATH	zoltan/driver/Makefile.am	/^EXPORT_INC_PATH = $(ZOLTAN_INCLUDES)$/;"	m
EXPORT_INC_PATH	zoltan/driver/Makefile.in	/^EXPORT_INC_PATH = $(ZOLTAN_INCLUDES)$/;"	m
EXPORT_INC_PATH	zoltan/fdriver/Makefile.am	/^EXPORT_INC_PATH = $(ZOLTAN_INCLUDES)$/;"	m
EXPORT_INC_PATH	zoltan/fdriver/Makefile.in	/^EXPORT_INC_PATH = $(ZOLTAN_INCLUDES)$/;"	m
EXPORT_LIBS	zoltan/driver/Makefile.am	/^EXPORT_LIBS = $(ZOLTAN_LIBS)$/;"	m
EXPORT_LIBS	zoltan/driver/Makefile.in	/^EXPORT_LIBS = $(ZOLTAN_LIBS)$/;"	m
EXPORT_LIBS	zoltan/fdriver/Makefile.am	/^EXPORT_LIBS = $(ZOLTAN_LIBS)$/;"	m
EXPORT_LIBS	zoltan/fdriver/Makefile.in	/^EXPORT_LIBS = $(ZOLTAN_LIBS)$/;"	m
EXPORT_LISTS	zoltan/driver/dr_const.h	/^  EXPORT_LISTS$/;"	e	enum:LISTS
EXTENSION_SIZE	zoltan/driver/dr_compress.c	/^#define EXTENSION_SIZE /;"	d	file:
EXTRA_DIST	zoltan/driver/Makefile.am	/^EXTRA_DIST = $(COMMON_DRIVER_HDRS) $(zCPPdrive_HDRS) $(zdrive_HDRS) \\$/;"	m
EXTRA_DIST	zoltan/driver/Makefile.in	/^EXTRA_DIST = $(COMMON_DRIVER_HDRS) $(zCPPdrive_HDRS) $(zdrive_HDRS) \\$/;"	m
EXTRA_DIST	zoltan/fdriver/Makefile.am	/^EXTRA_DIST = $(srcdir)\/CMakeLists.txt \\$/;"	m
EXTRA_DIST	zoltan/fdriver/Makefile.in	/^EXTRA_DIST = $(srcdir)\/CMakeLists.txt \\$/;"	m
EXTRA_FORTRAN	zoltan/Makefile.am	/^EXTRA_FORTRAN = \\$/;"	m
EXTRA_FORTRAN	zoltan/Makefile.in	/^EXTRA_FORTRAN = \\$/;"	m
EXTRA_FORTRAN_H	zoltan/Makefile.am	/^EXTRA_FORTRAN_H = \\$/;"	m
EXTRA_FORTRAN_H	zoltan/Makefile.in	/^EXTRA_FORTRAN_H = \\$/;"	m
EXTRA_FORTRAN_INTERFACE	zoltan/Makefile.am	/^EXTRA_FORTRAN_INTERFACE = \\$/;"	m
EXTRA_FORTRAN_INTERFACE	zoltan/Makefile.in	/^EXTRA_FORTRAN_INTERFACE = \\$/;"	m
EXTRA_PARMETIS_INTERFACE	zoltan/Makefile.am	/^EXTRA_PARMETIS_INTERFACE = \\$/;"	m
EXTRA_PARMETIS_INTERFACE	zoltan/Makefile.in	/^EXTRA_PARMETIS_INTERFACE = \\$/;"	m
EXTRA_PARMETIS_INTERFACE_H	zoltan/Makefile.am	/^EXTRA_PARMETIS_INTERFACE_H = \\$/;"	m
EXTRA_PARMETIS_INTERFACE_H	zoltan/Makefile.in	/^EXTRA_PARMETIS_INTERFACE_H = \\$/;"	m
EXTRA_SCOTCH_INTERFACE	zoltan/Makefile.am	/^EXTRA_SCOTCH_INTERFACE = \\$/;"	m
EXTRA_SCOTCH_INTERFACE	zoltan/Makefile.in	/^EXTRA_SCOTCH_INTERFACE = \\$/;"	m
EXTRA_SCOTCH_INTERFACE_H	zoltan/Makefile.am	/^EXTRA_SCOTCH_INTERFACE_H = \\$/;"	m
EXTRA_SCOTCH_INTERFACE_H	zoltan/Makefile.in	/^EXTRA_SCOTCH_INTERFACE_H = \\$/;"	m
EXTRA_libzoltan_a_SOURCES	zoltan/Makefile.am	/^EXTRA_libzoltan_a_SOURCES = \\$/;"	m
EXTRA_libzoltan_a_SOURCES	zoltan/Makefile.in	/^EXTRA_libzoltan_a_SOURCES = \\$/;"	m
E_TYPE_ERROR	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
E_Type	zoltan/driver/dr_elem_const.h	/^              HEXSHELL, NULL_EL} E_Type;$/;"	t	typeref:enum:__anon462eee3b0103
EdgeSizeThreshold	zoltan/phg/phg.h	/^  float EdgeSizeThreshold;  \/* % of global vtxs beyond which an edge is $/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
EdgeWeightDim	zoltan/phg/phg_hypergraph.h	/^  int EdgeWeightDim;    \/* number of weight dimensions for a hyperedge *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
Edge_Info	zoltan/tpls/third_library_tools.h	/^struct Edge_Info {$/;"	s
Edge_Weight_Dim	zoltan/zz/zz_const.h	/^  int Edge_Weight_Dim;            \/*  Dimension of the edge weights, $/;"	m	struct:Zoltan_Struct	typeref:typename:int
Element_Description	zoltan/driver/dr_const.h	/^struct Element_Description$/;"	s
Esize	zoltan/phg/phg_hypergraph.h	/^  int *Esize;               \/* number of vertices in hyperedge *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
Evecs	zoltan/zz/zz_const.h	/^  double Evecs[3][3]; \/* saved eigenvectors *\/$/;"	m	struct:Zoltan_Transform_Struct	typeref:typename:double[3][3]
Ewgt	zoltan/phg/phg_hypergraph.h	/^  float *Ewgt;              \/* Edge weights for each hyperedge *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:float *
Exchange_Sizes	zoltan/include/zoltan_comm_cpp.h	/^  static int Exchange_Sizes( int *sizes_to, int *procs_to, $/;"	f	class:Zoltan_Comm	typeref:typename:int
Export_Lists_Special	zoltan/driver/dr_loadbal.c	/^static int Export_Lists_Special = 0;$/;"	v	typeref:typename:int	file:
F77	zoltan/fdriver/Makefile.am	/^F77=$(FC)$/;"	m
F77	zoltan/fdriver/Makefile.in	/^F77 = $(FC)$/;"	m
F77COMPILE	zoltan/fdriver/Makefile.in	/^F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)$/;"	m
F77LD	zoltan/fdriver/Makefile.in	/^F77LD = $(F77)$/;"	m
F77LINK	zoltan/fdriver/Makefile.in	/^F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \\$/;"	m
F90LB_TEMP	zoltan/fort/cwrap.c	/^#define F90LB_TEMP /;"	d	file:
FALSE	zoltan/Utilities/Communication/comm.h	/^#define FALSE /;"	d
FALSE	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define FALSE /;"	d
FALSE	zoltan/ch/ch_input_const.h	/^#define FALSE /;"	d
FALSE	zoltan/zz/zz_const.h	/^#define FALSE /;"	d
FARG_SRC	zoltan/fdriver/Makefile.am	/^FARG_SRC = $(srcdir)\/farg_nagf95.f$/;"	m
FARG_SRC	zoltan/fdriver/Makefile.am	/^FARG_SRC = $(srcdir)\/farg_typical.f$/;"	m
FATALERROR	zoltan/Utilities/Timer/zoltan_timer.c	/^#define FATALERROR(/;"	d	file:
FATAL_ERROR	zoltan/zz/zz_const.h	/^#define FATAL_ERROR(/;"	d
FC	zoltan/Makefile.in	/^FC = @FC@$/;"	m
FC	zoltan/driver/Makefile.in	/^FC = @FC@$/;"	m
FC	zoltan/fdriver/Makefile.in	/^FC = @FC@$/;"	m
FCCOMPILE	zoltan/Makefile.in	/^FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)$/;"	m
FCCOMPILE	zoltan/fdriver/Makefile.in	/^FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)$/;"	m
FCFLAGS	zoltan/Makefile.in	/^FCFLAGS = @FCFLAGS@$/;"	m
FCFLAGS	zoltan/driver/Makefile.in	/^FCFLAGS = @FCFLAGS@$/;"	m
FCFLAGS	zoltan/fdriver/Makefile.in	/^FCFLAGS = @FCFLAGS@$/;"	m
FCFLAGS_f	zoltan/Makefile.in	/^FCFLAGS_f = @FCFLAGS_f@$/;"	m
FCFLAGS_f	zoltan/driver/Makefile.in	/^FCFLAGS_f = @FCFLAGS_f@$/;"	m
FCFLAGS_f	zoltan/fdriver/Makefile.in	/^FCFLAGS_f = @FCFLAGS_f@$/;"	m
FCFLAGS_f90	zoltan/Makefile.in	/^FCFLAGS_f90 = @FCFLAGS_f90@$/;"	m
FCFLAGS_f90	zoltan/driver/Makefile.in	/^FCFLAGS_f90 = @FCFLAGS_f90@$/;"	m
FCFLAGS_f90	zoltan/fdriver/Makefile.in	/^FCFLAGS_f90 = @FCFLAGS_f90@$/;"	m
FCLD	zoltan/Makefile.in	/^FCLD = $(FC)$/;"	m
FCLD	zoltan/fdriver/Makefile.in	/^FCLD = $(FC)$/;"	m
FCLIBS	zoltan/Makefile.in	/^FCLIBS = @FCLIBS@$/;"	m
FCLIBS	zoltan/driver/Makefile.in	/^FCLIBS = @FCLIBS@$/;"	m
FCLIBS	zoltan/fdriver/Makefile.in	/^FCLIBS = @FCLIBS@$/;"	m
FCLINK	zoltan/Makefile.in	/^FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \\$/;"	m
FCLINK	zoltan/fdriver/Makefile.in	/^FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \\$/;"	m
FC_MAJOR_VERSION	zoltan/Makefile.in	/^FC_MAJOR_VERSION = @FC_MAJOR_VERSION@$/;"	m
FC_MAJOR_VERSION	zoltan/driver/Makefile.in	/^FC_MAJOR_VERSION = @FC_MAJOR_VERSION@$/;"	m
FC_MAJOR_VERSION	zoltan/fdriver/Makefile.in	/^FC_MAJOR_VERSION = @FC_MAJOR_VERSION@$/;"	m
FC_MODNAME	zoltan/Makefile.in	/^FC_MODNAME = @FC_MODNAME@$/;"	m
FC_MODNAME	zoltan/driver/Makefile.in	/^FC_MODNAME = @FC_MODNAME@$/;"	m
FC_MODNAME	zoltan/fdriver/Makefile.in	/^FC_MODNAME = @FC_MODNAME@$/;"	m
FC_MODNAME_Q	zoltan/Makefile.in	/^FC_MODNAME_Q = @FC_MODNAME_Q@$/;"	m
FC_MODNAME_Q	zoltan/driver/Makefile.in	/^FC_MODNAME_Q = @FC_MODNAME_Q@$/;"	m
FC_MODNAME_Q	zoltan/fdriver/Makefile.in	/^FC_MODNAME_Q = @FC_MODNAME_Q@$/;"	m
FC_VENDOR	zoltan/Makefile.in	/^FC_VENDOR = @FC_VENDOR@$/;"	m
FC_VENDOR	zoltan/driver/Makefile.in	/^FC_VENDOR = @FC_VENDOR@$/;"	m
FC_VENDOR	zoltan/fdriver/Makefile.in	/^FC_VENDOR = @FC_VENDOR@$/;"	m
FC_VERSION	zoltan/Makefile.in	/^FC_VERSION = @FC_VERSION@$/;"	m
FC_VERSION	zoltan/driver/Makefile.in	/^FC_VERSION = @FC_VERSION@$/;"	m
FC_VERSION	zoltan/fdriver/Makefile.in	/^FC_VERSION = @FC_VERSION@$/;"	m
FC_VERSION_STRING	zoltan/Makefile.in	/^FC_VERSION_STRING = @FC_VERSION_STRING@$/;"	m
FC_VERSION_STRING	zoltan/driver/Makefile.in	/^FC_VERSION_STRING = @FC_VERSION_STRING@$/;"	m
FC_VERSION_STRING	zoltan/fdriver/Makefile.in	/^FC_VERSION_STRING = @FC_VERSION_STRING@$/;"	m
FDRIVER_SUBDIR	zoltan/Makefile.am	/^FDRIVER_SUBDIR =$/;"	m
FDRIVER_SUBDIR	zoltan/Makefile.in	/^FDRIVER_SUBDIR = $(am__append_2)$/;"	m
FIELD_DIST_Y	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_DIST_Y /;"	d
FIELD_DO_NOT_FREE_WHEN_DONE	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_DO_NOT_FREE_WHEN_DONE(/;"	d
FIELD_FREE_WHEN_DONE	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_FREE_WHEN_DONE(/;"	d
FIELD_NUMBER_OF_FIELDS	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_NUMBER_OF_FIELDS /;"	d
FIELD_PINGNO	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_PINGNO /;"	d
FIELD_PINWGT	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_PINWGT /;"	d
FIELD_QUERY_DO_FREE	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_QUERY_DO_FREE(/;"	d
FIELD_YGID	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_YGID /;"	d
FIELD_YSTART	zoltan/matrix/zoltan_matrix.h	/^#define FIELD_YSTART /;"	d
FILENAME_MAX	zoltan/driver/dr_const.h	/^#define FILENAME_MAX /;"	d
FILENAME_MAX	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT), parameter :: FILENAME_MAX /;"	v	module:dr_const
FILE_NAME_SIZE	zoltan/driver/dr_compress.c	/^#define FILE_NAME_SIZE /;"	d	file:
FOMAXDIM	zoltan/tpls/postprocessing.c	/^#define FOMAXDIM /;"	d	file:
FORBIDTAG	zoltan/coloring/coloring.c	/^#define FORBIDTAG /;"	d	file:
FORCE_FAST	zoltan/tpls/third_library_const.h	/^#define FORCE_FAST /;"	d
FORCE_INLINE	zoltan/zz/murmur3.c	/^#define FORCE_INLINE	/;"	d	file:
FORCE_INLINE	zoltan/zz/murmur3.c	/^#define FORCE_INLINE /;"	d	file:
FORTRAN	zoltan/Makefile.am	/^FORTRAN = $(EXTRA_FORTRAN)$/;"	m
FORTRAN	zoltan/Makefile.am	/^FORTRAN =$/;"	m
FORTRAN_H	zoltan/Makefile.am	/^FORTRAN_H =$(EXTRA_FORTRAN_H)$/;"	m
FORTRAN_H	zoltan/Makefile.am	/^FORTRAN_H =$/;"	m
FORTRAN_MODULES	zoltan/Makefile.am	/^FORTRAN_MODULES = \\$/;"	m
FORWARD	zoltan/coloring/coloring.c	/^#define FORWARD /;"	d	file:
FRACTION_SMALL	zoltan/par/par_bisect.c	/^#define FRACTION_SMALL /;"	d	file:
Find	zoltan/include/zoltan_dd_cpp.h	/^  int Find (ZOLTAN_ID_PTR gid, ZOLTAN_ID_PTR lid, char *data, $/;"	f	class:Zoltan_DD	typeref:typename:int
FirstRepart	zoltan/phg/phg_build.c	/^#define FirstRepart(/;"	d	file:
Fixed_Objects	zoltan/driver/dr_const.h	/^  int Fixed_Objects;        \/* Registers functions for assigning fixed$/;"	m	struct:Test_Flags	typeref:typename:int
Fortran	zoltan/zz/zz_const.h	/^  int Fortran;                    \/*  1 if created from Fortran, 0 otherwise *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Free_Structure	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_FREE_DATA_FN *Free_Structure;$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:ZOLTAN_LB_FREE_DATA_FN *
G2LHash	zoltan/coloring/g2l_hash.h	/^typedef struct G2L_Hash G2LHash;$/;"	t	typeref:struct:G2L_Hash
G2LHashNode	zoltan/coloring/g2l_hash.h	/^typedef struct G2L_Hash_Node G2LHashNode;$/;"	t	typeref:struct:G2L_Hash_Node
G2L_Hash	zoltan/coloring/g2l_hash.h	/^struct G2L_Hash {$/;"	s
G2L_Hash_Node	zoltan/coloring/g2l_hash.h	/^struct G2L_Hash_Node {$/;"	s
GCC_VERSION	zoltan/zz/murmur3.c	/^#define GCC_VERSION /;"	d	file:
GET_RANK	zoltan/Utilities/Memory/mem.c	/^#define GET_RANK(/;"	d	file:
GLOBAL_DBGLVL	zoltan/tpls/parmetis_interface.h	/^#define GLOBAL_DBGLVL	/;"	d
GLOBAL_SEED	zoltan/tpls/parmetis_interface.h	/^#define GLOBAL_SEED	/;"	d
GLORY	zoltan/hier/hier.c	/^      GLORY,$/;"	e	enum:zoltan_platform_names	file:
GNO	zoltan/matrix/zoltan_matrix.h	/^    ZOLTAN_GNO_TYPE GNO[2];$/;"	m	struct:Zoltan_Arc_	typeref:typename:ZOLTAN_GNO_TYPE[2]
GNO_TO_LNO	zoltan/phg/phg_hypergraph.h	/^#define GNO_TO_LNO(/;"	d
GRAPH	zoltan/Makefile.am	/^GRAPH = \\$/;"	m
GRAPH	zoltan/Makefile.in	/^GRAPH = \\$/;"	m
GRAPH	zoltan/lb/lb_const.h	/^  GRAPH,$/;"	e	enum:Zoltan_LB_Method
GRAPH_H	zoltan/Makefile.am	/^GRAPH_H = \\$/;"	m
GRAPH_H	zoltan/Makefile.in	/^GRAPH_H = \\$/;"	m
GRAPH_PARTITIONING	zoltan/driver/dr_const.h	/^  GRAPH_PARTITIONING,$/;"	e	enum:PARTITIONING_TYPE
GTAGS	zoltan/Makefile.in	/^GTAGS:$/;"	t
GTAGS	zoltan/driver/Makefile.in	/^GTAGS:$/;"	t
GTAGS	zoltan/fdriver/Makefile.in	/^GTAGS:$/;"	t
GZIP	zoltan/driver/dr_compress_const.h	/^  GZIP = 1,$/;"	e	enum:ZOLTAN_FILETYPE_
Gen_Error	zoltan/driver/dr_err_const.h	/^#define Gen_Error(/;"	d
Gen_Files	zoltan/driver/dr_const.h	/^  int Gen_Files;            \/* Exercise output file generation. *\/$/;"	m	struct:Test_Flags	typeref:typename:int
Generate_Files	zoltan/include/zoltan_cpp.h	/^  int Generate_Files( std::string & fname,$/;"	f	class:Zoltan	typeref:typename:int
Get_Border_Obj_List	zoltan/zz/zz_const.h	/^  ZOLTAN_BORDER_OBJ_LIST_FN *Get_Border_Obj_List;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_BORDER_OBJ_LIST_FN *
Get_Border_Obj_List_Data	zoltan/zz/zz_const.h	/^  void *Get_Border_Obj_List_Data;      \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Border_Obj_List_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_BORDER_OBJ_LIST_FORT_FN *Get_Border_Obj_List_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_BORDER_OBJ_LIST_FORT_FN *
Get_C_Handle	zoltan/include/zoltan_cpp.h	/^  Zoltan_Struct *Get_C_Handle(void)$/;"	f	class:Zoltan	typeref:typename:Zoltan_Struct *
Get_Child_List	zoltan/zz/zz_const.h	/^  ZOLTAN_CHILD_LIST_FN *Get_Child_List;        $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_CHILD_LIST_FN *
Get_Child_List_Data	zoltan/zz/zz_const.h	/^  void *Get_Child_List_Data;           \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Child_List_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_CHILD_LIST_FORT_FN *Get_Child_List_Fort;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_CHILD_LIST_FORT_FN *
Get_Child_Weight	zoltan/zz/zz_const.h	/^  ZOLTAN_CHILD_WEIGHT_FN *Get_Child_Weight;    $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_CHILD_WEIGHT_FN *
Get_Child_Weight_Data	zoltan/zz/zz_const.h	/^  void *Get_Child_Weight_Data;         \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Child_Weight_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_CHILD_WEIGHT_FORT_FN *Get_Child_Weight_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_CHILD_WEIGHT_FORT_FN *
Get_Coarse_Obj_List	zoltan/zz/zz_const.h	/^  ZOLTAN_COARSE_OBJ_LIST_FN *Get_Coarse_Obj_List;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_COARSE_OBJ_LIST_FN *
Get_Coarse_Obj_List_Data	zoltan/zz/zz_const.h	/^  void *Get_Coarse_Obj_List_Data;      \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Coarse_Obj_List_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_COARSE_OBJ_LIST_FORT_FN *Get_Coarse_Obj_List_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_COARSE_OBJ_LIST_FORT_FN *
Get_Edge_List	zoltan/zz/zz_const.h	/^  ZOLTAN_EDGE_LIST_FN *Get_Edge_List;  \/* Fn ptr to get an object's edge list.*\/$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_EDGE_LIST_FN *
Get_Edge_List_Data	zoltan/zz/zz_const.h	/^  void *Get_Edge_List_Data;            \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Edge_List_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_EDGE_LIST_FORT_FN *Get_Edge_List_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_EDGE_LIST_FORT_FN *
Get_Edge_List_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_EDGE_LIST_MULTI_FN *Get_Edge_List_Multi;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_EDGE_LIST_MULTI_FN *
Get_Edge_List_Multi_Data	zoltan/zz/zz_const.h	/^  void *Get_Edge_List_Multi_Data;            \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Edge_List_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_EDGE_LIST_MULTI_FORT_FN *Get_Edge_List_Multi_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_EDGE_LIST_MULTI_FORT_FN *
Get_First_Border_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_FIRST_BORDER_OBJ_FN *Get_First_Border_Obj;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIRST_BORDER_OBJ_FN *
Get_First_Border_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_First_Border_Obj_Data;     \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_First_Border_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_FIRST_BORDER_OBJ_FORT_FN *Get_First_Border_Obj_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIRST_BORDER_OBJ_FORT_FN *
Get_First_Coarse_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_FIRST_COARSE_OBJ_FN *Get_First_Coarse_Obj;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIRST_COARSE_OBJ_FN *
Get_First_Coarse_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_First_Coarse_Obj_Data;     \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_First_Coarse_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_FIRST_COARSE_OBJ_FORT_FN *Get_First_Coarse_Obj_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIRST_COARSE_OBJ_FORT_FN *
Get_First_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_FIRST_OBJ_FN *Get_First_Obj;  \/* Fn ptr to get the first   $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIRST_OBJ_FN *
Get_First_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_First_Obj_Data;            \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_First_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_FIRST_OBJ_FORT_FN *Get_First_Obj_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIRST_OBJ_FORT_FN *
Get_Fixed_Obj_List	zoltan/zz/zz_const.h	/^  ZOLTAN_FIXED_OBJ_LIST_FN *Get_Fixed_Obj_List;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIXED_OBJ_LIST_FN *
Get_Fixed_Obj_List_Data	zoltan/zz/zz_const.h	/^  void *Get_Fixed_Obj_List_Data;            \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Fixed_Obj_List_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_FIXED_OBJ_LIST_FORT_FN *Get_Fixed_Obj_List_Fort;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_FIXED_OBJ_LIST_FORT_FN *
Get_Geom	zoltan/zz/zz_const.h	/^  ZOLTAN_GEOM_FN *Get_Geom;            \/* Fn ptr to get an object's$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_GEOM_FN *
Get_Geom_Data	zoltan/zz/zz_const.h	/^  void *Get_Geom_Data;                 \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Geom_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_GEOM_FORT_FN *Get_Geom_Fort;  \/* Fortran version            *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_GEOM_FORT_FN *
Get_Geom_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_GEOM_MULTI_FN *Get_Geom_Multi;        $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_GEOM_MULTI_FN *
Get_Geom_Multi_Data	zoltan/zz/zz_const.h	/^  void *Get_Geom_Multi_Data;           \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Geom_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_GEOM_MULTI_FORT_FN *Get_Geom_Multi_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_GEOM_MULTI_FORT_FN *
Get_HG_CS	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_CS_FN *Get_HG_CS;    $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_CS_FN *
Get_HG_CS_Data	zoltan/zz/zz_const.h	/^  void *Get_HG_CS_Data;                \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_HG_CS_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_CS_FORT_FN *Get_HG_CS_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_CS_FORT_FN *
Get_HG_Edge_Wts	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_EDGE_WTS_FN *Get_HG_Edge_Wts;    $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_EDGE_WTS_FN *
Get_HG_Edge_Wts_Data	zoltan/zz/zz_const.h	/^  void *Get_HG_Edge_Wts_Data;                \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_HG_Edge_Wts_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_EDGE_WTS_FORT_FN *Get_HG_Edge_Wts_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_EDGE_WTS_FORT_FN *
Get_HG_Size_CS	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_SIZE_CS_FN *Get_HG_Size_CS;    $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_SIZE_CS_FN *
Get_HG_Size_CS_Data	zoltan/zz/zz_const.h	/^  void *Get_HG_Size_CS_Data;         \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_HG_Size_CS_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_SIZE_CS_FORT_FN *Get_HG_Size_CS_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_SIZE_CS_FORT_FN *
Get_HG_Size_Edge_Wts	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_SIZE_EDGE_WTS_FN *Get_HG_Size_Edge_Wts;    $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_SIZE_EDGE_WTS_FN *
Get_HG_Size_Edge_Wts_Data	zoltan/zz/zz_const.h	/^  void *Get_HG_Size_Edge_Wts_Data;     \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_HG_Size_Edge_Wts_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HG_SIZE_EDGE_WTS_FORT_FN *Get_HG_Size_Edge_Wts_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HG_SIZE_EDGE_WTS_FORT_FN *
Get_Hier_Method	zoltan/zz/zz_const.h	/^  ZOLTAN_HIER_METHOD_FN *Get_Hier_Method;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HIER_METHOD_FN *
Get_Hier_Method_Data	zoltan/zz/zz_const.h	/^  void *Get_Hier_Method_Data;          \/* Ptr to user defined data to be passed$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Hier_Method_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HIER_METHOD_FORT_FN *Get_Hier_Method_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HIER_METHOD_FORT_FN *
Get_Hier_Num_Levels	zoltan/zz/zz_const.h	/^  ZOLTAN_HIER_NUM_LEVELS_FN *Get_Hier_Num_Levels;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HIER_NUM_LEVELS_FN *
Get_Hier_Num_Levels_Data	zoltan/zz/zz_const.h	/^  void *Get_Hier_Num_Levels_Data;      \/* Ptr to user defined data to be passed$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Hier_Num_Levels_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HIER_NUM_LEVELS_FORT_FN *Get_Hier_Num_Levels_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HIER_NUM_LEVELS_FORT_FN *
Get_Hier_Part	zoltan/zz/zz_const.h	/^  ZOLTAN_HIER_PART_FN *Get_Hier_Part;  \/* Function that returns the part$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HIER_PART_FN *
Get_Hier_Part_Data	zoltan/zz/zz_const.h	/^  void *Get_Hier_Part_Data;            \/* Ptr to user defined data to be passed$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Hier_Part_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_HIER_PART_FORT_FN *Get_Hier_Part_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_HIER_PART_FORT_FN *
Get_Next_Border_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NEXT_BORDER_OBJ_FN *Get_Next_Border_Obj;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NEXT_BORDER_OBJ_FN *
Get_Next_Border_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Next_Border_Obj_Data;      \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Next_Border_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NEXT_BORDER_OBJ_FORT_FN *Get_Next_Border_Obj_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NEXT_BORDER_OBJ_FORT_FN *
Get_Next_Coarse_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NEXT_COARSE_OBJ_FN *Get_Next_Coarse_Obj;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NEXT_COARSE_OBJ_FN *
Get_Next_Coarse_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Next_Coarse_Obj_Data;      \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Next_Coarse_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NEXT_COARSE_OBJ_FORT_FN *Get_Next_Coarse_Obj_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NEXT_COARSE_OBJ_FORT_FN *
Get_Next_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NEXT_OBJ_FN *Get_Next_Obj;    \/* Fn ptr to get the next   $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NEXT_OBJ_FN *
Get_Next_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Next_Obj_Data;             \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Next_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NEXT_OBJ_FORT_FN *Get_Next_Obj_Fort;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NEXT_OBJ_FORT_FN *
Get_Num_Border_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_BORDER_OBJ_FN *Get_Num_Border_Obj;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_BORDER_OBJ_FN *
Get_Num_Border_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Border_Obj_Data;       \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Border_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_BORDER_OBJ_FORT_FN *Get_Num_Border_Obj_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_BORDER_OBJ_FORT_FN *
Get_Num_Child	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_CHILD_FN *Get_Num_Child;  \/* Fn ptr to get the number of$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_CHILD_FN *
Get_Num_Child_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Child_Data;            \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Child_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_CHILD_FORT_FN *Get_Num_Child_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_CHILD_FORT_FN *
Get_Num_Coarse_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_COARSE_OBJ_FN *Get_Num_Coarse_Obj;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_COARSE_OBJ_FN *
Get_Num_Coarse_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Coarse_Obj_Data;       \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Coarse_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_COARSE_OBJ_FORT_FN *Get_Num_Coarse_Obj_Fort; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_COARSE_OBJ_FORT_FN *
Get_Num_Edges	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_EDGES_FN *Get_Num_Edges;  \/* Fn ptr to get an object's$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_EDGES_FN *
Get_Num_Edges_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Edges_Data;            \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Edges_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_EDGES_FORT_FN *Get_Num_Edges_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_EDGES_FORT_FN *
Get_Num_Edges_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_EDGES_MULTI_FN *Get_Num_Edges_Multi;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_EDGES_MULTI_FN *
Get_Num_Edges_Multi_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Edges_Multi_Data;      \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Edges_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_EDGES_MULTI_FORT_FN *Get_Num_Edges_Multi_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_EDGES_MULTI_FORT_FN *
Get_Num_Fixed_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_FIXED_OBJ_FN *Get_Num_Fixed_Obj;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_FIXED_OBJ_FN *
Get_Num_Fixed_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Fixed_Obj_Data;             \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Fixed_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_FIXED_OBJ_FORT_FN *Get_Num_Fixed_Obj_Fort;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_FIXED_OBJ_FORT_FN *
Get_Num_Geom	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_GEOM_FN *Get_Num_Geom;    \/* Fn ptr to get an object's$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_GEOM_FN *
Get_Num_Geom_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Geom_Data;             \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Geom_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_GEOM_FORT_FN *Get_Num_Geom_Fort;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_GEOM_FORT_FN *
Get_Num_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_OBJ_FN *Get_Num_Obj;      \/* Fn ptr to get a proc's  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_OBJ_FN *
Get_Num_Obj_Data	zoltan/zz/zz_const.h	/^  void *Get_Num_Obj_Data;              \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Num_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_NUM_OBJ_FORT_FN *Get_Num_Obj_Fort;    $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_NUM_OBJ_FORT_FN *
Get_Obj_List	zoltan/zz/zz_const.h	/^  ZOLTAN_OBJ_LIST_FN *Get_Obj_List;    \/* Fn ptr to get all local$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_OBJ_LIST_FN *
Get_Obj_List_Data	zoltan/zz/zz_const.h	/^  void *Get_Obj_List_Data;             \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Obj_List_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_OBJ_LIST_FORT_FN *Get_Obj_List_Fort;  $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_OBJ_LIST_FORT_FN *
Get_Obj_Size	zoltan/zz/zz_const.h	/^  ZOLTAN_OBJ_SIZE_FN *Get_Obj_Size;    \/* Function that returns the size of$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_OBJ_SIZE_FN *
Get_Obj_Size_Data	zoltan/zz/zz_const.h	/^  void *Get_Obj_Size_Data;             \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Obj_Size_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_OBJ_SIZE_FORT_FN *Get_Obj_Size_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_OBJ_SIZE_FORT_FN *
Get_Obj_Size_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_OBJ_SIZE_MULTI_FN *Get_Obj_Size_Multi;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_OBJ_SIZE_MULTI_FN *
Get_Obj_Size_Multi_Data	zoltan/zz/zz_const.h	/^  void *Get_Obj_Size_Multi_Data;       \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Obj_Size_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_OBJ_SIZE_MULTI_FORT_FN *Get_Obj_Size_Multi_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_OBJ_SIZE_MULTI_FORT_FN *
Get_Part	zoltan/zz/zz_const.h	/^  ZOLTAN_PART_FN *Get_Part;            \/* Fn ptr to get an object's$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PART_FN *
Get_Part_Data	zoltan/zz/zz_const.h	/^  void *Get_Part_Data;                 \/* Ptr to user defined data$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Part_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_PART_FORT_FN *Get_Part_Fort;  \/* Fortran version            *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PART_FORT_FN *
Get_Part_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_PART_MULTI_FN *Get_Part_Multi;\/* Fn ptr to get objects'$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PART_MULTI_FN *
Get_Part_Multi_Data	zoltan/zz/zz_const.h	/^  void *Get_Part_Multi_Data;           \/* Ptr to user defined data to be $/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Get_Part_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_PART_MULTI_FORT_FN *Get_Part_Multi_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PART_MULTI_FORT_FN *
Get_Processor_Name	zoltan/zz/zz_const.h	/^  ZOLTAN_PROC_NAME_FN *Get_Processor_Name; $/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PROC_NAME_FN *
Get_Processor_Name_Data	zoltan/zz/zz_const.h	/^  void *Get_Processor_Name_Data;       \/* Ptr to user defined data   *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Global_IDs	zoltan/rcb/rcb.h	/^  ZOLTAN_ID_PTR Global_IDs;  \/* Pointer to array of global IDs; global ID of $/;"	m	struct:RCB_Struct	typeref:typename:ZOLTAN_ID_PTR
Global_IDs	zoltan/rcb/rib.h	/^    ZOLTAN_ID_PTR Global_IDs;       \/* This array is NOT used if Zoltan_RB_Use_IDs returns$/;"	m	struct:RIB_Struct	typeref:typename:ZOLTAN_ID_PTR
Global_num	zoltan/lb/lb_const.h	/^  int Global_num;      \/*  Global part numbers? *\/$/;"	m	struct:Zoltan_part_info	typeref:typename:int
GnRepartEdge	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE GnRepartEdge;  \/* Global number of repartition edges added for$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE
GnRepartVtx	zoltan/phg/phg_hypergraph.h	/^  int GnRepartVtx;          \/* Global number of repartition vtxs added for$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
Gnuplot	zoltan/driver/dr_const.h	/^  int Gnuplot;$/;"	m	struct:Output_Flags	typeref:typename:int
Gnvtxs	zoltan/ch/ch_init_dist.c	/^static ZOLTAN_GNO_TYPE Gnvtxs;     \/* Global number of vertices (across all procs)  *\/$/;"	v	typeref:typename:ZOLTAN_GNO_TYPE	file:
Graph_Callbacks	zoltan/driver/dr_const.h	/^  int Graph_Callbacks;      \/* Register and test graph callbacks *\/$/;"	m	struct:Test_Flags	typeref:typename:int
Graph_Package_params	zoltan/tpls/third_library_params.h	/^static PARAM_VARS Graph_Package_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
Graph_params	zoltan/tpls/preprocessing.c	/^static PARAM_VARS Graph_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
Grouping	zoltan/phg/phg_hypergraph.h	/^typedef int *Grouping;  \/* length |V|, grouping information of vertices *\/$/;"	t	typeref:typename:int *
HA	zoltan/Makefile.am	/^HA = \\$/;"	m
HA	zoltan/Makefile.in	/^HA = \\$/;"	m
HANDLE_ISOLATED_VERTICES	zoltan/phg/phg_refinement.c	/^#define HANDLE_ISOLATED_VERTICES /;"	d	file:
HAVE_LONG_LONG_INT	zoltan/include/zoltan_types.h	/^#define HAVE_LONG_LONG_INT$/;"	d
HAVE_PERL	zoltan/Makefile.in	/^HAVE_PERL = @HAVE_PERL@$/;"	m
HAVE_PERL	zoltan/driver/Makefile.in	/^HAVE_PERL = @HAVE_PERL@$/;"	m
HAVE_PERL	zoltan/fdriver/Makefile.in	/^HAVE_PERL = @HAVE_PERL@$/;"	m
HAVE_PROTOTYPES	zoltan/include/zoltan_mem.h	/^#       define	HAVE_PROTOTYPES$/;"	d
HAVE_PROTOTYPES	zoltan/params/params_const.h	/^#       define	HAVE_PROTOTYPES$/;"	d
HA_H	zoltan/Makefile.am	/^HA_H = \\$/;"	m
HA_H	zoltan/Makefile.in	/^HA_H = \\$/;"	m
HEADERS	zoltan/Makefile.in	/^HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)$/;"	m
HEAP	zoltan/zz/zz_heap.h	/^   } HEAP;$/;"	t	typeref:struct:__anon5ef29df60108
HEINFO_ENTRIES	zoltan/lb/lb_remap.c	/^#define HEINFO_ENTRIES /;"	d	file:
HEX1	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
HEX2	zoltan/driver/dr_elem_const.h	/^              S_HEX2, HEX2, TET1, TET2, WEDGE1, WEDGE2,$/;"	e	enum:__anon462eee3b0103
HEXSHELL	zoltan/driver/dr_elem_const.h	/^              HEXSHELL, NULL_EL} E_Type;$/;"	e	enum:__anon462eee3b0103
HG	zoltan/phg/phg_hypergraph.h	/^  HGraph HG;                \/* Hypergraph for initial objects.       *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:HGraph
HG_Ptr	zoltan/phg/phg_match.c	/^static HGraph *HG_Ptr;$/;"	v	typeref:typename:HGraph *	file:
HG_readfile	zoltan/driver/dr_hg_readfile.c	/^int HG_readfile ($/;"	f	typeref:typename:int
HGraph	zoltan/phg/phg_hypergraph.h	/^} HGraph;$/;"	t	typeref:struct:__anon371c30e80108
HIER	zoltan/Makefile.am	/^HIER = \\$/;"	m
HIER	zoltan/Makefile.in	/^HIER = \\$/;"	m
HIER	zoltan/lb/lb_const.h	/^  HIER,$/;"	e	enum:Zoltan_LB_Method
HIER_DEBUG_ALL	zoltan/hier/hier.h	/^#define HIER_DEBUG_ALL /;"	d
HIER_DEBUG_LIST	zoltan/hier/hier.h	/^#define HIER_DEBUG_LIST /;"	d
HIER_DEBUG_NONE	zoltan/hier/hier.h	/^#define HIER_DEBUG_NONE /;"	d
HIER_DEBUG_PRINT	zoltan/hier/hier.h	/^#define HIER_DEBUG_PRINT /;"	d
HIER_H	zoltan/Makefile.am	/^HIER_H = \\$/;"	m
HIER_H	zoltan/Makefile.in	/^HIER_H = \\$/;"	m
HIPART	zoltan/par/par_median_randomized.c	/^#define HIPART /;"	d	file:
HSFC	zoltan/Makefile.am	/^HSFC = \\$/;"	m
HSFC	zoltan/Makefile.in	/^HSFC = \\$/;"	m
HSFC	zoltan/lb/lb_const.h	/^  HSFC,$/;"	e	enum:Zoltan_LB_Method
HSFC_Data	zoltan/hsfc/hsfc.h	/^   } HSFC_Data;                  \/* data preserved for point & box drop later *\/$/;"	t	typeref:struct:HSFC_Data
HSFC_Data	zoltan/hsfc/hsfc.h	/^typedef struct HSFC_Data {$/;"	s
HSFC_EPSILON	zoltan/hsfc/hsfc.h	/^static const double HSFC_EPSILON = 1.6e-7;$/;"	v	typeref:typename:const double
HSFC_H	zoltan/Makefile.am	/^HSFC_H = \\$/;"	m
HSFC_H	zoltan/Makefile.in	/^HSFC_H = \\$/;"	m
HSFC_params	zoltan/hsfc/hsfc_params.h	/^static PARAM_VARS HSFC_params[] =$/;"	v	typeref:typename:PARAM_VARS[]
HUND_Order_simple	zoltan/order/hund.c	/^HUND_Order_simple(ZZ* zz, int num_local_gid, ZOLTAN_ID_TYPE * part, int numParts, int* sizeParts/;"	f	typeref:typename:int	file:
HYPERGRAPH	zoltan/driver/dr_const.h	/^  HYPERGRAPH$/;"	e	enum:DATA_TYPE
HYPERGRAPH	zoltan/lb/lb_const.h	/^  HYPERGRAPH,$/;"	e	enum:Zoltan_LB_Method
HYPERGRAPH_FILE	zoltan/driver/dr_input_const.h	/^#define HYPERGRAPH_FILE /;"	d
HYPERGRAPH_PARTITIONING	zoltan/driver/dr_const.h	/^  HYPERGRAPH_PARTITIONING= 0,$/;"	e	enum:PARTITIONING_TYPE
Hash_Node	zoltan/lb/lb_balance.c	/^struct Hash_Node {$/;"	s	file:
Hash_Node	zoltan/tpls/third_library_tools.h	/^struct Hash_Node {$/;"	s
HierPartParams	zoltan/hier/hier.h	/^typedef struct HierPartParamsStruct HierPartParams;$/;"	t	typeref:struct:HierPartParamsStruct
HierPartParamsStruct	zoltan/hier/hier.h	/^struct HierPartParamsStruct {$/;"	s
Hier_params	zoltan/hier/hier.c	/^static PARAM_VARS Hier_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
Hypergraph_Callbacks	zoltan/driver/dr_const.h	/^  int Hypergraph_Callbacks; \/* Register and test hypergraph callbacks *\/$/;"	m	struct:Test_Flags	typeref:typename:int
ID	zoltan/Makefile.in	/^ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)$/;"	t
ID	zoltan/driver/Makefile.in	/^ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)$/;"	t
ID	zoltan/fdriver/Makefile.in	/^ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)$/;"	t
IDXTYPEWIDTH	zoltan/tpls/third_library_const.h	/^    #define IDXTYPEWIDTH /;"	d
IMAX	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const int IMAX = ~(0U);$/;"	v	typeref:typename:unsigned const int
IMPORT_LISTS	zoltan/driver/dr_const.h	/^  IMPORT_LISTS,$/;"	e	enum:LISTS
INCLUDE_H	zoltan/Makefile.am	/^INCLUDE_H = \\$/;"	m
INCLUDE_H	zoltan/Makefile.in	/^INCLUDE_H = \\$/;"	m
INITIAL_COL	zoltan/driver/dr_input_const.h	/^#define INITIAL_COL /;"	d
INITIAL_CYCLIC	zoltan/driver/dr_input_const.h	/^#define INITIAL_CYCLIC /;"	d
INITIAL_FILE	zoltan/driver/dr_input_const.h	/^#define INITIAL_FILE /;"	d
INITIAL_LINEAR	zoltan/driver/dr_input_const.h	/^#define INITIAL_LINEAR /;"	d
INITIAL_NO_DIST	zoltan/driver/dr_input_const.h	/^#define INITIAL_NO_DIST /;"	d
INITIAL_OWNER	zoltan/driver/dr_input_const.h	/^#define INITIAL_OWNER /;"	d
INITIAL_ROW	zoltan/driver/dr_input_const.h	/^#define INITIAL_ROW /;"	d
INITIAL_ZERO	zoltan/driver/dr_input_const.h	/^#define INITIAL_ZERO /;"	d
INITLENGTH	zoltan/Utilities/Timer/zoltan_timer.c	/^#define INITLENGTH /;"	d	file:
INNER_PRODUCT1	zoltan/phg/phg_match.c	/^#define INNER_PRODUCT1(/;"	d	file:
INNER_PRODUCT2	zoltan/phg/phg_match.c	/^#define INNER_PRODUCT2(/;"	d	file:
INSTALL	zoltan/Makefile.in	/^INSTALL = @INSTALL@$/;"	m
INSTALL	zoltan/driver/Makefile.in	/^INSTALL = @INSTALL@$/;"	m
INSTALL	zoltan/fdriver/Makefile.in	/^INSTALL = @INSTALL@$/;"	m
INSTALL_DATA	zoltan/Makefile.in	/^INSTALL_DATA = @INSTALL_DATA@$/;"	m
INSTALL_DATA	zoltan/driver/Makefile.in	/^INSTALL_DATA = @INSTALL_DATA@$/;"	m
INSTALL_DATA	zoltan/fdriver/Makefile.in	/^INSTALL_DATA = @INSTALL_DATA@$/;"	m
INSTALL_HEADER	zoltan/Makefile.in	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	zoltan/driver/Makefile.in	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	zoltan/fdriver/Makefile.in	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	zoltan/Makefile.in	/^INSTALL_PROGRAM = @INSTALL_PROGRAM@$/;"	m
INSTALL_PROGRAM	zoltan/driver/Makefile.in	/^INSTALL_PROGRAM = @INSTALL_PROGRAM@$/;"	m
INSTALL_PROGRAM	zoltan/fdriver/Makefile.in	/^INSTALL_PROGRAM = @INSTALL_PROGRAM@$/;"	m
INSTALL_SCRIPT	zoltan/Makefile.in	/^INSTALL_SCRIPT = @INSTALL_SCRIPT@$/;"	m
INSTALL_SCRIPT	zoltan/driver/Makefile.in	/^INSTALL_SCRIPT = @INSTALL_SCRIPT@$/;"	m
INSTALL_SCRIPT	zoltan/fdriver/Makefile.in	/^INSTALL_SCRIPT = @INSTALL_SCRIPT@$/;"	m
INSTALL_STRIP_PROGRAM	zoltan/Makefile.in	/^INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@$/;"	m
INSTALL_STRIP_PROGRAM	zoltan/driver/Makefile.in	/^INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@$/;"	m
INSTALL_STRIP_PROGRAM	zoltan/fdriver/Makefile.in	/^INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@$/;"	m
INT_EPSILON	zoltan/phg/phg_parkway.c	/^#define INT_EPSILON /;"	d	file:
INT_EPSILON	zoltan/tpls/third_library.h	/^#define INT_EPSILON /;"	d
INT_SWAP	zoltan/zz/zz_heap.c	/^#define INT_SWAP(/;"	d	file:
INUSE	zoltan/Utilities/Timer/zoltan_timer.c	/^#define INUSE /;"	d	file:
IPM_TAG	zoltan/phg/phg_match.c	/^#define IPM_TAG /;"	d	file:
IS_BLANK	zoltan/driver/dr_hg_io.c	/^#define IS_BLANK(/;"	d	file:
IS_EMPTY	zoltan/phg/phg_tree.c	/^#define IS_EMPTY(/;"	d	file:
IS_GLOBAL_GRAPH	zoltan/tpls/third_library_const.h	/^#define IS_GLOBAL_GRAPH(/;"	d
IS_INCLUDED	zoltan/phg/phg_tree.c	/^#define IS_INCLUDED(/;"	d	file:
IS_LOCAL_GRAPH	zoltan/tpls/third_library_const.h	/^#define IS_LOCAL_GRAPH(/;"	d
IS_NO_GRAPH	zoltan/tpls/third_library_const.h	/^#define IS_NO_GRAPH(/;"	d
Idx	zoltan/lb/lb_const.h	/^  int Idx;             \/*  Part weight index. *\/$/;"	m	struct:Zoltan_part_info	typeref:typename:int
Imb_Tol_Len	zoltan/lb/lb_const.h	/^  int  Imb_Tol_Len;               \/*  Length of Imbalance_Tol array.         *\/$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Imbalance_Tol	zoltan/lb/lb_const.h	/^  float *Imbalance_Tol;           \/*  Tolerance to which to load balance;$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:float *
Index	zoltan/driver/dr_const.h	/^  int  Index;         \/* index for vector params *\/$/;"	m	struct:Parameter_Description	typeref:typename:int
Info	zoltan/include/zoltan_comm_cpp.h	/^  int Info( int *nsends, int *send_procs,$/;"	f	class:Zoltan_Comm	typeref:typename:int
Init	zoltan/include/zoltan_timer_cpp.h	/^  int Init(const int &use_barrier, const std::string & name) {$/;"	f	class:Zoltan_Timer_Object	typeref:typename:int
Initial_Method	zoltan/ch/ch_init_dist.c	/^static int Initial_Method;  \/* Flag indicating which initial decomposition$/;"	v	typeref:typename:int	file:
Input_Part	zoltan/rcb/shared.h	/^  int *Input_Part;               \/* Partition to which the dot is assigned$/;"	m	struct:Dot_Struct	typeref:typename:int *
Input_Parts	zoltan/phg/phg_hypergraph.h	/^  int *Input_Parts;         \/* Initial partition #s for on-processor objects *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
InvSierpinski2d	zoltan/reftree/reftree_coarse_path.c	/^static double InvSierpinski2d(ZZ *zz, double *coord)$/;"	f	typeref:typename:double	file:
Invert_Lists	zoltan/include/zoltan_cpp.h	/^  int Invert_Lists             ( const int &num_known,$/;"	f	class:Zoltan	typeref:typename:int
Invert_Map	zoltan/include/zoltan_comm_cpp.h	/^  static int Invert_Map( int *lengths_to, int *procs_to, $/;"	f	class:Zoltan_Comm	typeref:typename:int
Invert_Plan	zoltan/include/zoltan_comm_cpp.h	/^  int Invert_Plan()$/;"	f	class:Zoltan_Comm	typeref:typename:int
JOSTLE	zoltan/lb/lb_const.h	/^  JOSTLE,$/;"	e	enum:Zoltan_LB_Method
KVHash	zoltan/coloring/g2l_hash.h	/^typedef struct G2L_Hash KVHash;$/;"	t	typeref:struct:G2L_Hash
Key_params	zoltan/params/key_params.c	/^static PARAM_VARS Key_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
LARGE_GRAPH_PINS	zoltan/phg/phg_serialpartition.c	/^#define LARGE_GRAPH_PINS /;"	d	file:
LARGE_GRAPH_VTX	zoltan/phg/phg_serialpartition.c	/^#define LARGE_GRAPH_VTX /;"	d	file:
LASTARG	zoltan/driver/dr_input.c	/^#define LASTARG /;"	d	file:
LB	zoltan/Makefile.am	/^LB = \\$/;"	m
LB	zoltan/Makefile.in	/^LB = \\$/;"	m
LB	zoltan/zz/zz_const.h	/^  struct Zoltan_LB_Struct LB;          \/* Struct with info for load balancing *\/$/;"	m	struct:Zoltan_Struct	typeref:struct:Zoltan_LB_Struct
LB_Box_PP_Assign	zoltan/include/zoltan_cpp.h	/^  int LB_Box_PP_Assign ( const double &xmin,$/;"	f	class:Zoltan	typeref:typename:int
LB_DOUBLE	zoltan/fort/ztypes.f90	/^   LB_DOUBLE /;"	v	module:zoltan_types
LB_Eval	zoltan/include/zoltan_cpp.h	/^  int LB_Eval( const int &print_stats, ZOLTAN_BALANCE_EVAL *eval, $/;"	f	class:Zoltan	typeref:typename:int
LB_Eval_Balance	zoltan/include/zoltan_cpp.h	/^  int LB_Eval_Balance(int print_stats, ZOLTAN_BALANCE_EVAL *eval)$/;"	f	class:Zoltan	typeref:typename:int
LB_Eval_Graph	zoltan/include/zoltan_cpp.h	/^  int LB_Eval_Graph(int print_stats, ZOLTAN_GRAPH_EVAL *graph)$/;"	f	class:Zoltan	typeref:typename:int
LB_Eval_HG	zoltan/include/zoltan_cpp.h	/^  int LB_Eval_HG(int print_stats, ZOLTAN_HG_EVAL *hg)$/;"	f	class:Zoltan	typeref:typename:int
LB_FLOAT	zoltan/fort/ztypes.f90	/^   LB_FLOAT /;"	v	module:zoltan_types
LB_Fn	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_FN *LB_Fn;            \/*  Pointer to the function that performs$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:ZOLTAN_LB_FN *
LB_Free_Part	zoltan/include/zoltan_cpp.h	/^  static int LB_Free_Part( ZOLTAN_ID_PTR *global_ids,$/;"	f	class:Zoltan	typeref:typename:int
LB_H	zoltan/Makefile.am	/^LB_H = \\$/;"	m
LB_H	zoltan/Makefile.in	/^LB_H = \\$/;"	m
LB_INT	zoltan/fort/ztypes.f90	/^   LB_INT /;"	v	module:zoltan_types
LB_INT_PTR	zoltan/fort/ztypes.f90	/^   LB_INT_PTR /;"	v	module:zoltan_types
LB_Partition	zoltan/include/zoltan_cpp.h	/^  int LB_Partition ( int &changes,$/;"	f	class:Zoltan	typeref:typename:int
LB_Point_PP_Assign	zoltan/include/zoltan_cpp.h	/^  int LB_Point_PP_Assign ( double * const coords,$/;"	f	class:Zoltan	typeref:typename:int
LB_Set_Part_Sizes	zoltan/include/zoltan_cpp.h	/^  int LB_Set_Part_Sizes( const int &global_num,$/;"	f	class:Zoltan	typeref:typename:int
LB_TO_ADDR	zoltan/fort/cwrap.c	/^#define LB_TO_ADDR(/;"	d	file:
LDFLAGS	zoltan/Makefile.in	/^LDFLAGS = @LDFLAGS@$/;"	m
LDFLAGS	zoltan/driver/Makefile.in	/^LDFLAGS = @LDFLAGS@$/;"	m
LDFLAGS	zoltan/fdriver/Makefile.in	/^LDFLAGS = @LDFLAGS@$/;"	m
LIBOBJS	zoltan/Makefile.in	/^LIBOBJS = @LIBOBJS@$/;"	m
LIBOBJS	zoltan/driver/Makefile.in	/^LIBOBJS = @LIBOBJS@$/;"	m
LIBOBJS	zoltan/fdriver/Makefile.in	/^LIBOBJS = @LIBOBJS@$/;"	m
LIBRARIES	zoltan/Makefile.in	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBS	zoltan/Makefile.in	/^LIBS = @LIBS@$/;"	m
LIBS	zoltan/driver/Makefile.in	/^LIBS = @LIBS@$/;"	m
LIBS	zoltan/fdriver/Makefile.in	/^LIBS = @LIBS@$/;"	m
LINE_LENGTH	zoltan/ch/ch_input_read.c	/^#define LINE_LENGTH /;"	d	file:
LINK	zoltan/Makefile.in	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	zoltan/driver/Makefile.in	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LISTS	zoltan/driver/dr_const.h	/^enum LISTS {  \/* NULL lists to pass to Zoltan_Migrate *\/$/;"	g
LIST_ALLOC	zoltan/driver/dr_exoII_io.c	/^#define LIST_ALLOC /;"	d	file:
LIST_ALLOC	zoltan/driver/dr_exoII_ioCPP.cpp	/^#define LIST_ALLOC /;"	d	file:
LNO_TO_GNO	zoltan/phg/phg_hypergraph.h	/^#define LNO_TO_GNO(/;"	d
LOCAL_GRAPH	zoltan/tpls/third_library_const.h	/^#define LOCAL_GRAPH /;"	d
LOPART	zoltan/par/par_median_randomized.c	/^#define LOPART /;"	d	file:
LTLIBOBJS	zoltan/Makefile.in	/^LTLIBOBJS = @LTLIBOBJS@$/;"	m
LTLIBOBJS	zoltan/driver/Makefile.in	/^LTLIBOBJS = @LTLIBOBJS@$/;"	m
LTLIBOBJS	zoltan/fdriver/Makefile.in	/^LTLIBOBJS = @LTLIBOBJS@$/;"	m
LZMA	zoltan/driver/dr_compress_const.h	/^  LZMA = 3$/;"	e	enum:ZOLTAN_FILETYPE_
LargestDegreeFirstOrdering	zoltan/coloring/coloring.c	/^static int LargestDegreeFirstOrdering($/;"	f	typeref:typename:int	file:
Length	zoltan/Utilities/Timer/zoltan_timer.c	/^  int Length;             \/* # of entries allocated in Times *\/$/;"	m	struct:Zoltan_Timer	typeref:typename:int	file:
LevelCnt	zoltan/phg/phg_Vcycle.c	/^    int               LevelCnt;   \/* 2 * count of external vertices matched to$/;"	m	struct:tagVCycle	typeref:typename:int	file:
LevelData	zoltan/phg/phg_Vcycle.c	/^    int              *LevelData;  \/* buffer for external vertex information  *\/$/;"	m	struct:tagVCycle	typeref:typename:int *	file:
LevelMap	zoltan/phg/phg_Vcycle.c	/^    ZOLTAN_GNO_TYPE  *LevelMap;   \/* necessary to uncoarsen                  *\/$/;"	m	struct:tagVCycle	typeref:typename:ZOLTAN_GNO_TYPE *	file:
LevelSndCnt	zoltan/phg/phg_Vcycle.c	/^    int               LevelSndCnt; \/* number of vertices being returned by$/;"	m	struct:tagVCycle	typeref:typename:int	file:
LocalCoarsePartition	zoltan/phg/phg.h	/^  int LocalCoarsePartition;            \/* 1 -> apply coarse partitioner locally;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
Local_IDs	zoltan/rcb/rcb.h	/^  ZOLTAN_ID_PTR Local_IDs;   \/* Pointer to array of local IDs; local ID of $/;"	m	struct:RCB_Struct	typeref:typename:ZOLTAN_ID_PTR
Local_IDs	zoltan/rcb/rib.h	/^    ZOLTAN_ID_PTR Local_IDs;        \/* This array is NOT used if Zoltan_RB_Use_IDs returns$/;"	m	struct:RIB_Struct	typeref:typename:ZOLTAN_ID_PTR
Local_Parts	zoltan/driver/dr_const.h	/^  int Local_Parts;          \/* Sets NUM_LOCAL_PARTS parameter in various$/;"	m	struct:Test_Flags	typeref:typename:int
MACRO_REALLOC	zoltan/phg/phg_match.c	/^#define MACRO_REALLOC(/;"	d	file:
MACRO_RESIZE	zoltan/phg/phg_match.c	/^#define MACRO_RESIZE(/;"	d	file:
MACRO_TIMER_START	zoltan/phg/phg_match.c	/^#define MACRO_TIMER_START(/;"	d	file:
MACRO_TIMER_STOP	zoltan/phg/phg_match.c	/^#define MACRO_TIMER_STOP(/;"	d	file:
MAINT	zoltan/Makefile.in	/^MAINT = @MAINT@$/;"	m
MAINT	zoltan/driver/Makefile.in	/^MAINT = @MAINT@$/;"	m
MAINT	zoltan/fdriver/Makefile.in	/^MAINT = @MAINT@$/;"	m
MAINTAINERCLEANFILES	zoltan/Makefile.am	/^MAINTAINERCLEANFILES = Makefile.in$/;"	m
MAINTAINERCLEANFILES	zoltan/Makefile.in	/^MAINTAINERCLEANFILES = Makefile.in$/;"	m
MAKEINFO	zoltan/Makefile.in	/^MAKEINFO = @MAKEINFO@$/;"	m
MAKEINFO	zoltan/driver/Makefile.in	/^MAKEINFO = @MAKEINFO@$/;"	m
MAKEINFO	zoltan/fdriver/Makefile.in	/^MAKEINFO = @MAKEINFO@$/;"	m
MAP_ALLOC	zoltan/driver/dr_maps.c	/^#define MAP_ALLOC /;"	d	file:
MAP_ALLOC	zoltan/driver/dr_mapsCPP.cpp	/^#define MAP_ALLOC /;"	d	file:
MAP_ALLOC	zoltan/fdriver/fdr_chaco_io.f90	/^integer(Zoltan_INT), parameter :: MAP_ALLOC /;"	v	module:dr_chaco_io
MATCH_OK	zoltan/phg/phg_match.c	/^#define MATCH_OK(/;"	d	file:
MATRIX	zoltan/Makefile.am	/^MATRIX = \\$/;"	m
MATRIX	zoltan/Makefile.in	/^MATRIX = \\$/;"	m
MATRIXMARKET_FILE	zoltan/driver/dr_input_const.h	/^#define MATRIXMARKET_FILE /;"	d
MATRIXMARKET_PLUS_FILE	zoltan/driver/dr_input_const.h	/^#define MATRIXMARKET_PLUS_FILE /;"	d
MATRIX_FAST	zoltan/matrix/zoltan_matrix.h	/^typedef enum {MATRIX_FULL_DD=0, MATRIX_FAST, MATRIX_NO_REDIST} SpeedOpt;$/;"	e	enum:__anonbcb9ea720203
MATRIX_FULL_DD	zoltan/matrix/zoltan_matrix.h	/^typedef enum {MATRIX_FULL_DD=0, MATRIX_FAST, MATRIX_NO_REDIST} SpeedOpt;$/;"	e	enum:__anonbcb9ea720203
MATRIX_H	zoltan/Makefile.am	/^MATRIX_H = \\$/;"	m
MATRIX_H	zoltan/Makefile.in	/^MATRIX_H = \\$/;"	m
MATRIX_MARKET_MAX_LINE	zoltan/driver/dr_const.h	/^#define MATRIX_MARKET_MAX_LINE /;"	d
MATRIX_NO_REDIST	zoltan/matrix/zoltan_matrix.h	/^typedef enum {MATRIX_FULL_DD=0, MATRIX_FAST, MATRIX_NO_REDIST} SpeedOpt;$/;"	e	enum:__anonbcb9ea720203
MAX	zoltan/zz/zz_const.h	/^#define MAX(/;"	d
MAXINT_DIV_PHI	zoltan/zz/zz_hash.c	/^#define MAXINT_DIV_PHI /;"	d	file:
MAXLENGTH	zoltan/par/par_median_randomized.c	/^#define MAXLENGTH /;"	d	file:
MAXMEMORYALLOC	zoltan/phg/phg_Vcycle.c	/^#define MAXMEMORYALLOC /;"	d	file:
MAXNAMELEN	zoltan/Utilities/Timer/zoltan_timer.c	/^#define MAXNAMELEN /;"	d	file:
MAXSWAP	zoltan/reftree/reftree_coarse_path.c	/^#define MAXSWAP /;"	d	file:
MAXVERT	zoltan/reftree/reftree.h	/^#define MAXVERT /;"	d
MAX_BISECT_ITER	zoltan/par/par_bisect.c	/^#define MAX_BISECT_ITER /;"	d	file:
MAX_BISECT_WGTS	zoltan/par/par_bisect_const.h	/^#define MAX_BISECT_WGTS /;"	d
MAX_CHAR_LEN	zoltan/fdriver/fdr_param_file.f90	/^integer, parameter :: MAX_CHAR_LEN /;"	v	module:dr_param_file
MAX_CPU_WGTS	zoltan/driver/dr_const.h	/^#define MAX_CPU_WGTS	/;"	d
MAX_DIM	zoltan/driver/dr_const.h	/^#define MAX_DIM	/;"	d
MAX_DIM	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT), parameter :: MAX_DIM /;"	v	module:dr_const
MAX_EB_NAME_LEN	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT), parameter :: MAX_EB_NAME_LEN /;"	v	module:dr_const
MAX_ELEM_SIDES	zoltan/driver/dr_elem_const.h	/^#define MAX_ELEM_SIDES	/;"	d
MAX_ERR_MSG	zoltan/driver/dr_err_const.h	/^#define MAX_ERR_MSG /;"	d
MAX_INPUT_STR_LN	zoltan/driver/dr_input_const.h	/^#define MAX_INPUT_STR_LN /;"	d
MAX_INPUT_STR_LN	zoltan/fdriver/fdr_input.f90	/^integer(Zoltan_INT), parameter :: MAX_INPUT_STR_LN /;"	v	module:dr_input
MAX_LOOPS	zoltan/hsfc/hsfc.h	/^static const int MAX_LOOPS = 16;$/;"	v	typeref:typename:const int
MAX_NP_ELEM	zoltan/driver/dr_const.h	/^#define MAX_NP_ELEM	/;"	d
MAX_NP_ELEM	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT), parameter :: MAX_NP_ELEM /;"	v	module:dr_const
MAX_PARAMETER_LEN	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT), parameter :: MAX_PARAMETER_LEN /;"	v	module:dr_const
MAX_PARAM_STRING_LEN	zoltan/driver/dr_param_file.c	/^#define MAX_PARAM_STRING_LEN /;"	d	file:
MAX_PARAM_STRING_LEN	zoltan/params/params_const.h	/^#define MAX_PARAM_STRING_LEN /;"	d
MAX_PARMETIS_OPTIONS	zoltan/tpls/parmetis_interface.h	/^#define MAX_PARMETIS_OPTIONS /;"	d
MAX_PRIME	zoltan/coloring/g2l_hash.c	/^#define MAX_PRIME /;"	d	file:
MAX_PROC_NAME_LEN	zoltan/ha/ha_const.h	/^#define MAX_PROC_NAME_LEN /;"	d
MAX_SIDE_NODES	zoltan/driver/dr_elem_const.h	/^#define MAX_SIDE_NODES	/;"	d
MAX_STRING_LEN	zoltan/Utilities/Memory/mem.c	/^#define MAX_STRING_LEN /;"	d	file:
MAX_STR_LENGTH	zoltan/driver/dr_chaco_io.c	/^#define MAX_STR_LENGTH /;"	d	file:
MAX_STR_LENGTH	zoltan/driver/dr_hg_io.c	/^#define MAX_STR_LENGTH /;"	d	file:
MAX_STR_LENGTH	zoltan/driver/dr_random_io.c	/^#define MAX_STR_LENGTH /;"	d	file:
MAX_WEIGHT	zoltan/matrix/zoltan_matrix.h	/^typedef enum {ADD_WEIGHT=0, MAX_WEIGHT, CMP_WEIGHT} WgtOp;$/;"	e	enum:__anonbcb9ea720103
MAX_WGT_SUM	zoltan/tpls/third_library_const.h	/^    #define MAX_WGT_SUM /;"	d
MAX_WGT_SUM	zoltan/tpls/third_library_const.h	/^  #define MAX_WGT_SUM /;"	d
MEDPART	zoltan/par/par_median_randomized.c	/^#define MEDPART /;"	d	file:
MEMFREE	zoltan/tpls/third_library.c	/^#define MEMFREE(/;"	d	file:
MEMORY_ERROR	zoltan/zz/zz_const.h	/^#define MEMORY_ERROR /;"	d
MESH	zoltan/driver/dr_const.h	/^  MESH = 0,$/;"	e	enum:DATA_TYPE
MESH_INFO	zoltan/driver/dr_const.h	/^typedef struct Mesh_Description  MESH_INFO;$/;"	t	typeref:struct:Mesh_Description
MESH_INFO	zoltan/fdriver/fdr_const.f90	/^type MESH_INFO$/;"	t	module:dr_const
MESH_INFO_PTR	zoltan/driver/dr_const.h	/^typedef struct Mesh_Description *MESH_INFO_PTR;$/;"	t	typeref:struct:Mesh_Description *
MIN	zoltan/driver/dr_const.h	/^#define MIN(/;"	d
MIN	zoltan/zz/zz_const.h	/^#define MIN(/;"	d
MKDIR_P	zoltan/Makefile.in	/^MKDIR_P = @MKDIR_P@$/;"	m
MKDIR_P	zoltan/driver/Makefile.in	/^MKDIR_P = @MKDIR_P@$/;"	m
MKDIR_P	zoltan/fdriver/Makefile.in	/^MKDIR_P = @MKDIR_P@$/;"	m
MM_ARRAY_STR	zoltan/driver/dr_mmio.h	/^#define MM_ARRAY_STR	/;"	d
MM_COMPLEX_STR	zoltan/driver/dr_mmio.h	/^#define MM_COMPLEX_STR	/;"	d
MM_COORDINATE_STR	zoltan/driver/dr_mmio.h	/^#define MM_COORDINATE_STR /;"	d
MM_COULD_NOT_READ_FILE	zoltan/driver/dr_mmio.h	/^#define MM_COULD_NOT_READ_FILE	/;"	d
MM_COULD_NOT_WRITE_FILE	zoltan/driver/dr_mmio.h	/^#define MM_COULD_NOT_WRITE_FILE	/;"	d
MM_DENSE_STR	zoltan/driver/dr_mmio.h	/^#define MM_DENSE_STR	/;"	d
MM_FILE	zoltan/fdriver/fdr_input.f90	/^                             MM_FILE /;"	v	module:dr_input
MM_GENERAL_STR	zoltan/driver/dr_mmio.h	/^#define MM_GENERAL_STR /;"	d
MM_HERM_STR	zoltan/driver/dr_mmio.h	/^#define MM_HERM_STR	/;"	d
MM_INT_STR	zoltan/driver/dr_mmio.h	/^#define MM_INT_STR	/;"	d
MM_IO_H	zoltan/driver/dr_mmio.h	/^#define MM_IO_H$/;"	d
MM_LINE_TOO_LONG	zoltan/driver/dr_mmio.h	/^#define MM_LINE_TOO_LONG	/;"	d
MM_MAX_LINE_LENGTH	zoltan/driver/dr_mmio.h	/^#define MM_MAX_LINE_LENGTH /;"	d
MM_MAX_TOKEN_LENGTH	zoltan/driver/dr_mmio.h	/^#define MM_MAX_TOKEN_LENGTH /;"	d
MM_MTX_STR	zoltan/driver/dr_mmio.h	/^#define MM_MTX_STR	/;"	d
MM_NOT_MTX	zoltan/driver/dr_mmio.h	/^#define MM_NOT_MTX	/;"	d
MM_NO_HEADER	zoltan/driver/dr_mmio.h	/^#define MM_NO_HEADER	/;"	d
MM_PATTERN_STR	zoltan/driver/dr_mmio.h	/^#define MM_PATTERN_STR /;"	d
MM_PREMATURE_EOF	zoltan/driver/dr_mmio.h	/^#define MM_PREMATURE_EOF	/;"	d
MM_REAL_STR	zoltan/driver/dr_mmio.h	/^#define MM_REAL_STR	/;"	d
MM_SKEW_STR	zoltan/driver/dr_mmio.h	/^#define MM_SKEW_STR	/;"	d
MM_SPARSE_STR	zoltan/driver/dr_mmio.h	/^#define MM_SPARSE_STR	/;"	d
MM_SYMM_STR	zoltan/driver/dr_mmio.h	/^#define MM_SYMM_STR	/;"	d
MM_UNSUPPORTED_TYPE	zoltan/driver/dr_mmio.h	/^#define MM_UNSUPPORTED_TYPE	/;"	d
MM_readfile	zoltan/driver/dr_mm_readfile.c	/^int MM_readfile ($/;"	f	typeref:typename:int
MM_typecode	zoltan/driver/dr_mmio.h	/^typedef char MM_typecode[4];$/;"	t	typeref:typename:char[4]
MOSTLYCLEANFILES	zoltan/Makefile.am	/^MOSTLYCLEANFILES = *.mod$/;"	m
MOSTLYCLEANFILES	zoltan/Makefile.in	/^MOSTLYCLEANFILES = *.mod$/;"	m
MOSTLYCLEANFILES	zoltan/fdriver/Makefile.am	/^MOSTLYCLEANFILES = *.mod$/;"	m
MOSTLYCLEANFILES	zoltan/fdriver/Makefile.in	/^MOSTLYCLEANFILES = *.mod$/;"	m
MPI_CC	zoltan/Makefile.in	/^MPI_CC = @MPI_CC@$/;"	m
MPI_CC	zoltan/driver/Makefile.in	/^MPI_CC = @MPI_CC@$/;"	m
MPI_CC	zoltan/fdriver/Makefile.in	/^MPI_CC = @MPI_CC@$/;"	m
MPI_CXX	zoltan/Makefile.in	/^MPI_CXX = @MPI_CXX@$/;"	m
MPI_CXX	zoltan/driver/Makefile.in	/^MPI_CXX = @MPI_CXX@$/;"	m
MPI_CXX	zoltan/fdriver/Makefile.in	/^MPI_CXX = @MPI_CXX@$/;"	m
MPI_FC	zoltan/Makefile.in	/^MPI_FC = @MPI_FC@$/;"	m
MPI_FC	zoltan/driver/Makefile.in	/^MPI_FC = @MPI_FC@$/;"	m
MPI_FC	zoltan/fdriver/Makefile.in	/^MPI_FC = @MPI_FC@$/;"	m
MPI_RECV_LIMIT	zoltan/Utilities/Communication/comm.h	/^#define MPI_RECV_LIMIT /;"	d
MPI_RECV_LIMIT_FLAG	zoltan/Makefile.in	/^MPI_RECV_LIMIT_FLAG = @MPI_RECV_LIMIT_FLAG@$/;"	m
MPI_RECV_LIMIT_FLAG	zoltan/driver/Makefile.in	/^MPI_RECV_LIMIT_FLAG = @MPI_RECV_LIMIT_FLAG@$/;"	m
MPI_RECV_LIMIT_FLAG	zoltan/fdriver/Makefile.in	/^MPI_RECV_LIMIT_FLAG = @MPI_RECV_LIMIT_FLAG@$/;"	m
M_PI	zoltan/driver/dr_random_io.c	/^# define M_PI /;"	d	file:
M_PI_2	zoltan/driver/dr_random_io.c	/^# define M_PI_2 /;"	d	file:
MachineType	zoltan/zz/zz_const.h	/^} MachineType;$/;"	t	typeref:struct:__anond4a4c99f0108
Makefile	zoltan/Makefile.in	/^Makefile: $(srcdir)\/Makefile.in $(top_builddir)\/config.status$/;"	t
Makefile	zoltan/driver/Makefile.in	/^Makefile: $(srcdir)\/Makefile.in $(top_builddir)\/config.status$/;"	t
Makefile	zoltan/fdriver/Makefile.in	/^Makefile: $(srcdir)\/Makefile.in $(top_builddir)\/config.status$/;"	t
MatchEdgeSizeThreshold	zoltan/phg/phg.h	/^  ZOLTAN_GNO_TYPE MatchEdgeSizeThreshold;  \/* Edges with sizes bigger than this threshold$/;"	m	struct:PHGPartParamsStruct	typeref:typename:ZOLTAN_GNO_TYPE
Matching	zoltan/phg/phg_hypergraph.h	/^typedef int *Matching;  \/* length |V|, matching information of vertices *\/$/;"	t	typeref:typename:int *
MatrixMarketBanner	zoltan/driver/dr_mmio.h	/^#define MatrixMarketBanner /;"	d
Mesh	zoltan/fdriver/fdr_const.f90	/^type(MESH_INFO),pointer :: Mesh$/;"	v	module:dr_const
Mesh_Description	zoltan/driver/dr_const.h	/^struct Mesh_Description$/;"	s
Mesh_Info_File	zoltan/driver/dr_const.h	/^  int Mesh_Info_File;$/;"	m	struct:Output_Flags	typeref:typename:int
Method	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_METHOD Method;        \/*  Method to be used for load balancing.  *\/ $/;"	m	struct:Zoltan_LB_Struct	typeref:typename:ZOLTAN_LB_METHOD
Mid_Migrate	zoltan/lb/lb_const.h	/^  ZOLTAN_MID_MIGRATE_FN *Mid_Migrate;  \/* Function that performs application$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_MID_MIGRATE_FN *
Mid_Migrate_Data	zoltan/lb/lb_const.h	/^  void *Mid_Migrate_Data;              \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:void *
Mid_Migrate_Fort	zoltan/lb/lb_const.h	/^  ZOLTAN_MID_MIGRATE_FORT_FN *Mid_Migrate_Fort;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_MID_MIGRATE_FORT_FN *
Mid_Migrate_PP	zoltan/lb/lb_const.h	/^  ZOLTAN_MID_MIGRATE_PP_FN *Mid_Migrate_PP;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_MID_MIGRATE_PP_FN *
Mid_Migrate_PP_Data	zoltan/lb/lb_const.h	/^  void *Mid_Migrate_PP_Data;         \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:void *
Mid_Migrate_PP_Fort	zoltan/lb/lb_const.h	/^  ZOLTAN_MID_MIGRATE_PP_FORT_FN *Mid_Migrate_PP_Fort;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_MID_MIGRATE_PP_FORT_FN *
Migrate	zoltan/include/zoltan_cpp.h	/^  int Migrate          ( const int &num_import,$/;"	f	class:Zoltan	typeref:typename:int
Migrate	zoltan/zz/zz_const.h	/^  struct Zoltan_Migrate_Struct Migrate;\/* Struct with info for migration.     *\/$/;"	m	struct:Zoltan_Struct	typeref:struct:Zoltan_Migrate_Struct
Multi_Callbacks	zoltan/driver/dr_const.h	/^  int Multi_Callbacks;      \/* Exercises list-based callback functions. *\/$/;"	m	struct:Test_Flags	typeref:typename:int
MurmurHash3_x86_32	zoltan/zz/murmur3.c	/^static void MurmurHash3_x86_32 ( const void * key, int len,$/;"	f	typeref:typename:void	file:
My_Tot_Time	zoltan/Utilities/Timer/zoltan_timer.c	/^  double My_Tot_Time;     \/* Sum of stop_time-start_time over all invocations$/;"	m	struct:TimeStruct	typeref:typename:double	file:
N	zoltan/hsfc/hsfc.h	/^static const int N = 8;$/;"	v	typeref:typename:const int
NATIVE_ZOLTAN_BUILD	zoltan/Makefile.am	/^NATIVE_ZOLTAN_BUILD =  \\$/;"	m
NATIVE_ZOLTAN_BUILD	zoltan/Makefile.in	/^NATIVE_ZOLTAN_BUILD = \\$/;"	m
NDIM	zoltan/driver/dr_elem_const.h	/^#define NDIM	/;"	d
NEAR_ONE	zoltan/zz/zz_coord.c	/^#define NEAR_ONE(/;"	d	file:
NEMESIS_FILE	zoltan/driver/dr_input_const.h	/^#define NEMESIS_FILE /;"	d
NEMESIS_FILE	zoltan/fdriver/fdr_input.f90	/^integer(Zoltan_INT), parameter :: NEMESIS_FILE /;"	v	module:dr_input
NEXTARG	zoltan/driver/dr_input.c	/^#define NEXTARG /;"	d	file:
NEXTLIST	zoltan/driver/dr_input.c	/^#define NEXTLIST /;"	d	file:
NNODES	zoltan/driver/dr_elem_const.h	/^#define NNODES	/;"	d
NONDECREASING	zoltan/coloring/coloring.c	/^#define NONDECREASING /;"	d	file:
NONE	zoltan/driver/dr_const.h	/^  NONE = 0,$/;"	e	enum:LISTS
NONE	zoltan/lb/lb_const.h	/^  NONE = -1,$/;"	e	enum:Zoltan_LB_Method
NONINCREASING	zoltan/coloring/coloring.c	/^#define NONINCREASING /;"	d	file:
NONZEROS	zoltan/driver/dr_input_const.h	/^#define NONZEROS /;"	d
NORMAL_INSTALL	zoltan/Makefile.in	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	zoltan/driver/Makefile.in	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	zoltan/fdriver/Makefile.in	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	zoltan/Makefile.in	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	zoltan/driver/Makefile.in	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	zoltan/fdriver/Makefile.in	/^NORMAL_UNINSTALL = :$/;"	m
NO_FILE_GRAPH	zoltan/driver/dr_input_const.h	/^#define NO_FILE_GRAPH /;"	d
NO_FILE_POINTS	zoltan/driver/dr_input_const.h	/^#define NO_FILE_POINTS /;"	d
NO_FILE_TRIANGLES	zoltan/driver/dr_input_const.h	/^#define NO_FILE_TRIANGLES /;"	d
NO_GRAPH	zoltan/tpls/third_library_const.h	/^#define NO_GRAPH /;"	d
NO_TIMES	zoltan/Utilities/Timer/timer.h	/^#define NO_TIMES$/;"	d
NQUAD	zoltan/driver/dr_elem_const.h	/^#define NQUAD	/;"	d
NQUAD_SURF	zoltan/driver/dr_elem_const.h	/^#define NQUAD_SURF	/;"	d
NSEND	zoltan/phg/phg_build.c	/^#define NSEND /;"	d	file:
NSIDES	zoltan/driver/dr_elem_const.h	/^#define NSIDES	/;"	d
NSNODES	zoltan/driver/dr_elem_const.h	/^#define NSNODES	/;"	d
NULL_EL	zoltan/driver/dr_elem_const.h	/^              HEXSHELL, NULL_EL} E_Type;$/;"	e	enum:__anon462eee3b0103
NUM_COARSEPARTITION_FNS	zoltan/phg/phg_serialpartition.c	/^#define NUM_COARSEPARTITION_FNS /;"	d	file:
NUM_PART_KEEP	zoltan/phg/phg_serialpartition.c	/^#define NUM_PART_KEEP /;"	d	file:
NZ	zoltan/matlab/mmwrite.m	/^          NZ = nnz(A);$/;"	v
NZ	zoltan/matlab/mmwrite.m	/^          NZ = nnz(ATEMP);$/;"	v
NZ	zoltan/matlab/mmwrite.m	/^        NZ = nnz(A);$/;"	v
NZ	zoltan/matlab/mmwrite.m	/^        NZ = nnz(ATEMP);$/;"	v
NZ	zoltan/matlab/mmwrite.m	/^      NZ = nnz(ATEMP);$/;"	v
NZ	zoltan/matlab/mmwrite.m	/^    NZ = length(V);$/;"	v
Name	zoltan/Utilities/Timer/zoltan_timer.c	/^  char Name[MAXNAMELEN+1];\/* String associated (and printed) with timer info *\/$/;"	m	struct:TimeStruct	typeref:typename:char[]	file:
Name	zoltan/driver/dr_const.h	/^  char Name[128];     \/* parameter name *\/$/;"	m	struct:Parameter_Description	typeref:typename:char[128]
Nemesis	zoltan/driver/dr_const.h	/^  int Nemesis;$/;"	m	struct:Output_Flags	typeref:typename:int
New_Elem_Hash_Node	zoltan/driver/dr_migrate.c	/^struct New_Elem_Hash_Node{$/;"	s	file:
New_Elem_Hash_Nodes	zoltan/driver/dr_migrate.c	/^static struct New_Elem_Hash_Node *New_Elem_Hash_Nodes = NULL;$/;"	v	typeref:struct:New_Elem_Hash_Node *	file:
New_Elem_Hash_Table	zoltan/driver/dr_migrate.c	/^static int *New_Elem_Hash_Table = NULL;$/;"	v	typeref:typename:int *	file:
New_Elem_Index	zoltan/driver/dr_migrate.c	/^static ZOLTAN_ID_TYPE *New_Elem_Index = NULL; \/* Array containing globalIDs of $/;"	v	typeref:typename:ZOLTAN_ID_TYPE *	file:
New_Elem_Index	zoltan/driver/dr_migrateCPP.cpp	/^static ZOLTAN_ID_TYPE *New_Elem_Index = NULL;    \/* Array containing globalIDs of $/;"	v	typeref:typename:ZOLTAN_ID_TYPE *	file:
New_Elem_Index	zoltan/fdriver/fdr_migrate.f90	/^integer(Zoltan_INT), allocatable, save :: New_Elem_Index(/;"	v	module:dr_migrate
New_Elem_Index_Size	zoltan/driver/dr_migrate.c	/^static int New_Elem_Index_Size = 0;   \/* Number of integers allocated in$/;"	v	typeref:typename:int	file:
New_Elem_Index_Size	zoltan/driver/dr_migrateCPP.cpp	/^static int New_Elem_Index_Size = 0;   \/* Number of integers allocated in$/;"	v	typeref:typename:int	file:
New_Elem_Index_Size	zoltan/fdriver/fdr_migrate.f90	/^integer(Zoltan_INT), save :: New_Elem_Index_Size /;"	v	module:dr_migrate
NextTimeStruct	zoltan/Utilities/Timer/zoltan_timer.c	/^  int NextTimeStruct;     \/* Index of next unused TimeStruct *\/$/;"	m	struct:Zoltan_Timer	typeref:typename:int	file:
No_Global_Objects	zoltan/driver/dr_const.h	/^  int No_Global_Objects;    \/* Test case where there are no objects on any process *\/$/;"	m	struct:Test_Flags	typeref:typename:int
Null_Lists	zoltan/driver/dr_const.h	/^  int Null_Lists;           \/* Exercises null import or export lists to$/;"	m	struct:Test_Flags	typeref:typename:int
NumRepart	zoltan/phg/phg_build.c	/^#define NumRepart(/;"	d	file:
Num_Dim	zoltan/rcb/rcb.h	/^  int Num_Dim;    \/* Number of dimensions in the input geometry. *\/$/;"	m	struct:RCB_Struct	typeref:typename:int
Num_GID	zoltan/driver/dr_loadbal.c	/^static int Num_GID = 1, Num_LID = 1;$/;"	v	typeref:typename:int	file:
Num_GID	zoltan/zz/zz_const.h	/^  int Num_GID;                    \/*  The number of entries in Global IDs.   *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Num_Geom	zoltan/rcb/rib.h	/^    int                Num_Geom;$/;"	m	struct:RIB_Struct	typeref:typename:int
Num_Global_Parts	zoltan/driver/dr_loadbal.c	/^static int Num_Global_Parts;$/;"	v	typeref:typename:int	file:
Num_Global_Parts	zoltan/driver/dr_loadbalCPP.cpp	/^static int Num_Global_Parts;$/;"	v	typeref:typename:int	file:
Num_Global_Parts	zoltan/lb/lb_const.h	/^  int Num_Global_Parts;           \/*  The total number of parts.$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Num_Global_Parts_Param	zoltan/lb/lb_const.h	/^  int Num_Global_Parts_Param;     \/*  The number of global parts specified.$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Num_LID	zoltan/driver/dr_loadbal.c	/^static int Num_GID = 1, Num_LID = 1;$/;"	v	typeref:typename:int	file:
Num_LID	zoltan/zz/zz_const.h	/^  int Num_LID;                    \/*  The number of entries in Local IDs.    *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Num_Local_Parts_Param	zoltan/lb/lb_const.h	/^  int Num_Local_Parts_Param;      \/*  The number of local parts specified.$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Num_Proc	zoltan/ch/ch_init_dist.c	/^static int Num_Proc;        \/* Global number of processors                   *\/$/;"	v	typeref:typename:int	file:
Num_Proc	zoltan/fdriver/fdr_main.f90	/^  integer(Zoltan_INT) :: Proc, Num_Proc$/;"	v	program:fdriver
Num_Proc	zoltan/zz/zz_const.h	/^  int Num_Proc;                   \/*  The number of processors in the MPI$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Num_Proc_Dist	zoltan/ch/ch_init_dist.c	/^static int Num_Proc_Dist;   \/* Number of processors to distribute data; $/;"	v	typeref:typename:int	file:
Number_Iterations	zoltan/driver/dr_main.c	/^int Number_Iterations = 1;$/;"	v	typeref:typename:int
Number_Iterations	zoltan/driver/dr_mainCPP.cpp	/^int Number_Iterations = 1;$/;"	v	typeref:typename:int
OBJECT_PARTITIONING	zoltan/driver/dr_const.h	/^  OBJECT_PARTITIONING$/;"	e	enum:PARTITIONING_TYPE
OBJEXT	zoltan/Makefile.in	/^OBJEXT = @OBJEXT@$/;"	m
OBJEXT	zoltan/driver/Makefile.in	/^OBJEXT = @OBJEXT@$/;"	m
OBJEXT	zoltan/fdriver/Makefile.in	/^OBJEXT = @OBJEXT@$/;"	m
OCTOPI	zoltan/hier/hier.c	/^      OCTOPI,$/;"	e	enum:zoltan_platform_names	file:
ODIN	zoltan/hier/hier.c	/^      ODIN,$/;"	e	enum:zoltan_platform_names	file:
ORDER	zoltan/Makefile.am	/^ORDER = \\$/;"	m
ORDER	zoltan/Makefile.in	/^ORDER = \\$/;"	m
ORDER_H	zoltan/Makefile.am	/^ORDER_H = \\$/;"	m
ORDER_H	zoltan/Makefile.in	/^ORDER_H = \\$/;"	m
OUTPUT_FILES_MAX_NVTXS	zoltan/driver/dr_random_io.c	/^#define OUTPUT_FILES_MAX_NVTXS /;"	d	file:
OVIS_parameters	zoltan/ha/ha_ovis.h	/^struct OVIS_parameters {$/;"	s
OVIS_params	zoltan/ha/ha_ovis.c	/^static PARAM_VARS OVIS_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
Obj_Weight_Dim	zoltan/driver/dr_loadbal.c	/^static int Obj_Weight_Dim;$/;"	v	typeref:typename:int	file:
Obj_Weight_Dim	zoltan/zz/zz_const.h	/^  int Obj_Weight_Dim;             \/*  Dimension of the object weights, $/;"	m	struct:Zoltan_Struct	typeref:typename:int
OldRemap	zoltan/lb/lb_const.h	/^  int *OldRemap;                  \/*  Remapping array computed in previous$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int *
Only_Proc_Changes	zoltan/lb/lb_const.h	/^  int Only_Proc_Changes;              \/*  Pack and unpack objects during$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:int
Order	zoltan/include/zoltan_cpp.h	/^  int Order    ( int num_gid_entries,$/;"	f	class:Zoltan	typeref:typename:int
Order	zoltan/zz/zz_const.h	/^  struct Zoltan_Order_Struct  Order;   \/* Struct with info for ordering       *\/$/;"	m	struct:Zoltan_Struct	typeref:struct:Zoltan_Order_Struct
Order_Get_Block_Bounds	zoltan/include/zoltan_cpp.h	/^  int Order_Get_Block_Bounds(int block_num, int &first, int &last) {$/;"	f	class:Zoltan	typeref:typename:int
Order_Get_Block_Leaves	zoltan/include/zoltan_cpp.h	/^  void Order_Get_Block_Leaves(int *leaves) {$/;"	f	class:Zoltan	typeref:typename:void
Order_Get_Block_Parent	zoltan/include/zoltan_cpp.h	/^  int Order_Get_Block_Parent(int block_num) {$/;"	f	class:Zoltan	typeref:typename:int
Order_Get_Block_Size	zoltan/include/zoltan_cpp.h	/^  int Order_Get_Block_Size(int block_num) {$/;"	f	class:Zoltan	typeref:typename:int
Order_Get_Num_Blocks	zoltan/include/zoltan_cpp.h	/^  int Order_Get_Num_Blocks() {$/;"	f	class:Zoltan	typeref:typename:int
Order_Get_Num_Leaves	zoltan/include/zoltan_cpp.h	/^  int Order_Get_Num_Leaves() {$/;"	f	class:Zoltan	typeref:typename:int
Order_params	zoltan/order/order_params.h	/^static PARAM_VARS Order_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
Output	zoltan/driver/dr_main.c	/^struct Output_Flags Output;$/;"	v	typeref:struct:Output_Flags
Output	zoltan/driver/dr_mainCPP.cpp	/^struct Output_Flags Output;$/;"	v	typeref:struct:Output_Flags
Output_Flags	zoltan/driver/dr_const.h	/^struct Output_Flags {$/;"	s
Output_Parts	zoltan/phg/phg_hypergraph.h	/^  int *Output_Parts;        \/* Final partition #s for on-processor objects *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
PACKAGE	zoltan/Makefile.in	/^PACKAGE = @PACKAGE@$/;"	m
PACKAGE	zoltan/driver/Makefile.in	/^PACKAGE = @PACKAGE@$/;"	m
PACKAGE	zoltan/fdriver/Makefile.in	/^PACKAGE = @PACKAGE@$/;"	m
PACKAGE_BUGREPORT	zoltan/Makefile.in	/^PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@$/;"	m
PACKAGE_BUGREPORT	zoltan/driver/Makefile.in	/^PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@$/;"	m
PACKAGE_BUGREPORT	zoltan/fdriver/Makefile.in	/^PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@$/;"	m
PACKAGE_NAME	zoltan/Makefile.in	/^PACKAGE_NAME = @PACKAGE_NAME@$/;"	m
PACKAGE_NAME	zoltan/driver/Makefile.in	/^PACKAGE_NAME = @PACKAGE_NAME@$/;"	m
PACKAGE_NAME	zoltan/fdriver/Makefile.in	/^PACKAGE_NAME = @PACKAGE_NAME@$/;"	m
PACKAGE_STRING	zoltan/Makefile.in	/^PACKAGE_STRING = @PACKAGE_STRING@$/;"	m
PACKAGE_STRING	zoltan/driver/Makefile.in	/^PACKAGE_STRING = @PACKAGE_STRING@$/;"	m
PACKAGE_STRING	zoltan/fdriver/Makefile.in	/^PACKAGE_STRING = @PACKAGE_STRING@$/;"	m
PACKAGE_TARNAME	zoltan/Makefile.in	/^PACKAGE_TARNAME = @PACKAGE_TARNAME@$/;"	m
PACKAGE_TARNAME	zoltan/driver/Makefile.in	/^PACKAGE_TARNAME = @PACKAGE_TARNAME@$/;"	m
PACKAGE_TARNAME	zoltan/fdriver/Makefile.in	/^PACKAGE_TARNAME = @PACKAGE_TARNAME@$/;"	m
PACKAGE_URL	zoltan/Makefile.in	/^PACKAGE_URL = @PACKAGE_URL@$/;"	m
PACKAGE_URL	zoltan/driver/Makefile.in	/^PACKAGE_URL = @PACKAGE_URL@$/;"	m
PACKAGE_URL	zoltan/fdriver/Makefile.in	/^PACKAGE_URL = @PACKAGE_URL@$/;"	m
PACKAGE_VERSION	zoltan/Makefile.in	/^PACKAGE_VERSION = @PACKAGE_VERSION@$/;"	m
PACKAGE_VERSION	zoltan/driver/Makefile.in	/^PACKAGE_VERSION = @PACKAGE_VERSION@$/;"	m
PACKAGE_VERSION	zoltan/fdriver/Makefile.in	/^PACKAGE_VERSION = @PACKAGE_VERSION@$/;"	m
PAR	zoltan/Makefile.am	/^PAR = \\$/;"	m
PAR	zoltan/Makefile.in	/^PAR = \\$/;"	m
PARAMS	zoltan/Makefile.am	/^PARAMS = \\$/;"	m
PARAMS	zoltan/Makefile.in	/^PARAMS = \\$/;"	m
PARAMS_H	zoltan/Makefile.am	/^PARAMS_H = \\$/;"	m
PARAMS_H	zoltan/Makefile.in	/^PARAMS_H = \\$/;"	m
PARAM_LIST	zoltan/params/params_const.h	/^} PARAM_LIST;$/;"	t	typeref:struct:Param_List
PARAM_UTYPE	zoltan/params/params_const.h	/^} PARAM_UTYPE;$/;"	t	typeref:struct:Param_Utype
PARAM_VARS	zoltan/params/params_const.h	/^} PARAM_VARS;$/;"	t	typeref:struct:Param_Vars
PARIO_INFO	zoltan/driver/dr_input_const.h	/^typedef struct Parallel_IO  PARIO_INFO;$/;"	t	typeref:struct:Parallel_IO
PARIO_INFO	zoltan/fdriver/fdr_input.f90	/^type PARIO_INFO$/;"	t	module:dr_input
PARIO_INFO_PTR	zoltan/driver/dr_input_const.h	/^typedef struct Parallel_IO *PARIO_INFO_PTR;$/;"	t	typeref:struct:Parallel_IO *
PARMETIS	zoltan/lb/lb_const.h	/^  PARMETIS,$/;"	e	enum:Zoltan_LB_Method
PARMETIS31_ALWAYS_FREES_VSIZE	zoltan/tpls/parmetis_interface.c	/^#define  PARMETIS31_ALWAYS_FREES_VSIZE$/;"	d	file:
PARMETIS_INTERFACE	zoltan/Makefile.am	/^PARMETIS_INTERFACE = $(EXTRA_PARMETIS_INTERFACE)$/;"	m
PARMETIS_INTERFACE	zoltan/Makefile.am	/^PARMETIS_INTERFACE =$/;"	m
PARMETIS_INTERFACE_H	zoltan/Makefile.am	/^PARMETIS_INTERFACE_H = $(EXTRA_PARMETIS_INTERFACE_H)$/;"	m
PARMETIS_INTERFACE_H	zoltan/Makefile.am	/^PARMETIS_INTERFACE_H =$/;"	m
PARMETIS_MAJOR_VERSION	zoltan/tpls/parmetis_interface.h	/^#define PARMETIS_MAJOR_VERSION /;"	d
PARMETIS_MINOR_VERSION	zoltan/tpls/parmetis_interface.h	/^#define PARMETIS_MINOR_VERSION /;"	d
PARMETIS_SUBMINOR_VERSION	zoltan/tpls/parmetis_interface.c	/^#define PARMETIS_SUBMINOR_VERSION /;"	d	file:
PARTITIONING_TYPE	zoltan/driver/dr_const.h	/^enum PARTITIONING_TYPE {$/;"	g
PAR_H	zoltan/Makefile.am	/^PAR_H = \\$/;"	m
PAR_H	zoltan/Makefile.in	/^PAR_H = \\$/;"	m
PATH_SEPARATOR	zoltan/Makefile.in	/^PATH_SEPARATOR = @PATH_SEPARATOR@$/;"	m
PATH_SEPARATOR	zoltan/driver/Makefile.in	/^PATH_SEPARATOR = @PATH_SEPARATOR@$/;"	m
PATH_SEPARATOR	zoltan/fdriver/Makefile.in	/^PATH_SEPARATOR = @PATH_SEPARATOR@$/;"	m
PERL_EXE	zoltan/Makefile.in	/^PERL_EXE = @PERL_EXE@$/;"	m
PERL_EXE	zoltan/driver/Makefile.in	/^PERL_EXE = @PERL_EXE@$/;"	m
PERL_EXE	zoltan/fdriver/Makefile.in	/^PERL_EXE = @PERL_EXE@$/;"	m
PHG	zoltan/Makefile.am	/^PHG = \\$/;"	m
PHG	zoltan/Makefile.in	/^PHG = \\$/;"	m
PHGComm	zoltan/phg/phg_comm.h	/^typedef struct PHGCommStruct PHGComm;$/;"	t	typeref:struct:PHGCommStruct
PHGCommStruct	zoltan/phg/phg_comm.h	/^struct PHGCommStruct {$/;"	s
PHGPartParams	zoltan/phg/phg.h	/^typedef struct PHGPartParamsStruct PHGPartParams;$/;"	t	typeref:struct:PHGPartParamsStruct
PHGPartParamsStruct	zoltan/phg/phg.h	/^                                          struct PHGPartParamsStruct*);$/;"	t	typeref:typename:int ZOLTAN_PHG_COARSEPARTITION_FN (ZZ *,HGraph *,int,float *,Partition,struct *)
PHGPartParamsStruct	zoltan/phg/phg.h	/^                                     struct PHGPartParamsStruct*, float);$/;"	t	typeref:typename:int ZOLTAN_PHG_REFINEMENT_FN (ZZ *,HGraph *,int,float *,Partition,struct *,float)
PHGPartParamsStruct	zoltan/phg/phg.h	/^                                   struct PHGPartParamsStruct*);$/;"	t	typeref:typename:int ZOLTAN_PHG_MATCHING_FN (ZZ *,HGraph *,ZOLTAN_GNO_TYPE *,struct *)
PHGPartParamsStruct	zoltan/phg/phg.h	/^struct PHGPartParamsStruct {$/;"	s
PHG_ADD_EDGE_WEIGHTS	zoltan/phg/phg_const.h	/^#define PHG_ADD_EDGE_WEIGHTS /;"	d
PHG_ADD_NO_WEIGHT	zoltan/phg/phg_const.h	/^#define PHG_ADD_NO_WEIGHT /;"	d
PHG_ADD_PINS_WEIGHT	zoltan/phg/phg_const.h	/^#define PHG_ADD_PINS_WEIGHT /;"	d
PHG_ADD_UNIT_WEIGHT	zoltan/phg/phg_const.h	/^#define PHG_ADD_UNIT_WEIGHT /;"	d
PHG_DEBUG_ALL	zoltan/phg/phg.h	/^#define PHG_DEBUG_ALL /;"	d
PHG_DEBUG_LIST	zoltan/phg/phg.h	/^#define PHG_DEBUG_LIST /;"	d
PHG_DEBUG_NONE	zoltan/phg/phg.h	/^#define PHG_DEBUG_NONE /;"	d
PHG_DEBUG_PLOT	zoltan/phg/phg.h	/^#define PHG_DEBUG_PLOT /;"	d
PHG_DEBUG_PRINT	zoltan/phg/phg.h	/^#define PHG_DEBUG_PRINT /;"	d
PHG_FLAG_ERROR_EDGE_WEIGHTS	zoltan/phg/phg_const.h	/^#define PHG_FLAG_ERROR_EDGE_WEIGHTS /;"	d
PHG_H	zoltan/Makefile.am	/^PHG_H = \\$/;"	m
PHG_H	zoltan/Makefile.in	/^PHG_H = \\$/;"	m
PHG_MAX_EDGE_WEIGHTS	zoltan/phg/phg_const.h	/^#define PHG_MAX_EDGE_WEIGHTS /;"	d
PHG_PROC_SPLIT	zoltan/phg/phg_rdivide.c	/^#define PHG_PROC_SPLIT /;"	d	file:
PHG_params	zoltan/phg/phg_params.h	/^static PARAM_VARS PHG_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
PIVOT_CHOICE_BISECTION	zoltan/rcb/rcb.c	/^#define PIVOT_CHOICE_BISECTION /;"	d	file:
PIVOT_CHOICE_RANDOM	zoltan/rcb/rcb.c	/^#define PIVOT_CHOICE_RANDOM /;"	d	file:
PLAN_TAG	zoltan/phg/phg_coarse.c	/^#define PLAN_TAG /;"	d	file:
PMV3_OPTION_DBGLVL	zoltan/tpls/parmetis_interface.h	/^#define PMV3_OPTION_DBGLVL /;"	d
PMV3_OPTION_IPART	zoltan/tpls/parmetis_interface.h	/^#define PMV3_OPTION_IPART /;"	d
PMV3_OPTION_PSR	zoltan/tpls/parmetis_interface.h	/^#define PMV3_OPTION_PSR /;"	d
PMV3_OPTION_SEED	zoltan/tpls/parmetis_interface.h	/^#define PMV3_OPTION_SEED /;"	d
PMV3_OPT_USE_OBJ_SIZE	zoltan/tpls/parmetis_interface.h	/^#define PMV3_OPT_USE_OBJ_SIZE /;"	d
POST_INSTALL	zoltan/Makefile.in	/^POST_INSTALL = :$/;"	m
POST_INSTALL	zoltan/driver/Makefile.in	/^POST_INSTALL = :$/;"	m
POST_INSTALL	zoltan/fdriver/Makefile.in	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	zoltan/Makefile.in	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	zoltan/driver/Makefile.in	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	zoltan/fdriver/Makefile.in	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	zoltan/Makefile.in	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	zoltan/driver/Makefile.in	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	zoltan/fdriver/Makefile.in	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	zoltan/Makefile.in	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	zoltan/driver/Makefile.in	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	zoltan/fdriver/Makefile.in	/^PRE_UNINSTALL = :$/;"	m
PRINT_DEBUG_INFO	zoltan/driver/dr_hg_io.c	/^#define PRINT_DEBUG_INFO /;"	d	file:
PRINT_SYNC	zoltan/par/par_sync.c	/^#define PRINT_SYNC /;"	d	file:
PROB_INFO	zoltan/driver/dr_const.h	/^typedef struct Problem_Description  PROB_INFO;$/;"	t	typeref:struct:Problem_Description
PROB_INFO	zoltan/fdriver/fdr_const.f90	/^type PROB_INFO$/;"	t	module:dr_const
PROB_INFO_PTR	zoltan/driver/dr_const.h	/^typedef struct Problem_Description *PROB_INFO_PTR;$/;"	t	typeref:struct:Problem_Description *
PROGRAMS	zoltan/driver/Makefile.in	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROGRAMS	zoltan/fdriver/Makefile.in	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROTO	zoltan/include/zoltan_mem.h	/^#   define	PROTO(/;"	d
PROTO	zoltan/params/params_const.h	/^#   define	PROTO(/;"	d
PSUM_THRESHOLD	zoltan/phg/phg_match.c	/^#define PSUM_THRESHOLD /;"	d	file:
Pack_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_PACK_OBJ_FN *Pack_Obj;        \/* Routine that packs object data for$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PACK_OBJ_FN *
Pack_Obj_Data	zoltan/zz/zz_const.h	/^  void *Pack_Obj_Data;                 \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Pack_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_PACK_OBJ_FORT_FN *Pack_Obj_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PACK_OBJ_FORT_FN *
Pack_Obj_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_PACK_OBJ_MULTI_FN *Pack_Obj_Multi;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PACK_OBJ_MULTI_FN *
Pack_Obj_Multi_Data	zoltan/zz/zz_const.h	/^  void *Pack_Obj_Multi_Data;                 \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Pack_Obj_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_PACK_OBJ_MULTI_FORT_FN *Pack_Obj_Multi_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_PACK_OBJ_MULTI_FORT_FN *
Packing	zoltan/phg/phg_hypergraph.h	/^typedef int *Packing;   \/* length |V|, packing information of vertices *\/$/;"	t	typeref:typename:int *
Parallel_IO	zoltan/driver/dr_input_const.h	/^struct Parallel_IO$/;"	s
Param_List	zoltan/params/params_const.h	/^typedef struct Param_List {$/;"	s
Param_Utype	zoltan/params/params_const.h	/^typedef struct Param_Utype {$/;"	s
Param_Vars	zoltan/params/params_const.h	/^typedef struct Param_Vars {$/;"	s
Param_func	zoltan/params/set_param.c	/^static ZOLTAN_SET_PARAM_FN * Param_func[] = {$/;"	v	typeref:typename:ZOLTAN_SET_PARAM_FN * []	file:
ParameterList	zoltan/driver/dr_input_const.h	/^struct ParameterList$/;"	s
Parameter_Description	zoltan/driver/dr_const.h	/^struct Parameter_Description {$/;"	s
Parameter_Pair	zoltan/driver/dr_const.h	/^typedef struct Parameter_Description Parameter_Pair;$/;"	t	typeref:struct:Parameter_Description
Parameter_Pair	zoltan/fdriver/fdr_const.f90	/^type Parameter_Pair$/;"	t	module:dr_const
Params	zoltan/zz/zz_const.h	/^  struct Param_List *Params;      \/*  List of parameter names & new vals     *\/$/;"	m	struct:Zoltan_Struct	typeref:struct:Param_List *
Parmetis_params	zoltan/tpls/parmetis_interface_params.h	/^static PARAM_VARS Parmetis_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
Part	zoltan/phg/phg_Vcycle.c	/^    Partition         Part;       \/* original hg and Part, don't delete them *\/  $/;"	m	struct:tagVCycle	typeref:typename:Partition	file:
Part	zoltan/rcb/shared.h	/^  int *Part;                     \/* New partition to which the dot is $/;"	m	struct:Dot_Struct	typeref:typename:int *
PartDist	zoltan/lb/lb_const.h	/^  int *PartDist;                  \/*  Array describing distribution of $/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int *
Part_Info	zoltan/lb/lb_const.h	/^  struct Zoltan_part_info *Part_Info; \/*  Array of part size info.  *\/$/;"	m	struct:Zoltan_LB_Struct	typeref:struct:Zoltan_part_info *
Part_Info_Len	zoltan/lb/lb_const.h	/^  int Part_Info_Len;              \/*  Actual length of Part_Info arrays. *\/$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Part_Info_Max_Len	zoltan/lb/lb_const.h	/^  int Part_Info_Max_Len;          \/*  Allocated length of Part_Info arrays. *\/$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Part_id	zoltan/lb/lb_const.h	/^  int Part_id;         \/*  Part id.           *\/$/;"	m	struct:Zoltan_part_info	typeref:typename:int
Partition	zoltan/hsfc/hsfc.h	/^   } Partition;         \/* interval is half open, [l,r) *\/$/;"	t	typeref:struct:Partition
Partition	zoltan/hsfc/hsfc.h	/^typedef struct Partition {$/;"	s
Partition	zoltan/phg/phg_hypergraph.h	/^typedef int *Partition; \/* length |V|, partition ID for each vertex *\/$/;"	t	typeref:typename:int *
Permutation	zoltan/zz/zz_const.h	/^  int Permutation[3]; \/* if trans. is simple coord switch, use this instead *\/$/;"	m	struct:Zoltan_Transform_Struct	typeref:typename:int[3]
Pin_Procs	zoltan/phg/phg_hypergraph.h	/^  int *Pin_Procs;           \/* Process owning each pin  *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
Plan	zoltan/include/zoltan_comm_cpp.h	/^  ZOLTAN_COMM_OBJ *Plan;$/;"	m	class:Zoltan_Comm	typeref:typename:ZOLTAN_COMM_OBJ *
Plot_Partition	zoltan/driver/dr_const.h	/^  int Plot_Partition;$/;"	m	struct:Output_Flags	typeref:typename:int
Point_Assign	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_POINT_ASSIGN_FN *Point_Assign;$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:ZOLTAN_LB_POINT_ASSIGN_FN *
Post_Migrate	zoltan/lb/lb_const.h	/^  ZOLTAN_POST_MIGRATE_FN *Post_Migrate;\/* Function that performs application$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_POST_MIGRATE_FN *
Post_Migrate_Data	zoltan/lb/lb_const.h	/^  void *Post_Migrate_Data;             \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:void *
Post_Migrate_Fort	zoltan/lb/lb_const.h	/^  ZOLTAN_POST_MIGRATE_FORT_FN *Post_Migrate_Fort;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_POST_MIGRATE_FORT_FN *
Post_Migrate_PP	zoltan/lb/lb_const.h	/^  ZOLTAN_POST_MIGRATE_PP_FN *Post_Migrate_PP;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_POST_MIGRATE_PP_FN *
Post_Migrate_PP_Data	zoltan/lb/lb_const.h	/^  void *Post_Migrate_PP_Data;        \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:void *
Post_Migrate_PP_Fort	zoltan/lb/lb_const.h	/^  ZOLTAN_POST_MIGRATE_PP_FORT_FN *Post_Migrate_PP_Fort;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_POST_MIGRATE_PP_FORT_FN *
Pre_Migrate	zoltan/lb/lb_const.h	/^  ZOLTAN_PRE_MIGRATE_FN *Pre_Migrate;  \/* Function that performs application$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_PRE_MIGRATE_FN *
Pre_Migrate_Data	zoltan/lb/lb_const.h	/^  void *Pre_Migrate_Data;              \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:void *
Pre_Migrate_Fort	zoltan/lb/lb_const.h	/^  ZOLTAN_PRE_MIGRATE_FORT_FN *Pre_Migrate_Fort;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_PRE_MIGRATE_FORT_FN *
Pre_Migrate_PP	zoltan/lb/lb_const.h	/^  ZOLTAN_PRE_MIGRATE_PP_FN *Pre_Migrate_PP;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_PRE_MIGRATE_PP_FN *
Pre_Migrate_PP_Data	zoltan/lb/lb_const.h	/^  void *Pre_Migrate_PP_Data;         \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:void *
Pre_Migrate_PP_Fort	zoltan/lb/lb_const.h	/^  ZOLTAN_PRE_MIGRATE_PP_FORT_FN *Pre_Migrate_PP_Fort;$/;"	m	struct:Zoltan_Migrate_Struct	typeref:typename:ZOLTAN_PRE_MIGRATE_PP_FORT_FN *
Prev_Global_Parts_Param	zoltan/lb/lb_const.h	/^  int Prev_Global_Parts_Param;    \/*  The previous values of$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Prev_Local_Parts_Param	zoltan/lb/lb_const.h	/^  int Prev_Local_Parts_Param;     \/*  The previous values of$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Print	zoltan/include/zoltan_dd_cpp.h	/^  int Print () const$/;"	f	class:Zoltan_DD	typeref:typename:int
Print	zoltan/include/zoltan_timer_cpp.h	/^  int Print(const int &ts_idx, const int &proc, $/;"	f	class:Zoltan_Timer_Object	typeref:typename:int
PrintAll	zoltan/include/zoltan_timer_cpp.h	/^  int PrintAll(const int &proc, const MPI_Comm &comm, FILE *os) const {$/;"	f	class:Zoltan_Timer_Object	typeref:typename:int
PrintArr	zoltan/phg/phg_distrib.c	/^static void PrintArr(PHGComm *hgc, char *st, int *ar, int n)$/;"	f	typeref:typename:void	file:
PrintGraph	zoltan/coloring/coloring.c	/^static void PrintGraph(ZZ *zz, char *name, int base, int nvtx, int *xadj, ZOLTAN_GNO_TYPE *adj, /;"	f	typeref:typename:void	file:
ProRedL	zoltan/phg/phg.h	/^  float ProRedL;           \/* V-cycle processor reduction limit in % of pins *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
Problem_Description	zoltan/driver/dr_const.h	/^struct Problem_Description$/;"	s
Proc	zoltan/fdriver/fdr_main.f90	/^  integer(Zoltan_INT) :: Proc,/;"	v	program:fdriver
Proc	zoltan/rcb/shared.h	/^  int *Proc;                     \/* Processor ID for processor owning a dot.$/;"	m	struct:Dot_Struct	typeref:typename:int *
Proc	zoltan/zz/zz_const.h	/^  int Proc;                       \/*  The processor's ID within the MPI$/;"	m	struct:Zoltan_Struct	typeref:typename:int
ProcDist	zoltan/lb/lb_const.h	/^  int *ProcDist;                  \/*  Array describing distribution of $/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int *
ProcForRepart	zoltan/phg/phg_build.c	/^#define ProcForRepart(/;"	d	file:
QUAD1	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
QUAD2	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
RANDOM	zoltan/lb/lb_const.h	/^  RANDOM, $/;"	e	enum:Zoltan_LB_Method
RANLIB	zoltan/Makefile.in	/^RANLIB = @RANLIB@$/;"	m
RANLIB	zoltan/driver/Makefile.in	/^RANLIB = @RANLIB@$/;"	m
RANLIB	zoltan/fdriver/Makefile.in	/^RANLIB = @RANLIB@$/;"	m
RB_MAX_WGTS	zoltan/rcb/shared.h	/^#define RB_MAX_WGTS /;"	d
RCB	zoltan/Makefile.am	/^RCB = \\$/;"	m
RCB	zoltan/Makefile.in	/^RCB = \\$/;"	m
RCB	zoltan/lb/lb_const.h	/^  RCB,$/;"	e	enum:Zoltan_LB_Method
RCB_Box	zoltan/driver/dr_const.h	/^  int RCB_Box;              \/* Exercises Zoltan_RCB_Box. *\/$/;"	m	struct:Test_Flags	typeref:typename:int
RCB_Box	zoltan/include/zoltan_cpp.h	/^  int RCB_Box( const int &part,$/;"	f	class:Zoltan	typeref:typename:int
RCB_DEFAULT_OUTPUT_LEVEL	zoltan/rcb/rcb.c	/^#define RCB_DEFAULT_OUTPUT_LEVEL /;"	d	file:
RCB_DEFAULT_OVERALLOC	zoltan/rcb/rcb.c	/^#define RCB_DEFAULT_OVERALLOC /;"	d	file:
RCB_DEFAULT_REUSE	zoltan/rcb/rcb.c	/^#define RCB_DEFAULT_REUSE /;"	d	file:
RCB_H	zoltan/Makefile.am	/^RCB_H = \\$/;"	m
RCB_H	zoltan/Makefile.in	/^RCB_H = \\$/;"	m
RCB_STRUCT	zoltan/rcb/rcb.h	/^} RCB_STRUCT;$/;"	t	typeref:struct:RCB_Struct
RCB_Struct	zoltan/rcb/rcb.h	/^typedef struct RCB_Struct {$/;"	s
RCB_params	zoltan/rcb/rcb_params.h	/^static PARAM_VARS RCB_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
REALLOC_FACTOR	zoltan/tpls/third_library_tools.h	/^#define REALLOC_FACTOR /;"	d
RECOLORTAG	zoltan/coloring/coloring.c	/^#define RECOLORTAG /;"	d	file:
RECURSIVE_CLEAN_TARGETS	zoltan/Makefile.in	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	zoltan/Makefile.in	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
REDSKY	zoltan/hier/hier.c	/^      REDSKY,$/;"	e	enum:zoltan_platform_names	file:
REFINEMENT_LIMIT	zoltan/hsfc/hsfc.h	/^static const double  REFINEMENT_LIMIT = 10.0 * DBL_EPSILON;$/;"	v	typeref:typename:const double
REFTREE	zoltan/Makefile.am	/^REFTREE = \\$/;"	m
REFTREE	zoltan/Makefile.in	/^REFTREE = \\$/;"	m
REFTREE	zoltan/lb/lb_const.h	/^  REFTREE,$/;"	e	enum:Zoltan_LB_Method
REFTREE_H	zoltan/Makefile.am	/^REFTREE_H = \\$/;"	m
REFTREE_H	zoltan/Makefile.in	/^REFTREE_H = \\$/;"	m
REFTREE_params	zoltan/reftree/reftree_build.c	/^static PARAM_VARS REFTREE_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
RETURN_IPERM	zoltan/order/order_const.h	/^#define RETURN_IPERM /;"	d
RETURN_RANK	zoltan/order/order_const.h	/^#define RETURN_RANK /;"	d
REVERSE	zoltan/coloring/coloring.c	/^#define REVERSE /;"	d	file:
RIB	zoltan/lb/lb_const.h	/^  RIB,$/;"	e	enum:Zoltan_LB_Method
RIB_DEFAULT_OUTPUT_LEVEL	zoltan/rcb/rib.c	/^#define RIB_DEFAULT_OUTPUT_LEVEL /;"	d	file:
RIB_DEFAULT_OVERALLOC	zoltan/rcb/rib.c	/^#define RIB_DEFAULT_OVERALLOC /;"	d	file:
RIB_STRUCT	zoltan/rcb/rib.h	/^} RIB_STRUCT;$/;"	t	typeref:struct:RIB_Struct
RIB_Struct	zoltan/rcb/rib.h	/^typedef struct RIB_Struct {$/;"	s
RIB_params	zoltan/rcb/rib_params.h	/^static PARAM_VARS RIB_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
RNGState	zoltan/phg/phg_comm.h	/^  unsigned int RNGState;  \/* State for random-number generator$/;"	m	struct:PHGCommStruct	typeref:typename:unsigned int
RNGState_col	zoltan/phg/phg_comm.h	/^  unsigned int RNGState_col;  \/* State for random-number generator w.r.t.$/;"	m	struct:PHGCommStruct	typeref:typename:unsigned int
RNGState_row	zoltan/phg/phg_comm.h	/^  unsigned int RNGState_row;  \/* State for random-number generator w.r.t.$/;"	m	struct:PHGCommStruct	typeref:typename:unsigned int
ROTL32	zoltan/zz/murmur3.c	/^#define ROTL32(/;"	d	file:
ROTL64	zoltan/zz/murmur3.c	/^#define ROTL64(/;"	d	file:
ROUNDS_CONSTANT	zoltan/phg/phg_match.c	/^#define ROUNDS_CONSTANT /;"	d	file:
ROWS	zoltan/driver/dr_input_const.h	/^#define ROWS /;"	d
RUNNING	zoltan/Utilities/Timer/zoltan_timer.c	/^#define RUNNING /;"	d	file:
Random_params	zoltan/simple/random.c	/^static PARAM_VARS Random_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
RandomizeInitDist	zoltan/phg/phg.h	/^  int RandomizeInitDist;  \/* Flag indicating whether to randomly distribute$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
Range_Info	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^   } Range_Info;$/;"	t	typeref:struct:__anon50a459380108	file:
Recv_GNOs	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *Recv_GNOs;  \/* Vertex GNOs of vtxs in 2D decomposition$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE *
Reduce_Dim_Params	zoltan/zz/zz_coord.c	/^static PARAM_VARS Reduce_Dim_Params[] = {$/;"	v	typeref:typename:PARAM_VARS[]	file:
Refinement	zoltan/phg/phg.h	/^  ZOLTAN_PHG_REFINEMENT_FN *Refinement;      \/* pointer to refinement fn *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:ZOLTAN_PHG_REFINEMENT_FN *
Remap	zoltan/lb/lb_const.h	/^  int *Remap;                     \/*  Remapping array; relabels computed $/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int *
Remap_Flag	zoltan/lb/lb_const.h	/^  int Remap_Flag;                 \/*  Flag indicating whether parts$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Remove	zoltan/include/zoltan_dd_cpp.h	/^  int Remove (ZOLTAN_ID_PTR gid, const int &count)$/;"	f	class:Zoltan_DD	typeref:typename:int
RepartMultiplier	zoltan/phg/phg.h	/^  float RepartMultiplier;  \/* In PHG_REPART, multiply input edge weights by$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
Reset	zoltan/include/zoltan_timer_cpp.h	/^  int Reset(const int &ts_idx, const int &use_barrier, $/;"	f	class:Zoltan_Timer_Object	typeref:typename:int
Resize	zoltan/include/zoltan_comm_cpp.h	/^  int Resize(int *sizes, const int &tag, int *sum_recv_sizes)$/;"	f	class:Zoltan_Comm	typeref:typename:int
Return_Lists	zoltan/lb/lb_const.h	/^  int Return_Lists;               \/*  Flag indicating which lists (if any)$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
S	zoltan/coloring/bucket.h	/^typedef struct S$/;"	s
S	zoltan/matlab/zoltan.m	/^    S = (A~=0); % Structure only$/;"	v
S861036	zoltan/hier/hier.c	/^      S861036,$/;"	e	enum:zoltan_platform_names	file:
SAFE_MALLOC	zoltan/driver/dr_param_file.c	/^#define SAFE_MALLOC(/;"	d	file:
SAFE_MALLOC	zoltan/driver/dr_param_fileCPP.cpp	/^#define SAFE_MALLOC(/;"	d	file:
SCOTCH_INTERFACE	zoltan/Makefile.am	/^SCOTCH_INTERFACE = $(EXTRA_SCOTCH_INTERFACE)$/;"	m
SCOTCH_INTERFACE	zoltan/Makefile.am	/^SCOTCH_INTERFACE =$/;"	m
SCOTCH_INTERFACE_H	zoltan/Makefile.am	/^SCOTCH_INTERFACE_H = $(EXTRA_SCOTCH_INTERFACE_H)$/;"	m
SCOTCH_INTERFACE_H	zoltan/Makefile.am	/^SCOTCH_INTERFACE_H =$/;"	m
SET_GLOBAL_GRAPH	zoltan/tpls/third_library_const.h	/^#define SET_GLOBAL_GRAPH(/;"	d
SET_LOCAL_GRAPH	zoltan/tpls/third_library_const.h	/^#define SET_LOCAL_GRAPH(/;"	d
SET_MAKE	zoltan/Makefile.in	/^SET_MAKE = @SET_MAKE@$/;"	m
SET_MAKE	zoltan/driver/Makefile.in	/^SET_MAKE = @SET_MAKE@$/;"	m
SET_MAKE	zoltan/fdriver/Makefile.in	/^SET_MAKE = @SET_MAKE@$/;"	m
SET_MAX_NODE	zoltan/phg/phg_tree.c	/^#define SET_MAX_NODE(/;"	d	file:
SET_MAX_NODE	zoltan/phg/phg_two_ways.c	/^#define SET_MAX_NODE(/;"	d	file:
SET_MIN_NODE	zoltan/phg/phg_tree.c	/^#define SET_MIN_NODE(/;"	d	file:
SET_MIN_NODE	zoltan/phg/phg_two_ways.c	/^#define SET_MIN_NODE(/;"	d	file:
SET_NO_GRAPH	zoltan/tpls/third_library_const.h	/^#define SET_NO_GRAPH(/;"	d
SET_PARAM_VAL	zoltan/params/assign_param_vals.c	/^#define SET_PARAM_VAL(/;"	d	file:
SHELL	zoltan/Makefile.in	/^SHELL = @SHELL@$/;"	m
SHELL	zoltan/driver/Makefile.in	/^SHELL = @SHELL@$/;"	m
SHELL	zoltan/fdriver/Makefile.in	/^SHELL = @SHELL@$/;"	m
SHELL1	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
SHELL2	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
SHOW_DISTMATRIX	zoltan/phg/phg_util.c	/^#define SHOW_DISTMATRIX$/;"	d	file:
SHOW_MINMAXP	zoltan/phg/phg_util.c	/^#define SHOW_MINMAXP$/;"	d	file:
SIGN	zoltan/zz/zz_coord.c	/^#define SIGN(/;"	d	file:
SIMPLE	zoltan/Makefile.am	/^SIMPLE = \\$/;"	m
SIMPLE	zoltan/Makefile.in	/^SIMPLE = \\$/;"	m
SIMPLE_H	zoltan/Makefile.am	/^SIMPLE_H = \\$/;"	m
SIMPLE_H	zoltan/Makefile.in	/^SIMPLE_H = \\$/;"	m
SIMPLE_HUND	zoltan/order/hund.c	/^#define SIMPLE_HUND$/;"	d	file:
SIZE_PART	zoltan/order/hund.c	/^#define SIZE_PART /;"	d	file:
SKIPEQ	zoltan/driver/dr_input.c	/^#define SKIPEQ /;"	d	file:
SKIPW	zoltan/driver/dr_input.c	/^#define SKIPW /;"	d	file:
SMALL_PRIME	zoltan/phg/phg_comm.h	/^#define SMALL_PRIME /;"	d
SNTAG	zoltan/coloring/coloring.c	/^#define SNTAG /;"	d	file:
SOURCES	zoltan/CMakeLists.txt	/^SET(SOURCES $/;"	v
SOURCES	zoltan/CMakeLists.txt	/^SET(SOURCES$/;"	v
SOURCES	zoltan/Makefile.in	/^SOURCES = $(libzoltan_a_SOURCES) $(EXTRA_libzoltan_a_SOURCES)$/;"	m
SOURCES	zoltan/driver/Makefile.in	/^SOURCES = $(zCPPdrive_SOURCES) $(zdrive_SOURCES)$/;"	m
SOURCES	zoltan/fdriver/Makefile.in	/^SOURCES = $(zfdrive_SOURCES)$/;"	m
SPHERE	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
STANDARD	zoltan/driver/dr_compress_const.h	/^  STANDARD = 0,$/;"	e	enum:ZOLTAN_FILETYPE_
START_CALLBACK_TIMER	zoltan/driver/dr_loadbal.c	/^#define START_CALLBACK_TIMER /;"	d	file:
START_CALLBACK_TIMER	zoltan/driver/dr_loadbal.c	/^#define START_CALLBACK_TIMER$/;"	d	file:
START_CALLBACK_TIMER	zoltan/driver/dr_loadbalCPP.cpp	/^#define START_CALLBACK_TIMER /;"	d	file:
START_CALLBACK_TIMER	zoltan/driver/dr_loadbalCPP.cpp	/^#define START_CALLBACK_TIMER$/;"	d	file:
STOP_CALLBACK_TIMER	zoltan/driver/dr_loadbal.c	/^#define STOP_CALLBACK_TIMER /;"	d	file:
STOP_CALLBACK_TIMER	zoltan/driver/dr_loadbal.c	/^#define STOP_CALLBACK_TIMER$/;"	d	file:
STOP_CALLBACK_TIMER	zoltan/driver/dr_loadbalCPP.cpp	/^#define STOP_CALLBACK_TIMER /;"	d	file:
STOP_CALLBACK_TIMER	zoltan/driver/dr_loadbalCPP.cpp	/^#define STOP_CALLBACK_TIMER$/;"	d	file:
STRIP	zoltan/Makefile.in	/^STRIP = @STRIP@$/;"	m
STRIP	zoltan/driver/Makefile.in	/^STRIP = @STRIP@$/;"	m
STRIP	zoltan/fdriver/Makefile.in	/^STRIP = @STRIP@$/;"	m
SUBDIRS	zoltan/Makefile.am	/^SUBDIRS = . driver $(FDRIVER_SUBDIR)$/;"	m
SUBDIRS	zoltan/Makefile.am	/^SUBDIRS = .$/;"	m
SWAP	zoltan/coloring/coloring.h	/^#define SWAP(/;"	d
SYMMETRIZE	zoltan/tpls/third_library_const.h	/^#define SYMMETRIZE /;"	d
SYNCHRONOUS	zoltan/coloring/coloring.c	/^#define SYNCHRONOUS /;"	d	file:
S_HEX2	zoltan/driver/dr_elem_const.h	/^              S_HEX2, HEX2, TET1, TET2, WEDGE1, WEDGE2,$/;"	e	enum:__anon462eee3b0103
S_QUAD2	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	e	enum:__anon462eee3b0103
Scotch_Dgraph	zoltan/tpls/scotch_interface.c	/^#define Scotch_Dgraph /;"	d	file:
Scotch_params	zoltan/tpls/scotch_interface_params.h	/^static PARAM_VARS Scotch_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
Seed	zoltan/zz/zz_const.h	/^  unsigned int Seed;              \/*  Zoltan_Rand seed: default or provided $/;"	m	struct:Zoltan_Struct	typeref:typename:unsigned int
Set_Child_List_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Child_List_Fn      ( ZOLTAN_CHILD_LIST_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Child_Weight_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Child_Weight_Fn    ( ZOLTAN_CHILD_WEIGHT_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Coarse_Obj_List_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Coarse_Obj_List_Fn ( ZOLTAN_COARSE_OBJ_LIST_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Edge_List_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Edge_List_Fn       ( ZOLTAN_EDGE_LIST_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Edge_List_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Edge_List_Multi_Fn ( ZOLTAN_EDGE_LIST_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_First_Coarse_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_First_Coarse_Obj_Fn( ZOLTAN_FIRST_COARSE_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_First_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_First_Obj_Fn       ( ZOLTAN_FIRST_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Fixed_Obj_List_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Fixed_Obj_List_Fn    ( ZOLTAN_FIXED_OBJ_LIST_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Fn  ( const ZOLTAN_FN_TYPE &fn_type,$/;"	f	class:Zoltan	typeref:typename:int
Set_Geom_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Geom_Fn            ( ZOLTAN_GEOM_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Geom_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Geom_Multi_Fn      ( ZOLTAN_GEOM_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_HG_CS_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_HG_CS_Fn    ( ZOLTAN_HG_CS_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_HG_Edge_Weights_Fn	zoltan/include/zoltan_cpp.h	/^#define Set_HG_Edge_Weights_Fn /;"	d
Set_HG_Edge_Wts_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_HG_Edge_Wts_Fn    ( ZOLTAN_HG_EDGE_WTS_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_HG_Size_CS_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_HG_Size_CS_Fn    ( ZOLTAN_HG_SIZE_CS_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_HG_Size_Edge_Weights_Fn	zoltan/include/zoltan_cpp.h	/^#define Set_HG_Size_Edge_Weights_Fn /;"	d
Set_HG_Size_Edge_Wts_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_HG_Size_Edge_Wts_Fn    ( ZOLTAN_HG_SIZE_EDGE_WTS_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Hash_Fn	zoltan/include/zoltan_dd_cpp.h	/^  int Set_Hash_Fn (unsigned int (*hash) (ZOLTAN_ID_PTR, int, unsigned int))$/;"	f	class:Zoltan_DD	typeref:typename:int
Set_Hier_Method_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Hier_Method_Fn( ZOLTAN_HIER_METHOD_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Hier_Num_Levels_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Hier_Num_Levels_Fn( ZOLTAN_HIER_NUM_LEVELS_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Hier_Part_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Hier_Part_Fn( ZOLTAN_HIER_PART_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Hier_Partition_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Hier_Partition_Fn( ZOLTAN_HIER_PART_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Mid_Migrate_PP_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Mid_Migrate_PP_Fn  ( ZOLTAN_MID_MIGRATE_PP_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Next_Coarse_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Next_Coarse_Obj_Fn ( ZOLTAN_NEXT_COARSE_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Next_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Next_Obj_Fn        ( ZOLTAN_NEXT_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Child_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Child_Fn       ( ZOLTAN_NUM_CHILD_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Coarse_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Coarse_Obj_Fn  ( ZOLTAN_NUM_COARSE_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Edges_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Edges_Fn       ( ZOLTAN_NUM_EDGES_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Edges_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Edges_Multi_Fn ( ZOLTAN_NUM_EDGES_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Fixed_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Fixed_Obj_Fn    ( ZOLTAN_NUM_FIXED_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Geom_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Geom_Fn        ( ZOLTAN_NUM_GEOM_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Num_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Num_Obj_Fn         ( ZOLTAN_NUM_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Obj_List_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Obj_List_Fn        ( ZOLTAN_OBJ_LIST_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Obj_Size_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Obj_Size_Fn        ( ZOLTAN_OBJ_SIZE_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Obj_Size_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Obj_Size_Multi_Fn  ( ZOLTAN_OBJ_SIZE_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Pack_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Pack_Obj_Fn        ( ZOLTAN_PACK_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Pack_Obj_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Pack_Obj_Multi_Fn  ( ZOLTAN_PACK_OBJ_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Param	zoltan/include/zoltan_cpp.h	/^  int Set_Param( const std::string & param, const std::string & value )$/;"	f	class:Zoltan	typeref:typename:int
Set_Param_Vec	zoltan/include/zoltan_cpp.h	/^  int Set_Param_Vec( const std::string & param, const std::string & value, $/;"	f	class:Zoltan	typeref:typename:int
Set_Part_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Part_Fn        ( ZOLTAN_PART_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Part_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Part_Multi_Fn  ( ZOLTAN_PART_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Partition_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Partition_Fn        ( ZOLTAN_PART_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Partition_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Partition_Multi_Fn  ( ZOLTAN_PART_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Post_Migrate_PP_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Post_Migrate_PP_Fn ( ZOLTAN_POST_MIGRATE_PP_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Pre_Migrate_PP_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Pre_Migrate_PP_Fn  ( ZOLTAN_PRE_MIGRATE_PP_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Unpack_Obj_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Unpack_Obj_Fn      ( ZOLTAN_UNPACK_OBJ_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Set_Unpack_Obj_Multi_Fn	zoltan/include/zoltan_cpp.h	/^  int Set_Unpack_Obj_Multi_Fn( ZOLTAN_UNPACK_OBJ_MULTI_FN * fn_ptr,$/;"	f	class:Zoltan	typeref:typename:int
Single_Proc_Per_Part	zoltan/lb/lb_const.h	/^  int Single_Proc_Per_Part;       \/*  Flag indicating whether a part can$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Size	zoltan/lb/lb_const.h	/^  float Size;          \/*  Desired part size. *\/$/;"	m	struct:Zoltan_part_info	typeref:typename:float
Size	zoltan/rcb/shared.h	/^  int *Size;                     \/* Migration size, NULL means all are size 1 *\/$/;"	m	struct:Dot_Struct	typeref:typename:int *
SmallestDegreeLastOrdering	zoltan/coloring/coloring.c	/^static int SmallestDegreeLastOrdering($/;"	f	typeref:typename:int	file:
SpeedOpt	zoltan/matrix/zoltan_matrix.h	/^typedef enum {MATRIX_FULL_DD=0, MATRIX_FAST, MATRIX_NO_REDIST} SpeedOpt;$/;"	t	typeref:enum:__anonbcb9ea720203
Start	zoltan/include/zoltan_timer_cpp.h	/^  int Start(const int &ts_idx, const MPI_Comm &comm) {$/;"	f	class:Zoltan_Timer_Object	typeref:typename:int
Start_File	zoltan/Utilities/Timer/zoltan_timer.c	/^  char Start_File[MAXNAMELEN+1];  \/* Filename for most recent Start *\/$/;"	m	struct:TimeStruct	typeref:typename:char[]	file:
Start_Line	zoltan/Utilities/Timer/zoltan_timer.c	/^  int Start_Line;         \/* Line # in Start_File for most recent Start *\/$/;"	m	struct:TimeStruct	typeref:typename:int	file:
Start_Time	zoltan/Utilities/Timer/zoltan_timer.c	/^  double Start_Time;      \/* Most recent start time; $/;"	m	struct:TimeStruct	typeref:typename:double	file:
Stats	zoltan/include/zoltan_dd_cpp.h	/^  void Stats () const$/;"	f	class:Zoltan_DD	typeref:typename:void
Status	zoltan/Utilities/Timer/zoltan_timer.c	/^  int Status;             \/* Flag indicating status of TimeStruct:$/;"	m	struct:TimeStruct	typeref:typename:int	file:
Stop	zoltan/include/zoltan_timer_cpp.h	/^  int Stop(const int &ts_idx, const MPI_Comm &comm) {$/;"	f	class:Zoltan_Timer_Object	typeref:typename:int
Stop_File	zoltan/Utilities/Timer/zoltan_timer.c	/^  char Stop_File[MAXNAMELEN+1];   \/* Filename for most recent Stop *\/$/;"	m	struct:TimeStruct	typeref:typename:char[]	file:
Stop_Line	zoltan/Utilities/Timer/zoltan_timer.c	/^  int Stop_Line;          \/* Line # in Stop_File for most recent Stop *\/$/;"	m	struct:TimeStruct	typeref:typename:int	file:
Stop_Time	zoltan/Utilities/Timer/zoltan_timer.c	/^  double Stop_Time;       \/* Most recent end time;$/;"	m	struct:TimeStruct	typeref:typename:double	file:
T	zoltan/matlab/mmread.m	/^    T = [T; fscanf(mmfile,'%f')];$/;"	v
T	zoltan/matlab/mmread.m	/^    T = fscanf(mmfile,'%f',2);$/;"	v
T	zoltan/matlab/mmread.m	/^    T = fscanf(mmfile,'%f',4);$/;"	v
T	zoltan/matlab/mmread.m	/^    T = reshape(T,2,entries)';$/;"	v
T	zoltan/matlab/mmread.m	/^    T = reshape(T,3,entries)';$/;"	v
T	zoltan/matlab/mmread.m	/^    T = reshape(T,4,entries)';$/;"	v
TAG1	zoltan/order/perm.c	/^#define TAG1 /;"	d	file:
TAG1	zoltan/tpls/third_library_const.h	/^#define TAG1 /;"	d
TAG2	zoltan/order/perm.c	/^#define TAG2 /;"	d	file:
TAG2	zoltan/tpls/third_library_const.h	/^#define TAG2 /;"	d
TAG3	zoltan/tpls/third_library_const.h	/^#define TAG3 /;"	d
TAG4	zoltan/tpls/third_library_const.h	/^#define TAG4 /;"	d
TAG5	zoltan/tpls/third_library_const.h	/^#define TAG5 /;"	d
TAG6	zoltan/tpls/third_library_const.h	/^#define TAG6 /;"	d
TAG7	zoltan/tpls/third_library_const.h	/^#define TAG7 /;"	d
TAGS	zoltan/Makefile.in	/^TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\$/;"	t
TAGS	zoltan/driver/Makefile.in	/^TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\$/;"	t
TAGS	zoltan/fdriver/Makefile.in	/^TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\$/;"	t
TESTINDEX	zoltan/Utilities/Timer/zoltan_timer.c	/^#define TESTINDEX(/;"	d	file:
TESTTIMER	zoltan/Utilities/Timer/zoltan_timer.c	/^#define TESTTIMER(/;"	d	file:
TEST_DD_ERROR	zoltan/lb/lb_eval.c	/^#define TEST_DD_ERROR(/;"	d	file:
TET1	zoltan/driver/dr_elem_const.h	/^              S_HEX2, HEX2, TET1, TET2, WEDGE1, WEDGE2,$/;"	e	enum:__anon462eee3b0103
TET2	zoltan/driver/dr_elem_const.h	/^              S_HEX2, HEX2, TET1, TET2, WEDGE1, WEDGE2,$/;"	e	enum:__anon462eee3b0103
TIMER	zoltan/Makefile.am	/^TIMER = \\$/;"	m
TIMER	zoltan/Makefile.in	/^TIMER = \\$/;"	m
TIMER_H	zoltan/Makefile.am	/^TIMER_H = \\$/;"	m
TIMER_H	zoltan/Makefile.in	/^TIMER_H = \\$/;"	m
TINY	zoltan/par/par_average.c	/^#define TINY /;"	d	file:
TINY	zoltan/par/par_median.c	/^#define TINY /;"	d	file:
TINY	zoltan/par/par_median_randomized.c	/^#define TINY /;"	d	file:
TINY	zoltan/rcb/shared.h	/^#define TINY /;"	d
TPLS	zoltan/Makefile.am	/^TPLS = \\$/;"	m
TPLS	zoltan/Makefile.in	/^TPLS = \\$/;"	m
TPLS_H	zoltan/Makefile.am	/^TPLS_H = \\$/;"	m
TPLS_H	zoltan/Makefile.in	/^TPLS_H = \\$/;"	m
TPL_FLOAT_WEIGHT	zoltan/tpls/third_library_const.h	/^  #define TPL_FLOAT_WEIGHT$/;"	d
TPL_IDX_SPEC	zoltan/tpls/third_library_const.h	/^    #define TPL_IDX_SPEC /;"	d
TPL_IDX_SPEC	zoltan/tpls/third_library_const.h	/^  #define TPL_IDX_SPEC /;"	d
TPL_INTEGRAL_WEIGHT	zoltan/tpls/third_library_const.h	/^    #define TPL_INTEGRAL_WEIGHT$/;"	d
TPL_METIS_DATATYPES	zoltan/tpls/third_library_const.h	/^#define TPL_METIS_DATATYPES /;"	d
TPL_Order	zoltan/zz/zz_const.h	/^  struct Zoltan_TPL_Order_Struct  TPL_Order;   \/* Struct with info for ordering       *\/$/;"	m	struct:Zoltan_Struct	typeref:struct:Zoltan_TPL_Order_Struct
TPL_SCOTCH_DATATYPES	zoltan/tpls/third_library_const.h	/^#define TPL_SCOTCH_DATATYPES /;"	d
TPL_USE_DATATYPE	zoltan/tpls/third_library_const.h	/^  #define TPL_USE_DATATYPE /;"	d
TPL_WGT_SPEC	zoltan/tpls/third_library_const.h	/^    #define TPL_WGT_SPEC /;"	d
TPL_WGT_SPEC	zoltan/tpls/third_library_const.h	/^  #define TPL_WGT_SPEC /;"	d
TPL_ZOLTAN_DATATYPES	zoltan/tpls/third_library_const.h	/^#define TPL_ZOLTAN_DATATYPES /;"	d
TRACE_SIZE	zoltan/zz/zz_back_trace.c	/^#define TRACE_SIZE /;"	d	file:
TRACE_STRING_LENGTH	zoltan/zz/zz_back_trace.c	/^#define TRACE_STRING_LENGTH /;"	d	file:
TRI1	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
TRI2	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
TRUE	zoltan/Utilities/Communication/comm.h	/^#define TRUE /;"	d
TRUE	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define TRUE /;"	d
TRUE	zoltan/ch/ch_input_const.h	/^#define TRUE /;"	d
TRUE	zoltan/zz/zz_const.h	/^#define TRUE /;"	d
TRY_FAST	zoltan/tpls/third_library_const.h	/^#define TRY_FAST /;"	d
TSHELL1	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
TSHELL2	zoltan/driver/dr_elem_const.h	/^              SHELL1, SHELL2, TRI1, TRI2, TSHELL1, TSHELL2, HEX1,$/;"	e	enum:__anon462eee3b0103
TSUM_THRESHOLD	zoltan/phg/phg_match.c	/^#define TSUM_THRESHOLD /;"	d	file:
Target_Dim	zoltan/zz/zz_const.h	/^  int Target_Dim; \/* Number of dimensions in transformed geometry:$/;"	m	struct:Zoltan_Transform_Struct	typeref:typename:int
Test	zoltan/driver/dr_main.c	/^struct Test_Flags Test;$/;"	v	typeref:struct:Test_Flags
Test	zoltan/driver/dr_mainCPP.cpp	/^struct Test_Flags Test;$/;"	v	typeref:struct:Test_Flags
Test_Drops	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Test_Drops /;"	v	module:dr_const
Test_Flags	zoltan/driver/dr_const.h	/^struct Test_Flags {$/;"	s
Test_Gen_Files	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Test_Gen_Files /;"	v	module:dr_const
Test_Graph_Callbacks	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Test_Graph_Callbacks /;"	v	module:dr_const
Test_Hypergraph_Callbacks	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Test_Hypergraph_Callbacks /;"	v	module:dr_const
Test_Local_Partitions	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Test_Local_Partitions /;"	v	module:dr_const
Test_Multi_Callbacks	zoltan/fdriver/fdr_const.f90	/^integer(Zoltan_INT) :: Test_Multi_Callbacks /;"	v	module:dr_const
Text	zoltan/driver/dr_const.h	/^  int Text;$/;"	m	struct:Output_Flags	typeref:typename:int
Tflops_Special	zoltan/par/par_median_randomized.c	/^  int Tflops_Special;$/;"	m	struct:_commStruct	typeref:typename:int	file:
Tflops_Special	zoltan/zz/zz_const.h	/^  int Tflops_Special;             \/*  Flag to indicate if we should use some$/;"	m	struct:Zoltan_Struct	typeref:typename:int
TimeStruct	zoltan/Utilities/Timer/zoltan_timer.c	/^typedef struct TimeStruct {$/;"	s	file:
Timer	zoltan/zz/zz_const.h	/^  int Timer;                      \/*  Timer type that is currently active *\/$/;"	m	struct:Zoltan_Struct	typeref:typename:int
Timer_Callback_Time	zoltan/driver/dr_loadbal.c	/^double Timer_Callback_Time, Timer_Global_Callback_Time;$/;"	v	typeref:typename:double
Timer_Callback_Time	zoltan/driver/dr_loadbalCPP.cpp	/^double Timer_Callback_Time, Timer_Global_Callback_Time;$/;"	v	typeref:typename:double
Timer_Flag	zoltan/Utilities/Timer/zoltan_timer.c	/^  int Timer_Flag;         \/* Zoltan Timer_Flag flag passed to Zoltan_Time *\/$/;"	m	struct:Zoltan_Timer	typeref:typename:int	file:
Timer_Global_Callback_Time	zoltan/driver/dr_loadbal.c	/^double Timer_Callback_Time, Timer_Global_Callback_Time;$/;"	v	typeref:typename:double
Timer_Global_Callback_Time	zoltan/driver/dr_loadbalCPP.cpp	/^double Timer_Callback_Time, Timer_Global_Callback_Time;$/;"	v	typeref:typename:double
Times	zoltan/Utilities/Timer/zoltan_timer.c	/^  ZTIMER_TS *Times;       \/* Array of actual timing data -- individual timers *\/$/;"	m	struct:Zoltan_Timer	typeref:typename:ZTIMER_TS *	file:
Total_Partition_Time	zoltan/driver/dr_main.c	/^double Total_Partition_Time = 0.0;  \/* Total over Number_Iterations *\/$/;"	v	typeref:typename:double
Total_Partition_Time	zoltan/driver/dr_mainCPP.cpp	/^double Total_Partition_Time = 0.0;  \/* Total over Number_Iterations *\/$/;"	v	typeref:typename:double
Tran	zoltan/rcb/rcb.h	/^  ZZ_Transform Tran;        \/* transformation for degenerate geometry *\/$/;"	m	struct:RCB_Struct	typeref:typename:ZZ_Transform
Tran	zoltan/rcb/rib.h	/^    ZZ_Transform       Tran;     \/* transformation for degenerate geometry *\/$/;"	m	struct:RIB_Struct	typeref:typename:ZZ_Transform
Transformation	zoltan/zz/zz_const.h	/^  double Transformation[3][3]; \/* transforms degenerate geometry to 2D or 1D *\/$/;"	m	struct:Zoltan_Transform_Struct	typeref:typename:double[3][3]
Transformed_Box_Assign	zoltan/rcb/box_assign.c	/^static void Transformed_Box_Assign($/;"	f	typeref:typename:void	file:
Tree_Ptr	zoltan/rcb/rcb.h	/^  struct rcb_tree *Tree_Ptr;$/;"	m	struct:RCB_Struct	typeref:struct:rcb_tree *
Tree_Ptr	zoltan/rcb/rib.h	/^    struct rib_tree   *Tree_Ptr;$/;"	m	struct:RIB_Struct	typeref:struct:rib_tree *
Triplet	zoltan/phg/phg_match.c	/^} Triplet;$/;"	t	typeref:struct:triplet	file:
UNDEFINED_INFO	zoltan/driver/dr_input_const.h	/^typedef struct ParameterList UNDEFINED_INFO;$/;"	t	typeref:struct:ParameterList
UNDEFINED_INFO_PTR	zoltan/driver/dr_input_const.h	/^typedef struct ParameterList *UNDEFINED_INFO_PTR;$/;"	t	typeref:struct:ParameterList *
UNDEFINED_LENGTH_MAX	zoltan/driver/dr_input_const.h	/^#define UNDEFINED_LENGTH_MAX /;"	d
UNDEFINED_LIST_MAX	zoltan/driver/dr_input_const.h	/^#define UNDEFINED_LIST_MAX /;"	d
UNSIGNED_INT_GLOBAL_IDS	zoltan/include/zoltan_types.h	/^#define UNSIGNED_INT_GLOBAL_IDS$/;"	d
UNSIGNED_LONG_GLOBAL_IDS	zoltan/include/zoltan_types.h	/^#define UNSIGNED_LONG_GLOBAL_IDS$/;"	d
UNSYMMETRIC	zoltan/tpls/third_library_const.h	/^#define UNSYMMETRIC /;"	d
USE_SERIAL_REFINEMENT_ON_ONE_PROC	zoltan/phg/phg_refinement.c	/^#define USE_SERIAL_REFINEMENT_ON_ONE_PROC$/;"	d	file:
UTILITIES	zoltan/Makefile.am	/^UTILITIES = \\$/;"	m
UTILITIES	zoltan/Makefile.in	/^UTILITIES = \\$/;"	m
UTILITIES_H	zoltan/Makefile.am	/^UTILITIES_H = \\$/;"	m
UTILITIES_H	zoltan/Makefile.in	/^UTILITIES_H = \\$/;"	m
UTIL_NAME	zoltan/zz/zz_const.h	/^#define UTIL_NAME /;"	d
Uniform_Parts	zoltan/lb/lb_const.h	/^  int Uniform_Parts;              \/*  Flag indicating whether parts are$/;"	m	struct:Zoltan_LB_Struct	typeref:typename:int
Unpack_Obj	zoltan/zz/zz_const.h	/^  ZOLTAN_UNPACK_OBJ_FN *Unpack_Obj;    \/* Routine that unpacks object data for$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_UNPACK_OBJ_FN *
Unpack_Obj_Data	zoltan/zz/zz_const.h	/^  void *Unpack_Obj_Data;               \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Unpack_Obj_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_UNPACK_OBJ_FORT_FN *Unpack_Obj_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_UNPACK_OBJ_FORT_FN *
Unpack_Obj_Multi	zoltan/zz/zz_const.h	/^  ZOLTAN_UNPACK_OBJ_MULTI_FN *Unpack_Obj_Multi;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_UNPACK_OBJ_MULTI_FN *
Unpack_Obj_Multi_Data	zoltan/zz/zz_const.h	/^  void *Unpack_Obj_Multi_Data;         \/* Ptr to user defined data to be$/;"	m	struct:Zoltan_Struct	typeref:typename:void *
Unpack_Obj_Multi_Fort	zoltan/zz/zz_const.h	/^  ZOLTAN_UNPACK_OBJ_MULTI_FORT_FN *Unpack_Obj_Multi_Fort;$/;"	m	struct:Zoltan_Struct	typeref:typename:ZOLTAN_UNPACK_OBJ_MULTI_FORT_FN *
Update	zoltan/include/zoltan_dd_cpp.h	/^  int Update (ZOLTAN_ID_PTR gid, ZOLTAN_ID_PTR lid, $/;"	f	class:Zoltan_DD	typeref:typename:int
UseFixedVtx	zoltan/phg/phg.h	/^  int UseFixedVtx;               \/* Flag indicating whether any vertices of$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
UsePrefPart	zoltan/phg/phg.h	/^  int UsePrefPart;               \/* Flag indicating that the coarsening$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
Use_Barrier	zoltan/Utilities/Timer/zoltan_timer.c	/^  int Use_Barrier;        \/* Flag indicating whether to perform a barrier$/;"	m	struct:TimeStruct	typeref:typename:int	file:
Use_Edge_Wgts	zoltan/driver/dr_migrate.c	/^static int Use_Edge_Wgts = 0;         \/* Flag indicating whether elements$/;"	v	typeref:typename:int	file:
Use_Edge_Wgts	zoltan/driver/dr_migrateCPP.cpp	/^static int Use_Edge_Wgts = 0;         \/* Flag indicating whether elements$/;"	v	typeref:typename:int	file:
Use_Edge_Wgts	zoltan/fdriver/fdr_migrate.f90	/^logical, save :: Use_Edge_Wgts /;"	v	module:dr_migrate
VCycle	zoltan/phg/phg_Vcycle.c	/^} VCycle; $/;"	t	typeref:struct:tagVCycle	file:
VERSION	zoltan/Makefile.in	/^VERSION = @VERSION@$/;"	m
VERSION	zoltan/driver/Makefile.in	/^VERSION = @VERSION@$/;"	m
VERSION	zoltan/fdriver/Makefile.in	/^VERSION = @VERSION@$/;"	m
VER_STR	zoltan/driver/dr_const.h	/^#define VER_STR /;"	d
VER_STR	zoltan/fdriver/fdr_const.f90	/^character(len=3), parameter :: VER_STR /;"	v	module:dr_const
VPATH	zoltan/Makefile.in	/^VPATH = @srcdir@$/;"	m
VPATH	zoltan/driver/Makefile.in	/^VPATH = @srcdir@$/;"	m
VPATH	zoltan/fdriver/Makefile.in	/^VPATH = @srcdir@$/;"	m
VTX_GNO_TO_LNO	zoltan/phg/phg_hypergraph.h	/^#define VTX_GNO_TO_LNO(/;"	d
VTX_LNO_TO_GNO	zoltan/phg/phg_hypergraph.h	/^#define VTX_LNO_TO_GNO(/;"	d
VTX_TO_PROC_X	zoltan/phg/phg_hypergraph.h	/^#define VTX_TO_PROC_X(/;"	d
Val	zoltan/driver/dr_const.h	/^  char Val[128];      \/* parameter value *\/$/;"	m	struct:Parameter_Description	typeref:typename:char[128]
Vreal	zoltan/matlab/mmwrite.m	/^    Vreal = 0; $/;"	v
Vreal	zoltan/matlab/mmwrite.m	/^    Vreal = 1; $/;"	v
VtxPlan	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_COMM_OBJ *VtxPlan; \/* Communication plan mapping GIDs to GNOs $/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_COMM_OBJ *
VtxWeightDim	zoltan/phg/phg_hypergraph.h	/^  int VtxWeightDim;     \/* number of weight dimensions for a vertex *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
Vtx_Inc	zoltan/driver/dr_const.h	/^  int Vtx_Inc;              \/* Increment #vertices for each iteration. *\/$/;"	m	struct:Test_Flags	typeref:typename:int
Vtxdist	zoltan/ch/ch_init_dist.c	/^static ZOLTAN_GNO_TYPE *Vtxdist;   \/* Array of size Num_Proc+1 indicating range of$/;"	v	typeref:typename:ZOLTAN_GNO_TYPE *	file:
WEDGE1	zoltan/driver/dr_elem_const.h	/^              S_HEX2, HEX2, TET1, TET2, WEDGE1, WEDGE2,$/;"	e	enum:__anon462eee3b0103
WEDGE2	zoltan/driver/dr_elem_const.h	/^              S_HEX2, HEX2, TET1, TET2, WEDGE1, WEDGE2,$/;"	e	enum:__anon462eee3b0103
Weight	zoltan/rcb/shared.h	/^  double *Weight;                \/* Weight-tuples of dots, in dot-major order *\/$/;"	m	struct:Dot_Struct	typeref:typename:double *
WgtFctPtr	zoltan/matrix/matrix_operations.c	/^typedef int(*WgtFctPtr)(float*, float*, int);$/;"	t	typeref:typename:int (*)(float *,float *,int)	file:
WgtOp	zoltan/matrix/zoltan_matrix.h	/^typedef enum {ADD_WEIGHT=0, MAX_WEIGHT, CMP_WEIGHT} WgtOp;$/;"	t	typeref:enum:__anonbcb9ea720103
X	zoltan/rcb/shared.h	/^  double  *X, *Y, *Z;$/;"	m	struct:Dot_Struct	typeref:typename:double *
XFORBIDTAG	zoltan/coloring/coloring.c	/^#define XFORBIDTAG /;"	d	file:
Y	zoltan/rcb/shared.h	/^  double  *X, *Y, *Z;$/;"	m	struct:Dot_Struct	typeref:typename:double **
Z	zoltan/rcb/shared.h	/^  double  *X, *Y, *Z;$/;"	m	struct:Dot_Struct	typeref:typename:double ***
ZCPPDRIVE_SOURCES	zoltan/driver/CMakeLists.txt	/^SET(ZCPPDRIVE_SOURCES$/;"	v
ZDRIVE_SOURCES	zoltan/driver/CMakeLists.txt	/^SET(ZDRIVE_SOURCES$/;"	v
ZFDRIVE_SOURCES	zoltan/fdriver/CMakeLists.txt	/^  SET(ZFDRIVE_SOURCES$/;"	v
ZG	zoltan/graph/graph.h	/^} ZG;$/;"	t	typeref:struct:ZG_
ZG_	zoltan/graph/graph.h	/^typedef struct ZG_ {$/;"	s
ZG_params	zoltan/graph/graph_params.h	/^static PARAM_VARS ZG_params[] = {$/;"	v	typeref:typename:PARAM_VARS[]
ZHG	zoltan/phg/phg_hypergraph.h	/^typedef struct Zoltan_HGraph ZHG;$/;"	t	typeref:struct:Zoltan_HGraph
ZOD	zoltan/fdriver/makefile	/^ZOD = ..\/$(ZOLTAN_OBJ_DIR)$/;"	m
ZOD	zoltan/fort/makefile	/^ZOD = ..\/$(ZOLTAN_OBJ_DIR)$/;"	m
ZOLTAN_ALIGN_VAL	zoltan/include/zoltan_align.h	/^#define ZOLTAN_ALIGN_VAL /;"	d
ZOLTAN_AUTO_MIGRATE_DEF	zoltan/lb/lb_const.h	/^#define ZOLTAN_AUTO_MIGRATE_DEF /;"	d
ZOLTAN_BALANCE_EVAL	zoltan/include/zoltan_eval.h	/^typedef struct _eval_balance_struct ZOLTAN_BALANCE_EVAL;$/;"	t	typeref:struct:_eval_balance_struct
ZOLTAN_BORDER_OBJ_LIST_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_BORDER_OBJ_LIST_FN_TYPE /;"	v	module:zoltan
ZOLTAN_BORDER_OBJ_LIST_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_BORDER_OBJ_LIST_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_CALLOC	zoltan/include/zoltan_mem.h	/^#define ZOLTAN_CALLOC(/;"	d
ZOLTAN_CCOLAMD	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_CCOLAMD$/;"	d
ZOLTAN_CHILD_LIST_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_CHILD_LIST_FN_TYPE /;"	v	module:zoltan
ZOLTAN_CHILD_LIST_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_CHILD_LIST_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_CHILD_WEIGHT_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_CHILD_WEIGHT_FN_TYPE /;"	v	module:zoltan
ZOLTAN_CHILD_WEIGHT_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_CHILD_WEIGHT_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_COARSE_OBJ_LIST_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_COARSE_OBJ_LIST_FN_TYPE /;"	v	module:zoltan
ZOLTAN_COARSE_OBJ_LIST_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_COARSE_OBJ_LIST_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_COLOR_ERROR	zoltan/coloring/coloring.h	/^#define ZOLTAN_COLOR_ERROR(/;"	d
ZOLTAN_COMM_CPP_H_	zoltan/include/zoltan_comm_cpp.h	/^#define ZOLTAN_COMM_CPP_H_$/;"	d
ZOLTAN_COMM_ERROR	zoltan/Utilities/Communication/comm.h	/^#define ZOLTAN_COMM_ERROR(/;"	d
ZOLTAN_COMM_OBJ	zoltan/include/zoltan_comm.h	/^typedef struct Zoltan_Comm_Obj ZOLTAN_COMM_OBJ;$/;"	t	typeref:struct:Zoltan_Comm_Obj
ZOLTAN_COMM_WARNING	zoltan/Utilities/Communication/comm.h	/^#define ZOLTAN_COMM_WARNING(/;"	d
ZOLTAN_COMPRESS	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_COMPRESS$/;"	d
ZOLTAN_COMPRESSED_EDGE	zoltan/fort/fwrap.f90	/^   ZOLTAN_COMPRESSED_EDGE /;"	v	module:zoltan
ZOLTAN_COMPRESSED_EDGE	zoltan/include/zoltan_types.h	/^#define ZOLTAN_COMPRESSED_EDGE /;"	d
ZOLTAN_COMPRESSED_VERTEX	zoltan/fort/fwrap.f90	/^   ZOLTAN_COMPRESSED_VERTEX /;"	v	module:zoltan
ZOLTAN_COMPRESSED_VERTEX	zoltan/include/zoltan_types.h	/^#define ZOLTAN_COMPRESSED_VERTEX /;"	d
ZOLTAN_COPY_GID_ARRAY	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_COPY_GID_ARRAY(/;"	d
ZOLTAN_COPY_LID_ARRAY	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_COPY_LID_ARRAY(/;"	d
ZOLTAN_CPP_H_	zoltan/include/zoltan_cpp.h	/^#define ZOLTAN_CPP_H_$/;"	d
ZOLTAN_CPP_TEST_DRIVER	zoltan/driver/Makefile.am	/^  ZOLTAN_CPP_TEST_DRIVER = zCPPdrive $/;"	m
ZOLTAN_DD_CPP_H_	zoltan/include/zoltan_dd_cpp.h	/^#define ZOLTAN_DD_CPP_H_$/;"	d
ZOLTAN_DD_DDIRECTORY_H	zoltan/include/zoltan_dd.h	/^#define ZOLTAN_DD_DDIRECTORY_H$/;"	d
ZOLTAN_DD_FIND_MSG_TAG	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define ZOLTAN_DD_FIND_MSG_TAG /;"	d
ZOLTAN_DD_H	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define ZOLTAN_DD_H$/;"	d
ZOLTAN_DD_HASH_CONSTANT	zoltan/Utilities/DDirectory/DD_Hash2.c	/^#define ZOLTAN_DD_HASH_CONSTANT /;"	d	file:
ZOLTAN_DD_HASH_TABLE_COUNT	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define ZOLTAN_DD_HASH_TABLE_COUNT /;"	d
ZOLTAN_DD_MEMORY_H_	zoltan/Utilities/DDirectory/DD_Memory.h	/^#define ZOLTAN_DD_MEMORY_H_$/;"	d
ZOLTAN_DD_NO_PROC	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define ZOLTAN_DD_NO_PROC /;"	d
ZOLTAN_DD_REMOVE_MSG_TAG	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define ZOLTAN_DD_REMOVE_MSG_TAG /;"	d
ZOLTAN_DD_UPDATE_MSG_TAG	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^#define ZOLTAN_DD_UPDATE_MSG_TAG /;"	d
ZOLTAN_DEBUG_ALL	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_ALL /;"	d
ZOLTAN_DEBUG_ATIME	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_ATIME /;"	d
ZOLTAN_DEBUG_LEVEL_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_LEVEL_DEF /;"	d
ZOLTAN_DEBUG_LIST	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_LIST /;"	d
ZOLTAN_DEBUG_NONE	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_NONE /;"	d
ZOLTAN_DEBUG_PARAMS	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_PARAMS /;"	d
ZOLTAN_DEBUG_PROC_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_PROC_DEF /;"	d
ZOLTAN_DEBUG_TRACE_ALL	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_TRACE_ALL /;"	d
ZOLTAN_DEBUG_TRACE_DETAIL	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_TRACE_DETAIL /;"	d
ZOLTAN_DEBUG_TRACE_SINGLE	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_TRACE_SINGLE /;"	d
ZOLTAN_DEBUG_ZTIME	zoltan/zz/zz_const.h	/^#define ZOLTAN_DEBUG_ZTIME /;"	d
ZOLTAN_DETERMINISTIC_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_DETERMINISTIC_DEF /;"	d
ZOLTAN_DIST_PART	zoltan/matrix/matrix_distribute.c	/^} ZOLTAN_DIST_PART;$/;"	t	typeref:struct:ZOLTAN_DIST_PART_	file:
ZOLTAN_DIST_PART_	zoltan/matrix/matrix_distribute.c	/^typedef struct ZOLTAN_DIST_PART_ {$/;"	s	file:
ZOLTAN_EDGE_LIST_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_EDGE_LIST_FN_TYPE /;"	v	module:zoltan
ZOLTAN_EDGE_LIST_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_EDGE_LIST_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_EDGE_LIST_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_EDGE_LIST_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_EDGE_LIST_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_EDGE_LIST_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_EDGE_WEIGHT_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_EDGE_WEIGHT_DEF /;"	d
ZOLTAN_ENTRY	zoltan/zz/zz_util_const.h	/^typedef struct Zoltan_Map_Entry ZOLTAN_ENTRY;$/;"	t	typeref:struct:Zoltan_Map_Entry
ZOLTAN_EQ_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_EQ_GID(/;"	d
ZOLTAN_EQ_ID	zoltan/Utilities/shared/zoltan_id.c	/^int ZOLTAN_EQ_ID(int n, ZOLTAN_ID_PTR a, ZOLTAN_ID_PTR b)$/;"	f	typeref:typename:int
ZOLTAN_FATAL	zoltan/fort/fwrap.f90	/^   ZOLTAN_FATAL /;"	v	module:zoltan
ZOLTAN_FATAL	zoltan/include/zoltan_types.h	/^#define ZOLTAN_FATAL /;"	d
ZOLTAN_FILE	zoltan/driver/dr_compress_const.h	/^  typedef FILE ZOLTAN_FILE;$/;"	t	typeref:typename:FILE
ZOLTAN_FILE	zoltan/driver/dr_compress_const.h	/^} ZOLTAN_FILE;$/;"	t	typeref:struct:ZOLTAN_FILE_
ZOLTAN_FILETYPE	zoltan/driver/dr_compress_const.h	/^} ZOLTAN_FILETYPE;$/;"	t	typeref:enum:ZOLTAN_FILETYPE_
ZOLTAN_FILETYPE_	zoltan/driver/dr_compress_const.h	/^typedef enum ZOLTAN_FILETYPE_ {$/;"	g
ZOLTAN_FILE_	zoltan/driver/dr_compress_const.h	/^typedef struct ZOLTAN_FILE_ {$/;"	s
ZOLTAN_FILE_close	zoltan/driver/dr_compress.c	/^int ZOLTAN_FILE_close(ZOLTAN_FILE* file)$/;"	f	typeref:typename:int
ZOLTAN_FILE_close	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_close(/;"	d
ZOLTAN_FILE_flush	zoltan/driver/dr_compress.c	/^int ZOLTAN_FILE_flush(ZOLTAN_FILE* file)$/;"	f	typeref:typename:int
ZOLTAN_FILE_flush	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_flush(/;"	d
ZOLTAN_FILE_getc	zoltan/driver/dr_compress.c	/^int ZOLTAN_FILE_getc(ZOLTAN_FILE* file)$/;"	f	typeref:typename:int
ZOLTAN_FILE_getc	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_getc(/;"	d
ZOLTAN_FILE_gets	zoltan/driver/dr_compress.c	/^char* ZOLTAN_FILE_gets(char * buf, int len, ZOLTAN_FILE* file)$/;"	f	typeref:typename:char *
ZOLTAN_FILE_gets	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_gets(/;"	d
ZOLTAN_FILE_open	zoltan/driver/dr_compress.c	/^ZOLTAN_FILE* ZOLTAN_FILE_open(const char *path, const char *mode, const ZOLTAN_FILETYPE type)$/;"	f	typeref:typename:ZOLTAN_FILE *
ZOLTAN_FILE_open	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_open(/;"	d
ZOLTAN_FILE_printf	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_printf /;"	d
ZOLTAN_FILE_putc	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_putc(/;"	d
ZOLTAN_FILE_puts	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_puts(/;"	d
ZOLTAN_FILE_read	zoltan/driver/dr_compress.c	/^ssize_t ZOLTAN_FILE_read(char* ptr, size_t size, size_t nitems, ZOLTAN_FILE *file)$/;"	f	typeref:typename:ssize_t
ZOLTAN_FILE_read	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_read(/;"	d
ZOLTAN_FILE_rewind	zoltan/driver/dr_compress.c	/^void ZOLTAN_FILE_rewind(ZOLTAN_FILE* file)$/;"	f	typeref:typename:void
ZOLTAN_FILE_rewind	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_rewind(/;"	d
ZOLTAN_FILE_scanf	zoltan/driver/dr_compress.c	/^int ZOLTAN_FILE_scanf (ZOLTAN_FILE*  stream, const char *  format, ... )$/;"	f	typeref:typename:int
ZOLTAN_FILE_scanf	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_scanf /;"	d
ZOLTAN_FILE_ungetc	zoltan/driver/dr_compress.c	/^int ZOLTAN_FILE_ungetc(int c, ZOLTAN_FILE* file)$/;"	f	typeref:typename:int
ZOLTAN_FILE_ungetc	zoltan/driver/dr_compress_const.h	/^#define ZOLTAN_FILE_ungetc(/;"	d
ZOLTAN_FIRST_BORDER_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_FIRST_BORDER_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_FIRST_BORDER_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_FIRST_BORDER_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_FIRST_COARSE_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_FIRST_COARSE_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_FIRST_COARSE_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_FIRST_COARSE_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_FIRST_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_FIRST_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_FIRST_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_FIRST_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_FIXED_OBJ_LIST_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_FIXED_OBJ_LIST_FN_TYPE /;"	v	module:zoltan
ZOLTAN_FIXED_OBJ_LIST_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_FIXED_OBJ_LIST_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_FN_TYPE	zoltan/include/zoltan.h	/^typedef enum Zoltan_Fn_Type ZOLTAN_FN_TYPE;$/;"	t	typeref:enum:Zoltan_Fn_Type
ZOLTAN_FN_TYPEF	zoltan/fort/fwrap.f90	/^type ZOLTAN_FN_TYPEF$/;"	t	module:zoltan
ZOLTAN_FN_TYPES	zoltan/fort/fwrap.f90	/^type ZOLTAN_FN_TYPES$/;"	t	module:zoltan
ZOLTAN_FREE	zoltan/include/zoltan_mem.h	/^#define ZOLTAN_FREE(/;"	d
ZOLTAN_GEOM_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_GEOM_FN_TYPE /;"	v	module:zoltan
ZOLTAN_GEOM_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_GEOM_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_GEOM_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_GEOM_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_GEOM_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_GEOM_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_GLOBAL	zoltan/zz/zz_const.h	/^#define ZOLTAN_GLOBAL /;"	d
ZOLTAN_GNO_SPEC	zoltan/include/zoltan_types.h	/^#    define ZOLTAN_GNO_SPEC /;"	d
ZOLTAN_GNO_SPEC	zoltan/include/zoltan_types.h	/^#  define ZOLTAN_GNO_SPEC /;"	d
ZOLTAN_GNO_TYPE	zoltan/include/zoltan_types.h	/^#define ZOLTAN_GNO_TYPE /;"	d
ZOLTAN_GNO_TYPE	zoltan/matrix/zoltan_matrix.h	/^typedef int distFnct(ZOLTAN_GNO_TYPE, ZOLTAN_GNO_TYPE, void *, int*);$/;"	t	typeref:typename:int distFnct (ZOLTAN_GNO_TYPE,,void *,int *)
ZOLTAN_GRAPH	zoltan/driver/dr_const.h	/^  ZOLTAN_GRAPH,$/;"	e	enum:DATA_TYPE
ZOLTAN_GRAPH_EVAL	zoltan/include/zoltan_eval.h	/^typedef struct _eval_graph_struct ZOLTAN_GRAPH_EVAL;$/;"	t	typeref:struct:_eval_graph_struct
ZOLTAN_GT_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_GT_GID(/;"	d
ZOLTAN_GT_ID	zoltan/Utilities/shared/zoltan_id.c	/^int ZOLTAN_GT_ID(int n, ZOLTAN_ID_PTR a, ZOLTAN_ID_PTR b)$/;"	f	typeref:typename:int
ZOLTAN_GZIP	zoltan/driver/dr_const.h	/^#define ZOLTAN_GZIP$/;"	d
ZOLTAN_H	zoltan/Makefile.am	/^ZOLTAN_H = \\$/;"	m
ZOLTAN_H	zoltan/Makefile.in	/^ZOLTAN_H = \\$/;"	m
ZOLTAN_HASH_FN	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^                                ZOLTAN_HASH_FN *);$/;"	t	typeref:typename:unsigned int DD_Hash_fn (ZOLTAN_ID_PTR,int,unsigned int,void *,*)
ZOLTAN_HEAP_H	zoltan/zz/zz_heap.h	/^#define ZOLTAN_HEAP_H$/;"	d
ZOLTAN_HEAP_INFO	zoltan/zz/zz_const.h	/^#define ZOLTAN_HEAP_INFO(/;"	d
ZOLTAN_HEX3D_OCT	zoltan/fort/fwrap.f90	/^  ZOLTAN_HEX3D_OCT /;"	v	module:zoltan
ZOLTAN_HEX3D_OCT	zoltan/include/zoltan.h	/^  ZOLTAN_HEX3D_OCT       \/* octasection of hexahedra *\/$/;"	e	enum:Zoltan_Ref_Type
ZOLTAN_HG_CS_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HG_CS_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HG_CS_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HG_CS_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HG_EDGE_WEIGHTS_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_HG_EDGE_WEIGHTS_FN /;"	d
ZOLTAN_HG_EDGE_WEIGHTS_FN_TYPE	zoltan/include/zoltan.h	/^#define ZOLTAN_HG_EDGE_WEIGHTS_FN_TYPE /;"	d
ZOLTAN_HG_EDGE_WTS_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HG_EDGE_WTS_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HG_EDGE_WTS_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HG_EDGE_WTS_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HG_EVAL	zoltan/include/zoltan_eval.h	/^typedef struct _eval_hg_struct ZOLTAN_HG_EVAL;$/;"	t	typeref:struct:_eval_hg_struct
ZOLTAN_HG_SIZE_CS_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HG_SIZE_CS_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HG_SIZE_CS_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HG_SIZE_CS_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HG_SIZE_EDGE_WEIGHTS_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_HG_SIZE_EDGE_WEIGHTS_FN /;"	d
ZOLTAN_HG_SIZE_EDGE_WEIGHTS_FN_TYPE	zoltan/include/zoltan.h	/^#define ZOLTAN_HG_SIZE_EDGE_WEIGHTS_FN_TYPE /;"	d
ZOLTAN_HG_SIZE_EDGE_WTS_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HG_SIZE_EDGE_WTS_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HG_SIZE_EDGE_WTS_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HG_SIZE_EDGE_WTS_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HIER	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_HIER$/;"	d
ZOLTAN_HIER_ERROR	zoltan/hier/hier.h	/^#define ZOLTAN_HIER_ERROR(/;"	d
ZOLTAN_HIER_LAST_PLATFORM	zoltan/hier/hier.c	/^      ZOLTAN_HIER_LAST_PLATFORM$/;"	e	enum:zoltan_platform_names	file:
ZOLTAN_HIER_METHOD_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HIER_METHOD_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HIER_METHOD_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HIER_METHOD_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HIER_NUM_LEVELS_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HIER_NUM_LEVELS_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HIER_NUM_LEVELS_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HIER_NUM_LEVELS_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HIER_PARTITION_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_HIER_PARTITION_FN /;"	d
ZOLTAN_HIER_PARTITION_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HIER_PARTITION_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HIER_PARTITION_FN_TYPE	zoltan/include/zoltan.h	/^#define ZOLTAN_HIER_PARTITION_FN_TYPE /;"	d
ZOLTAN_HIER_PARTITION_FORT_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_HIER_PARTITION_FORT_FN /;"	d
ZOLTAN_HIER_PART_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_HIER_PART_FN_TYPE /;"	v	module:zoltan
ZOLTAN_HIER_PART_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_HIER_PART_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_HSFC_CONST_H	zoltan/hsfc/hsfc_const.h	/^#define ZOLTAN_HSFC_CONST_H$/;"	d
ZOLTAN_HSFC_ERROR	zoltan/hsfc/hsfc.h	/^#define ZOLTAN_HSFC_ERROR(/;"	d
ZOLTAN_HSFC_H	zoltan/hsfc/hsfc.h	/^#define ZOLTAN_HSFC_H$/;"	d
ZOLTAN_HUND	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_HUND$/;"	d
ZOLTAN_ID_CONSTANT	zoltan/include/zoltan_types.h	/^#define ZOLTAN_ID_CONSTANT(/;"	d
ZOLTAN_ID_DEFAULT	zoltan/Utilities/shared/zoltan_id.h	/^#define ZOLTAN_ID_DEFAULT /;"	d
ZOLTAN_ID_INVALID	zoltan/include/zoltan_types.h	/^#define ZOLTAN_ID_INVALID /;"	d
ZOLTAN_ID_MPI_TYPE	zoltan/include/zoltan_types.h	/^#define ZOLTAN_ID_MPI_TYPE /;"	d
ZOLTAN_ID_PTR	zoltan/include/zoltan_dd.h	/^typedef unsigned int ZOLTAN_HASH_FN(ZOLTAN_ID_PTR, int, unsigned int);$/;"	t	typeref:typename:unsigned int ZOLTAN_HASH_FN (,int,unsigned int)
ZOLTAN_ID_PTR	zoltan/include/zoltan_types.h	/^typedef ZOLTAN_ID_TYPE     *ZOLTAN_ID_PTR;$/;"	t	typeref:typename:ZOLTAN_ID_TYPE *
ZOLTAN_ID_PTR	zoltan/lb/lb_const.h	/^                         ZOLTAN_ID_PTR *, int **, int **);$/;"	t	typeref:typename:int ZOLTAN_LB_FN (struct Zoltan_Struct *,float *,int *,ZOLTAN_ID_PTR *,ZOLTAN_ID_PTR *,int **,int **,int *,ZOLTAN_ID_PTR *,*,int **,int **)
ZOLTAN_ID_SPEC	zoltan/include/zoltan_types.h	/^#define ZOLTAN_ID_SPEC /;"	d
ZOLTAN_ID_TYPE	zoltan/include/zoltan_types.h	/^typedef unsigned int ZOLTAN_ID_TYPE;$/;"	t	typeref:typename:unsigned int
ZOLTAN_ID_TYPE	zoltan/include/zoltan_types.h	/^typedef unsigned long ZOLTAN_ID_TYPE;$/;"	t	typeref:typename:unsigned long
ZOLTAN_ID_TYPE	zoltan/include/zoltan_types.h	/^typedef unsigned long long ZOLTAN_ID_TYPE;$/;"	t	typeref:typename:unsigned long long
ZOLTAN_INIT_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_INIT_GID(/;"	d
ZOLTAN_INIT_ID	zoltan/Utilities/shared/zoltan_id.h	/^#define ZOLTAN_INIT_ID(/;"	d
ZOLTAN_INIT_LID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_INIT_LID(/;"	d
ZOLTAN_IN_ORDER	zoltan/fort/fwrap.f90	/^  ZOLTAN_IN_ORDER /;"	v	module:zoltan
ZOLTAN_IN_ORDER	zoltan/include/zoltan.h	/^  ZOLTAN_IN_ORDER,       \/* user provides the order of the children *\/$/;"	e	enum:Zoltan_Ref_Type
ZOLTAN_LB_ALL_LISTS	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_ALL_LISTS /;"	d
ZOLTAN_LB_APPROACH_DEF	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_APPROACH_DEF /;"	d
ZOLTAN_LB_CANDIDATE_LISTS	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_CANDIDATE_LISTS /;"	d
ZOLTAN_LB_COMPLETE_EXPORT_LISTS	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_COMPLETE_EXPORT_LISTS /;"	d
ZOLTAN_LB_EXPORT_LISTS	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_EXPORT_LISTS /;"	d
ZOLTAN_LB_IMBALANCE_TOL_DEF	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_IMBALANCE_TOL_DEF /;"	d
ZOLTAN_LB_IMPORT_LISTS	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_IMPORT_LISTS /;"	d
ZOLTAN_LB_MAX_METHODS	zoltan/lb/lb_const.h	/^  ZOLTAN_LB_MAX_METHODS          \/*  This entry should always be last.      *\/$/;"	e	enum:Zoltan_LB_Method
ZOLTAN_LB_METHOD	zoltan/lb/lb_const.h	/^} ZOLTAN_LB_METHOD;$/;"	t	typeref:enum:Zoltan_LB_Method
ZOLTAN_LB_NO_LISTS	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_NO_LISTS /;"	d
ZOLTAN_LB_REMAP_NONE	zoltan/lb/lb_remap.c	/^#define ZOLTAN_LB_REMAP_NONE /;"	d	file:
ZOLTAN_LB_REMAP_PARTS	zoltan/lb/lb_remap.c	/^#define ZOLTAN_LB_REMAP_PARTS /;"	d	file:
ZOLTAN_LB_REMAP_PROCESSORS	zoltan/lb/lb_remap.c	/^#define ZOLTAN_LB_REMAP_PROCESSORS /;"	d	file:
ZOLTAN_LB_RETURN_LISTS_DEF	zoltan/lb/lb_const.h	/^#define ZOLTAN_LB_RETURN_LISTS_DEF /;"	d
ZOLTAN_LIB	zoltan/Makefile.am	/^ZOLTAN_LIB = libzoltan.a$/;"	m
ZOLTAN_LIB	zoltan/Makefile.in	/^ZOLTAN_LIB = libzoltan.a$/;"	m
ZOLTAN_LOCAL	zoltan/zz/zz_const.h	/^#define ZOLTAN_LOCAL /;"	d
ZOLTAN_LT_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_LT_GID(/;"	d
ZOLTAN_LT_ID	zoltan/Utilities/shared/zoltan_id.c	/^int ZOLTAN_LT_ID(int n, ZOLTAN_ID_PTR a, ZOLTAN_ID_PTR b)$/;"	f	typeref:typename:int
ZOLTAN_MALLOC	zoltan/include/zoltan_mem.h	/^#define ZOLTAN_MALLOC(/;"	d
ZOLTAN_MALLOC_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_MALLOC_GID(/;"	d
ZOLTAN_MALLOC_GID_ARRAY	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_MALLOC_GID_ARRAY(/;"	d
ZOLTAN_MALLOC_LID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_MALLOC_LID(/;"	d
ZOLTAN_MALLOC_LID_ARRAY	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_MALLOC_LID_ARRAY(/;"	d
ZOLTAN_MAP	zoltan/zz/zz_util_const.h	/^typedef struct Zoltan_Map_List ZOLTAN_MAP;$/;"	t	typeref:struct:Zoltan_Map_List
ZOLTAN_MATLAB	zoltan/Makefile.am	/^ZOLTAN_MATLAB = \\$/;"	m
ZOLTAN_MATLAB	zoltan/Makefile.in	/^ZOLTAN_MATLAB = \\$/;"	m
ZOLTAN_MAX_FN_TYPES	zoltan/include/zoltan.h	/^  ZOLTAN_MAX_FN_TYPES               \/*  This entry should always be last. *\/$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_MAX_SIBLINGS	zoltan/hier/hier.c	/^#define ZOLTAN_MAX_SIBLINGS /;"	d	file:
ZOLTAN_MEMERR	zoltan/fort/fwrap.f90	/^   ZOLTAN_MEMERR /;"	v	module:zoltan
ZOLTAN_MEMERR	zoltan/include/zoltan_types.h	/^#define ZOLTAN_MEMERR /;"	d
ZOLTAN_MEM_STAT_MAXIMUM	zoltan/include/zoltan_mem.h	/^#define ZOLTAN_MEM_STAT_MAXIMUM /;"	d
ZOLTAN_MEM_STAT_TOTAL	zoltan/include/zoltan_mem.h	/^#define ZOLTAN_MEM_STAT_TOTAL /;"	d
ZOLTAN_METIS	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_METIS$/;"	d
ZOLTAN_METIS	zoltan/driver/dr_const.h	/^#define ZOLTAN_METIS$/;"	d
ZOLTAN_MID_MIGRATE_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_MID_MIGRATE_FN_TYPE /;"	v	module:zoltan
ZOLTAN_MID_MIGRATE_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_MID_MIGRATE_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_MID_MIGRATE_PP_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_MID_MIGRATE_PP_FN_TYPE /;"	v	module:zoltan
ZOLTAN_MID_MIGRATE_PP_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_MID_MIGRATE_PP_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_MIGRATE_ONLY_PROC_CHANGES_DEF	zoltan/lb/lb_const.h	/^#define ZOLTAN_MIGRATE_ONLY_PROC_CHANGES_DEF /;"	d
ZOLTAN_Malloc_ID	zoltan/Utilities/shared/zoltan_id.c	/^ZOLTAN_ID_PTR ZOLTAN_Malloc_ID(int n, char *file, int line)$/;"	f	typeref:typename:ZOLTAN_ID_PTR
ZOLTAN_NEMESIS	zoltan/driver/dr_const.h	/^#define ZOLTAN_NEMESIS$/;"	d
ZOLTAN_NEXT_BORDER_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NEXT_BORDER_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NEXT_BORDER_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NEXT_BORDER_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NEXT_COARSE_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NEXT_COARSE_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NEXT_COARSE_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NEXT_COARSE_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NEXT_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NEXT_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NEXT_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NEXT_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NOT_FOUND	zoltan/include/zoltan_types.h	/^#define ZOLTAN_NOT_FOUND /;"	d
ZOLTAN_NUM_BORDER_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_BORDER_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_BORDER_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_BORDER_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_CHILD_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_CHILD_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_CHILD_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_CHILD_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_COARSE_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_COARSE_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_COARSE_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_COARSE_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_EDGES_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_EDGES_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_EDGES_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_EDGES_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_EDGES_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_EDGES_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_EDGES_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_EDGES_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_FIXED_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_FIXED_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_FIXED_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_FIXED_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_GEOM_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_GEOM_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_GEOM_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_GEOM_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_NUM_ID_ENTRIES_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_NUM_ID_ENTRIES_DEF /;"	d
ZOLTAN_NUM_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_NUM_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_NUM_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_NUM_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_OBJ_LIST_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_OBJ_LIST_FN_TYPE /;"	v	module:zoltan
ZOLTAN_OBJ_LIST_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_OBJ_LIST_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_OBJ_SIZE_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_OBJ_SIZE_FN_TYPE /;"	v	module:zoltan
ZOLTAN_OBJ_SIZE_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_OBJ_SIZE_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_OBJ_SIZE_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_OBJ_SIZE_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_OBJ_SIZE_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_OBJ_SIZE_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_OBJ_WEIGHT_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_OBJ_WEIGHT_DEF /;"	d
ZOLTAN_OK	zoltan/fort/fwrap.f90	/^   ZOLTAN_OK /;"	v	module:zoltan
ZOLTAN_OK	zoltan/include/zoltan_types.h	/^#define ZOLTAN_OK /;"	d
ZOLTAN_OTHER_REF	zoltan/fort/fwrap.f90	/^  ZOLTAN_OTHER_REF /;"	v	module:zoltan
ZOLTAN_OTHER_REF	zoltan/include/zoltan.h	/^  ZOLTAN_OTHER_REF,      \/* unspecified type of refinement *\/$/;"	e	enum:Zoltan_Ref_Type
ZOLTAN_OVIS	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_OVIS$/;"	d
ZOLTAN_OVIS	zoltan/driver/dr_const.h	/^#define ZOLTAN_OVIS$/;"	d
ZOLTAN_Output_Order	zoltan/tpls/third_library.h	/^} ZOLTAN_Output_Order;$/;"	t	typeref:struct:ZOLTAN_Output_Order_
ZOLTAN_Output_Order_	zoltan/tpls/third_library.h	/^typedef struct ZOLTAN_Output_Order_ {$/;"	s
ZOLTAN_Output_Part	zoltan/tpls/third_library.h	/^} ZOLTAN_Output_Part;$/;"	t	typeref:struct:ZOLTAN_Output_Part_
ZOLTAN_Output_Part_	zoltan/tpls/third_library.h	/^typedef struct ZOLTAN_Output_Part_ {$/;"	s
ZOLTAN_PACK_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PACK_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PACK_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PACK_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PACK_OBJ_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PACK_OBJ_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PACK_OBJ_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PACK_OBJ_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PARKWAY	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PARKWAY$/;"	d
ZOLTAN_PARKWAY	zoltan/driver/dr_const.h	/^#define ZOLTAN_PARKWAY$/;"	d
ZOLTAN_PARKWAY_ERROR	zoltan/phg/phg_parkway.c	/^#define ZOLTAN_PARKWAY_ERROR(/;"	d	file:
ZOLTAN_PARMETIS	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PARMETIS$/;"	d
ZOLTAN_PARMETIS	zoltan/driver/dr_const.h	/^#define ZOLTAN_PARMETIS$/;"	d
ZOLTAN_PARMETIS_ERROR	zoltan/tpls/third_library.h	/^#define ZOLTAN_PARMETIS_ERROR(/;"	d
ZOLTAN_PARTITION_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_PARTITION_FN /;"	d
ZOLTAN_PARTITION_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PARTITION_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PARTITION_FN_TYPE	zoltan/include/zoltan.h	/^#define ZOLTAN_PARTITION_FN_TYPE /;"	d
ZOLTAN_PARTITION_FORT_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_PARTITION_FORT_FN /;"	d
ZOLTAN_PARTITION_MULTI_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_PARTITION_MULTI_FN /;"	d
ZOLTAN_PARTITION_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PARTITION_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PARTITION_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^#define ZOLTAN_PARTITION_MULTI_FN_TYPE /;"	d
ZOLTAN_PARTITION_MULTI_FORT_FN	zoltan/include/zoltan.h	/^#define ZOLTAN_PARTITION_MULTI_FORT_FN /;"	d
ZOLTAN_PART_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PART_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PART_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PART_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PART_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PART_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PART_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PART_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PATOH	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PATOH$/;"	d
ZOLTAN_PATOH	zoltan/driver/dr_const.h	/^#define ZOLTAN_PATOH$/;"	d
ZOLTAN_PATOH_ERROR	zoltan/phg/phg_patoh.c	/^#define ZOLTAN_PATOH_ERROR(/;"	d	file:
ZOLTAN_PLATFORM_MAX_LEVELS	zoltan/hier/hier.h	/^#define ZOLTAN_PLATFORM_MAX_LEVELS /;"	d
ZOLTAN_POSTPROCESS	zoltan/Makefile.am	/^ZOLTAN_POSTPROCESS = \\$/;"	m
ZOLTAN_POSTPROCESS	zoltan/Makefile.in	/^ZOLTAN_POSTPROCESS = \\$/;"	m
ZOLTAN_POST_MIGRATE_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_POST_MIGRATE_FN_TYPE /;"	v	module:zoltan
ZOLTAN_POST_MIGRATE_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_POST_MIGRATE_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_POST_MIGRATE_PP_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_POST_MIGRATE_PP_FN_TYPE /;"	v	module:zoltan
ZOLTAN_POST_MIGRATE_PP_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_POST_MIGRATE_PP_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PRE_MIGRATE_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PRE_MIGRATE_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PRE_MIGRATE_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PRE_MIGRATE_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PRE_MIGRATE_PP_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PRE_MIGRATE_PP_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PRE_MIGRATE_PP_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PRE_MIGRATE_PP_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PRINT_ERROR	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PRINT_ERROR(/;"	d
ZOLTAN_PRINT_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_PRINT_GID(/;"	d
ZOLTAN_PRINT_ID	zoltan/Utilities/shared/zoltan_id.c	/^void ZOLTAN_PRINT_ID(int n, ZOLTAN_ID_PTR a)$/;"	f	typeref:typename:void
ZOLTAN_PRINT_INFO	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PRINT_INFO(/;"	d
ZOLTAN_PRINT_LID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_PRINT_LID(/;"	d
ZOLTAN_PRINT_VTX_NUM	zoltan/zz/zz_gen_files.c	/^#define ZOLTAN_PRINT_VTX_NUM /;"	d	file:
ZOLTAN_PRINT_WARN	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PRINT_WARN(/;"	d
ZOLTAN_PROC_NAME_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_PROC_NAME_FN_TYPE /;"	v	module:zoltan
ZOLTAN_PROC_NAME_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_PROC_NAME_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_PROC_NOT_IN_COMMUNICATOR	zoltan/zz/zz_const.h	/^#define ZOLTAN_PROC_NOT_IN_COMMUNICATOR(/;"	d
ZOLTAN_PTSCOTCH	zoltan/Utilities/shared/zoltan_util.h	/^#  define ZOLTAN_PTSCOTCH$/;"	d
ZOLTAN_PURIFY	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_PURIFY$/;"	d
ZOLTAN_PURIFY	zoltan/driver/dr_const.h	/^#define ZOLTAN_PURIFY$/;"	d
ZOLTAN_QUAD_QUAD	zoltan/fort/fwrap.f90	/^  ZOLTAN_QUAD_QUAD /;"	v	module:zoltan
ZOLTAN_QUAD_QUAD	zoltan/include/zoltan.h	/^  ZOLTAN_QUAD_QUAD,      \/* quadrasection of quadralaterals *\/$/;"	e	enum:Zoltan_Ref_Type
ZOLTAN_RAND_INIT	zoltan/zz/zz_rand.h	/^#define ZOLTAN_RAND_INIT /;"	d
ZOLTAN_RAND_MAX	zoltan/zz/zz_rand.h	/^#define ZOLTAN_RAND_MAX /;"	d
ZOLTAN_REALLOC	zoltan/include/zoltan_mem.h	/^#define ZOLTAN_REALLOC(/;"	d
ZOLTAN_REALLOC_GID_ARRAY	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_REALLOC_GID_ARRAY(/;"	d
ZOLTAN_REALLOC_LID_ARRAY	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_REALLOC_LID_ARRAY(/;"	d
ZOLTAN_REFTREE	zoltan/reftree/reftree.h	/^typedef struct Zoltan_Reftree_Struct ZOLTAN_REFTREE;$/;"	t	typeref:struct:Zoltan_Reftree_Struct
ZOLTAN_REF_TYPE	zoltan/include/zoltan.h	/^typedef enum Zoltan_Ref_Type ZOLTAN_REF_TYPE;$/;"	t	typeref:enum:Zoltan_Ref_Type
ZOLTAN_SCOTCH	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_SCOTCH$/;"	d
ZOLTAN_SCOTCH	zoltan/driver/dr_const.h	/^#define ZOLTAN_SCOTCH$/;"	d
ZOLTAN_SET_GID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_SET_GID(/;"	d
ZOLTAN_SET_ID	zoltan/Utilities/shared/zoltan_id.h	/^#define ZOLTAN_SET_ID(/;"	d
ZOLTAN_SET_LID	zoltan/zz/zz_id_const.h	/^#define ZOLTAN_SET_LID(/;"	d
ZOLTAN_SORT_H	zoltan/zz/zz_sort.h	/^#define ZOLTAN_SORT_H$/;"	d
ZOLTAN_SPECIAL_MALLOC_GID	zoltan/all/all_allo_const.h	/^  ZOLTAN_SPECIAL_MALLOC_GID,$/;"	e	enum:Zoltan_Special_Malloc_Type
ZOLTAN_SPECIAL_MALLOC_INT	zoltan/all/all_allo_const.h	/^  ZOLTAN_SPECIAL_MALLOC_INT,$/;"	e	enum:Zoltan_Special_Malloc_Type
ZOLTAN_SPECIAL_MALLOC_LID	zoltan/all/all_allo_const.h	/^  ZOLTAN_SPECIAL_MALLOC_LID$/;"	e	enum:Zoltan_Special_Malloc_Type
ZOLTAN_SPECIAL_MALLOC_TYPE	zoltan/all/all_allo_const.h	/^typedef enum Zoltan_Special_Malloc_Type ZOLTAN_SPECIAL_MALLOC_TYPE;$/;"	t	typeref:enum:Zoltan_Special_Malloc_Type
ZOLTAN_STRUCT	zoltan/driver/dr_loadbal_const.h	/^  #define ZOLTAN_STRUCT /;"	d
ZOLTAN_TFLOPS_SPECIAL_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_TFLOPS_SPECIAL_DEF /;"	d
ZOLTAN_THIRD_ERROR	zoltan/tpls/third_library.h	/^#define ZOLTAN_THIRD_ERROR(/;"	d
ZOLTAN_TIMER_CPP_H_	zoltan/include/zoltan_timer_cpp.h	/^#define ZOLTAN_TIMER_CPP_H_$/;"	d
ZOLTAN_TIMER_DEF	zoltan/zz/zz_const.h	/^#define ZOLTAN_TIMER_DEF /;"	d
ZOLTAN_TIMER_START	zoltan/include/zoltan_timer.h	/^#define ZOLTAN_TIMER_START(/;"	d
ZOLTAN_TIMER_STOP	zoltan/include/zoltan_timer.h	/^#define ZOLTAN_TIMER_STOP(/;"	d
ZOLTAN_TIME_CPU	zoltan/include/zoltan_timer.h	/^#define ZOLTAN_TIME_CPU /;"	d
ZOLTAN_TIME_USER	zoltan/include/zoltan_timer.h	/^#define ZOLTAN_TIME_USER /;"	d
ZOLTAN_TIME_WALL	zoltan/include/zoltan_timer.h	/^#define ZOLTAN_TIME_WALL /;"	d
ZOLTAN_TRACE	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_TRACE(/;"	d
ZOLTAN_TRACE_DETAIL	zoltan/zz/zz_const.h	/^#define ZOLTAN_TRACE_DETAIL(/;"	d
ZOLTAN_TRACE_ENTER	zoltan/zz/zz_const.h	/^#define ZOLTAN_TRACE_ENTER(/;"	d
ZOLTAN_TRACE_EXIT	zoltan/zz/zz_const.h	/^#define ZOLTAN_TRACE_EXIT(/;"	d
ZOLTAN_TRACE_IN	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_TRACE_IN(/;"	d
ZOLTAN_TRACE_OUT	zoltan/Utilities/shared/zoltan_util.h	/^#define ZOLTAN_TRACE_OUT(/;"	d
ZOLTAN_TRI_BISECT	zoltan/fort/fwrap.f90	/^  ZOLTAN_TRI_BISECT /;"	v	module:zoltan
ZOLTAN_TRI_BISECT	zoltan/include/zoltan.h	/^  ZOLTAN_TRI_BISECT,     \/* bisection of triangles *\/$/;"	e	enum:Zoltan_Ref_Type
ZOLTAN_Third_Geom	zoltan/tpls/third_library.h	/^} ZOLTAN_Third_Geom;$/;"	t	typeref:struct:ZOLTAN_Third_Geom_
ZOLTAN_Third_Geom_	zoltan/tpls/third_library.h	/^typedef struct ZOLTAN_Third_Geom_ {$/;"	s
ZOLTAN_Third_Graph	zoltan/tpls/third_library.h	/^} ZOLTAN_Third_Graph;$/;"	t	typeref:struct:ZOLTAN_Third_Graph_
ZOLTAN_Third_Graph_	zoltan/tpls/third_library.h	/^typedef struct ZOLTAN_Third_Graph_ {$/;"	s
ZOLTAN_Third_Part	zoltan/tpls/third_library.h	/^} ZOLTAN_Third_Part;$/;"	t	typeref:struct:ZOLTAN_Third_Part_
ZOLTAN_Third_Part_	zoltan/tpls/third_library.h	/^typedef struct ZOLTAN_Third_Part_ {$/;"	s
ZOLTAN_Third_Vsize	zoltan/tpls/third_library.h	/^} ZOLTAN_Third_Vsize;$/;"	t	typeref:struct:ZOLTAN_Third_Vsize_
ZOLTAN_Third_Vsize_	zoltan/tpls/third_library.h	/^typedef struct ZOLTAN_Third_Vsize_ {$/;"	s
ZOLTAN_UNPACK_OBJ_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_UNPACK_OBJ_FN_TYPE /;"	v	module:zoltan
ZOLTAN_UNPACK_OBJ_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_UNPACK_OBJ_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_UNPACK_OBJ_MULTI_FN_TYPE	zoltan/fort/fwrap.f90	/^   ZOLTAN_UNPACK_OBJ_MULTI_FN_TYPE /;"	v	module:zoltan
ZOLTAN_UNPACK_OBJ_MULTI_FN_TYPE	zoltan/include/zoltan.h	/^  ZOLTAN_UNPACK_OBJ_MULTI_FN_TYPE,$/;"	e	enum:Zoltan_Fn_Type
ZOLTAN_VERSION_NUMBER	zoltan/include/zoltan.h	/^#define ZOLTAN_VERSION_NUMBER /;"	d
ZOLTAN_WARN	zoltan/fort/fwrap.f90	/^   ZOLTAN_WARN /;"	v	module:zoltan
ZOLTAN_WARN	zoltan/include/zoltan_types.h	/^#define ZOLTAN_WARN /;"	d
ZOM	zoltan/fdriver/makefile	/^ZOM = $(F90_MODULE_PREFIX)$(ZOD)$/;"	m
ZOM	zoltan/fort/makefile	/^ZOM = $(F90_MODULE_PREFIX)$(ZOD) -I..\/fort$/;"	m
ZOOS	zoltan/order/order_const.h	/^			      int *, ZOOS *);$/;"	t	typeref:typename:int ZOLTAN_ORDER_FN (struct Zoltan_Struct * zz,int,ZOLTAN_ID_PTR,ZOLTAN_ID_PTR,ZOLTAN_ID_PTR,int *,*)
ZOOS	zoltan/order/order_const.h	/^typedef struct Zoltan_Order_Options ZOOS;$/;"	t	typeref:struct:Zoltan_Order_Options
ZOS	zoltan/order/order_const.h	/^typedef struct Zoltan_Order_Struct ZOS;$/;"	t	typeref:struct:Zoltan_Order_Struct
ZTIMER	zoltan/Utilities/Timer/zoltan_timer.c	/^} ZTIMER;$/;"	t	typeref:struct:Zoltan_Timer	file:
ZTIMER_TS	zoltan/Utilities/Timer/zoltan_timer.c	/^} ZTIMER_TS;$/;"	t	typeref:struct:TimeStruct	file:
ZTPL_OS	zoltan/tpls/third_library_const.h	/^typedef struct Zoltan_TPL_Order_Struct ZTPL_OS;$/;"	t	typeref:struct:Zoltan_TPL_Order_Struct
ZTStruct	zoltan/include/zoltan_timer_cpp.h	/^  struct Zoltan_Timer *ZTStruct;$/;"	m	class:Zoltan_Timer_Object	typeref:struct:Zoltan_Timer *
ZTime	zoltan/zz/zz_const.h	/^  struct Zoltan_Timer *ZTime;     \/*  Timer structure for persistent timing. *\/$/;"	m	struct:Zoltan_Struct	typeref:struct:Zoltan_Timer *
ZZ	zoltan/Makefile.am	/^ZZ = \\$/;"	m
ZZ	zoltan/Makefile.in	/^ZZ = \\$/;"	m
ZZ	zoltan/zz/zz_const.h	/^typedef struct Zoltan_Struct ZZ;$/;"	t	typeref:struct:Zoltan_Struct
ZZ_H	zoltan/Makefile.am	/^ZZ_H = \\$/;"	m
ZZ_H	zoltan/Makefile.in	/^ZZ_H = \\$/;"	m
ZZ_MURMUR_HASH	zoltan/Utilities/DDirectory/DD_Hash2.c	/^#define ZZ_MURMUR_HASH$/;"	d	file:
ZZ_MURMUR_HASH	zoltan/zz/zz_hash.c	/^#define ZZ_MURMUR_HASH$/;"	d	file:
ZZ_Ptr	zoltan/include/zoltan_cpp.h	/^  Zoltan_Struct * ZZ_Ptr; $/;"	m	class:Zoltan	typeref:typename:Zoltan_Struct *
ZZ_Transform	zoltan/zz/zz_const.h	/^typedef struct Zoltan_Transform_Struct ZZ_Transform;$/;"	t	typeref:struct:Zoltan_Transform_Struct
Zf90_Align	zoltan/fort/fwrap.f90	/^function Zf90_Align(/;"	f	module:zoltan
Zf90_Color	zoltan/fort/fwrap.f90	/^function Zf90_Color(/;"	f	module:zoltan
Zf90_Color_Test	zoltan/fort/fwrap.f90	/^function Zf90_Color_Test(/;"	f	module:zoltan
Zf90_Compute_Destinations	zoltan/fort/fwrap.f90	/^function Zf90_Compute_Destinations(/;"	f	module:zoltan
Zf90_Copy	zoltan/fort/fwrap.f90	/^function Zf90_Copy(/;"	f	module:zoltan
Zf90_Copy_To	zoltan/fort/fwrap.f90	/^function Zf90_Copy_To(/;"	f	module:zoltan
Zf90_Create	zoltan/fort/fwrap.f90	/^function Zf90_Create(/;"	f	module:zoltan
Zf90_Destroy	zoltan/fort/fwrap.f90	/^subroutine Zf90_Destroy(/;"	s	module:zoltan
Zf90_Generate_Files	zoltan/fort/fwrap.f90	/^function Zf90_Generate_Files(/;"	f	module:zoltan
Zf90_Get_Struct_Addr	zoltan/fort/fwrap.f90	/^subroutine Zf90_Get_Struct_Addr(/;"	s	module:zoltan
Zf90_Help_Migrate	zoltan/fort/fwrap.f90	/^function Zf90_Help_Migrate(/;"	f	module:zoltan
Zf90_Initialize	zoltan/fort/fwrap.f90	/^function Zf90_Initialize(/;"	f	module:zoltan
Zf90_Initialize1	zoltan/fort/fwrap.f90	/^function Zf90_Initialize1(/;"	f	module:zoltan
Zf90_Invert_Lists	zoltan/fort/fwrap.f90	/^function Zf90_Invert_Lists(/;"	f	module:zoltan
Zf90_LB_Balance	zoltan/fort/fwrap.f90	/^function Zf90_LB_Balance(/;"	f	module:zoltan
Zf90_LB_Box_Assign	zoltan/fort/fwrap.f90	/^function Zf90_LB_Box_Assign(/;"	f	module:zoltan
Zf90_LB_Box_PP_Assign	zoltan/fort/fwrap.f90	/^function Zf90_LB_Box_PP_Assign(/;"	f	module:zoltan
Zf90_LB_Eval	zoltan/fort/fwrap.f90	/^function Zf90_LB_Eval(/;"	f	module:zoltan
Zf90_LB_Free_Data	zoltan/fort/fwrap.f90	/^function Zf90_LB_Free_Data(/;"	f	module:zoltan
Zf90_LB_Free_Part	zoltan/fort/fwrap.f90	/^function Zf90_LB_Free_Part(/;"	f	module:zoltan
Zf90_LB_Partition	zoltan/fort/fwrap.f90	/^function Zf90_LB_Partition(/;"	f	module:zoltan
Zf90_LB_Point_Assign	zoltan/fort/fwrap.f90	/^function Zf90_LB_Point_Assign(/;"	f	module:zoltan
Zf90_LB_Point_PP_Assign	zoltan/fort/fwrap.f90	/^function Zf90_LB_Point_PP_Assign(/;"	f	module:zoltan
Zf90_LB_Set_Part_Sizes	zoltan/fort/fwrap.f90	/^function Zf90_LB_Set_Part_Sizes(/;"	f	module:zoltan
Zf90_Memory_Stats	zoltan/fort/fwrap.f90	/^subroutine Zf90_Memory_Stats(/;"	s	module:zoltan
Zf90_Migrate	zoltan/fort/fwrap.f90	/^function Zf90_Migrate(/;"	f	module:zoltan
Zf90_Order	zoltan/fort/fwrap.f90	/^function Zf90_Order(/;"	f	module:zoltan
Zf90_RCB_Box	zoltan/fort/fwrap.f90	/^function Zf90_RCB_Box(/;"	f	module:zoltan
Zf90_Reftree_Get_Child_Order	zoltan/fort/fwrap.f90	/^subroutine Zf90_Reftree_Get_Child_Order(/;"	s	module:zoltan
Zf90_Set_Fn0f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn0f(/;"	f	module:zoltan
Zf90_Set_Fn0s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn0s(/;"	f	module:zoltan
Zf90_Set_Fn1f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn1f(/;"	f	module:zoltan
Zf90_Set_Fn1s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn1s(/;"	f	module:zoltan
Zf90_Set_Fn2f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn2f(/;"	f	module:zoltan
Zf90_Set_Fn2s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn2s(/;"	f	module:zoltan
Zf90_Set_Fn3f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn3f(/;"	f	module:zoltan
Zf90_Set_Fn3s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn3s(/;"	f	module:zoltan
Zf90_Set_Fn4f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn4f(/;"	f	module:zoltan
Zf90_Set_Fn4s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn4s(/;"	f	module:zoltan
Zf90_Set_Fn5f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn5f(/;"	f	module:zoltan
Zf90_Set_Fn5s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn5s(/;"	f	module:zoltan
Zf90_Set_Fn6f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn6f(/;"	f	module:zoltan
Zf90_Set_Fn6s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn6s(/;"	f	module:zoltan
Zf90_Set_Fn7f	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn7f(/;"	f	module:zoltan
Zf90_Set_Fn7s	zoltan/fort/fwrap.f90	/^function Zf90_Set_Fn7s(/;"	f	module:zoltan
Zf90_Set_Param	zoltan/fort/fwrap.f90	/^function Zf90_Set_Param(/;"	f	module:zoltan
Zf90_Set_Param_Vec	zoltan/fort/fwrap.f90	/^function Zf90_Set_Param_Vec(/;"	f	module:zoltan
Zfw_Align	zoltan/fort/cwrap.c	/^int Zfw_Align(int *size)$/;"	f	typeref:typename:int
Zfw_Align	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Align /;"	d
Zfw_Color	zoltan/fort/cwrap.c	/^int Zfw_Color($/;"	f	typeref:typename:int
Zfw_Color	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Color /;"	d
Zfw_Color_Test	zoltan/fort/cwrap.c	/^int Zfw_Color_Test($/;"	f	typeref:typename:int
Zfw_Color_Test	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Color_Test /;"	d
Zfw_Compute_Destinations	zoltan/fort/cwrap.c	/^int Zfw_Compute_Destinations(int *addr_lb, int *nbytes, $/;"	f	typeref:typename:int
Zfw_Compute_Destinations	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Compute_Destinations /;"	d
Zfw_Copy	zoltan/fort/cwrap.c	/^void Zfw_Copy(int *addr_lb1, int *addr_lb2, int *nbytes)$/;"	f	typeref:typename:void
Zfw_Copy	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Copy /;"	d
Zfw_Copy_To	zoltan/fort/cwrap.c	/^int Zfw_Copy_To(int *addr_lb1, int *addr_lb2, int *nbytes)$/;"	f	typeref:typename:int
Zfw_Copy_To	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Copy_To /;"	d
Zfw_Create	zoltan/fort/cwrap.c	/^void Zfw_Create(int *f_communicator, int *addr_lb, int *nbytes)$/;"	f	typeref:typename:void
Zfw_Create	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Create /;"	d
Zfw_Destroy	zoltan/fort/cwrap.c	/^void Zfw_Destroy(int *addr_lb, int *nbytes)$/;"	f	typeref:typename:void
Zfw_Destroy	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Destroy /;"	d
Zfw_Generate_Files	zoltan/fort/cwrap.c	/^int Zfw_Generate_Files(int *addr_lb, int *nbytes, int *int_filename,$/;"	f	typeref:typename:int
Zfw_Generate_Files	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Generate_Files /;"	d
Zfw_Get_Address_int	zoltan/fort/cwrap.c	/^void Zfw_Get_Address_int(int *addr,$/;"	f	typeref:typename:void
Zfw_Get_Address_int	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Get_Address_int /;"	d
Zfw_Get_Address_struct	zoltan/fort/cwrap.c	/^void Zfw_Get_Address_struct(int *addr,$/;"	f	typeref:typename:void
Zfw_Get_Address_struct	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Get_Address_struct /;"	d
Zfw_Get_Comm_Dim	zoltan/fort/cwrap.c	/^int Zfw_Get_Comm_Dim(int *addr_lb, int *nbytes)$/;"	f	typeref:typename:int
Zfw_Get_Comm_Dim	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Get_Comm_Dim /;"	d
Zfw_Get_Wgt_Dim	zoltan/fort/cwrap.c	/^int Zfw_Get_Wgt_Dim(int *addr_lb, int *nbytes)$/;"	f	typeref:typename:int
Zfw_Get_Wgt_Dim	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Get_Wgt_Dim /;"	d
Zfw_Help_Migrate	zoltan/fort/cwrap.c	/^int Zfw_Help_Migrate(int *addr_lb, int *nbytes, $/;"	f	typeref:typename:int
Zfw_Help_Migrate	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Help_Migrate /;"	d
Zfw_Initialize	zoltan/fort/cwrap.c	/^int Zfw_Initialize(float *ver)$/;"	f	typeref:typename:int
Zfw_Initialize	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Initialize /;"	d
Zfw_Initialize1	zoltan/fort/cwrap.c	/^int Zfw_Initialize1(int *argc, int *argv, int *starts, float *ver)$/;"	f	typeref:typename:int
Zfw_Initialize1	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Initialize1 /;"	d
Zfw_Invert_Lists	zoltan/fort/cwrap.c	/^int Zfw_Invert_Lists(int *addr_lb, int *nbytes, $/;"	f	typeref:typename:int
Zfw_Invert_Lists	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Invert_Lists /;"	d
Zfw_LB_Box_Assign	zoltan/fort/cwrap.c	/^int Zfw_LB_Box_Assign(int *addr_lb, int *nbytes, double *xmin, double *ymin,$/;"	f	typeref:typename:int
Zfw_LB_Box_Assign	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Box_Assign /;"	d
Zfw_LB_Box_PP_Assign	zoltan/fort/cwrap.c	/^int Zfw_LB_Box_PP_Assign(int *addr_lb, int *nbytes, double *xmin, double *ymin,$/;"	f	typeref:typename:int
Zfw_LB_Box_PP_Assign	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Box_PP_Assign /;"	d
Zfw_LB_Eval	zoltan/fort/cwrap.c	/^int Zfw_LB_Eval(int *addr_lb, int *nbytes, int *print_stats)$/;"	f	typeref:typename:int
Zfw_LB_Eval	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Eval /;"	d
Zfw_LB_Partition	zoltan/fort/cwrap.c	/^int Zfw_LB_Partition(int *addr_lb, int *nbytes, int *changes, $/;"	f	typeref:typename:int
Zfw_LB_Partition	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Partition /;"	d
Zfw_LB_Point_Assign	zoltan/fort/cwrap.c	/^int Zfw_LB_Point_Assign(int *addr_lb, int *nbytes, double *coords, int *proc)$/;"	f	typeref:typename:int
Zfw_LB_Point_Assign	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Point_Assign /;"	d
Zfw_LB_Point_PP_Assign	zoltan/fort/cwrap.c	/^int Zfw_LB_Point_PP_Assign(int *addr_lb, int *nbytes, double *coords, int *proc,$/;"	f	typeref:typename:int
Zfw_LB_Point_PP_Assign	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Point_PP_Assign /;"	d
Zfw_LB_Set_Part_Sizes	zoltan/fort/cwrap.c	/^int Zfw_LB_Set_Part_Sizes(int *addr_lb, int *nbytes, int *global_part, int *len,$/;"	f	typeref:typename:int
Zfw_LB_Set_Part_Sizes	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_LB_Set_Part_Sizes /;"	d
Zfw_Memory_Stats	zoltan/fort/cwrap.c	/^void Zfw_Memory_Stats()$/;"	f	typeref:typename:void
Zfw_Memory_Stats	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Memory_Stats /;"	d
Zfw_Migrate	zoltan/fort/cwrap.c	/^int Zfw_Migrate(int *addr_lb, int *nbytes, $/;"	f	typeref:typename:int
Zfw_Migrate	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Migrate /;"	d
Zfw_Order	zoltan/fort/cwrap.c	/^int Zfw_Order($/;"	f	typeref:typename:int
Zfw_Order	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Order /;"	d
Zfw_RCB_Box	zoltan/fort/cwrap.c	/^int Zfw_RCB_Box(int *addr_lb, int *nbytes, int *part, int *ndim,$/;"	f	typeref:typename:int
Zfw_RCB_Box	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_RCB_Box /;"	d
Zfw_Reftree_Get_Child_Order	zoltan/fort/cwrap.c	/^void Zfw_Reftree_Get_Child_Order($/;"	f	typeref:typename:void
Zfw_Reftree_Get_Child_Order	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Reftree_Get_Child_Order /;"	d
Zfw_Register_Fort_Malloc	zoltan/fort/cwrap.c	/^void Zfw_Register_Fort_Malloc(ZOLTAN_FORT_MALLOC_INT_FN *fort_malloc_int,$/;"	f	typeref:typename:void
Zfw_Register_Fort_Malloc	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Register_Fort_Malloc /;"	d
Zfw_Set_Fn	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn0f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn0f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)())$/;"	f	typeref:typename:int
Zfw_Set_Fn0f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn0f /;"	d
Zfw_Set_Fn0s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn0s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)())$/;"	f	typeref:typename:int
Zfw_Set_Fn0s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn0s /;"	d
Zfw_Set_Fn1f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn1f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn1f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn1f /;"	d
Zfw_Set_Fn1s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn1s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn1s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn1s /;"	d
Zfw_Set_Fn2f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn2f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn2f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn2f /;"	d
Zfw_Set_Fn2s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn2s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn2s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn2s /;"	d
Zfw_Set_Fn3f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn3f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn3f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn3f /;"	d
Zfw_Set_Fn3s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn3s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn3s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn3s /;"	d
Zfw_Set_Fn4f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn4f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn4f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn4f /;"	d
Zfw_Set_Fn4s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn4s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn4s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn4s /;"	d
Zfw_Set_Fn5f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn5f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn5f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn5f /;"	d
Zfw_Set_Fn5s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn5s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn5s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn5s /;"	d
Zfw_Set_Fn6f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn6f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn6f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn6f /;"	d
Zfw_Set_Fn6s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn6s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn6s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn6s /;"	d
Zfw_Set_Fn7f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn7f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn7f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn7f /;"	d
Zfw_Set_Fn7s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn7s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn7s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn7s /;"	d
Zfw_Set_Fn8f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn8f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn8f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn8f /;"	d
Zfw_Set_Fn8s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn8s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn8s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn8s /;"	d
Zfw_Set_Fn9f	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn9f(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn9f	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn9f /;"	d
Zfw_Set_Fn9s	zoltan/fort/cwrap.c	/^int Zfw_Set_Fn9s(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_Fn9s	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Fn9s /;"	d
Zfw_Set_FnAf	zoltan/fort/cwrap.c	/^int Zfw_Set_FnAf(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_FnAf	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_FnAf /;"	d
Zfw_Set_FnAs	zoltan/fort/cwrap.c	/^int Zfw_Set_FnAs(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_FnAs	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_FnAs /;"	d
Zfw_Set_FnBf	zoltan/fort/cwrap.c	/^int Zfw_Set_FnBf(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_FnBf	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_FnBf /;"	d
Zfw_Set_FnBs	zoltan/fort/cwrap.c	/^int Zfw_Set_FnBs(int *addr_lb, int *nbytes, ZOLTAN_FN_TYPE *type, void (*fn)(),$/;"	f	typeref:typename:int
Zfw_Set_FnBs	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_FnBs /;"	d
Zfw_Set_Param	zoltan/fort/cwrap.c	/^int Zfw_Set_Param(int *addr_lb, int *nbytes, int *int_param_name,$/;"	f	typeref:typename:int
Zfw_Set_Param	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Param /;"	d
Zfw_Set_Param_Vec	zoltan/fort/cwrap.c	/^int Zfw_Set_Param_Vec(int *addr_lb, int *nbytes, int *int_param_name,$/;"	f	typeref:typename:int
Zfw_Set_Param_Vec	zoltan/fort/cwrap_fmangle.h	/^#define Zfw_Set_Param_Vec /;"	d
Zoltan	zoltan/include/zoltan_cpp.h	/^  Zoltan (const MPI_Comm &communicator = MPI_COMM_WORLD) $/;"	f	class:Zoltan
Zoltan	zoltan/include/zoltan_cpp.h	/^  Zoltan (const Zoltan &zz)$/;"	f	class:Zoltan
Zoltan	zoltan/include/zoltan_cpp.h	/^class Zoltan {$/;"	c
Zoltan_Align	zoltan/Utilities/shared/zoltan_align.c	/^int Zoltan_Align(int a)$/;"	f	typeref:typename:int
Zoltan_Align	zoltan/fort/fwrap.f90	/^interface Zoltan_Align$/;"	i	module:zoltan
Zoltan_Align_size_t	zoltan/Utilities/shared/zoltan_align.c	/^size_t Zoltan_Align_size_t(size_t a)$/;"	f	typeref:typename:size_t
Zoltan_AllReduceInPlace	zoltan/zz/zz_util.c	/^Zoltan_AllReduceInPlace(void *sndrcvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm c/;"	f	typeref:typename:int
Zoltan_Arc	zoltan/matrix/zoltan_matrix.h	/^} Zoltan_Arc;$/;"	t	typeref:struct:Zoltan_Arc_
Zoltan_Arc_	zoltan/matrix/zoltan_matrix.h	/^typedef struct Zoltan_Arc_ {$/;"	s
Zoltan_Array_Alloc	zoltan/Utilities/Memory/mem.c	/^double *Zoltan_Array_Alloc(char *file, int lineno, int numdim, ...)$/;"	f	typeref:typename:double *
Zoltan_Assign_Param_Vals	zoltan/params/assign_param_vals.c	/^int      Zoltan_Assign_Param_Vals($/;"	f	typeref:typename:int
Zoltan_Bind_Param	zoltan/params/bind_param.c	/^int       Zoltan_Bind_Param($/;"	f	typeref:typename:int
Zoltan_Bind_Param_Vec	zoltan/params/bind_param.c	/^int       Zoltan_Bind_Param_Vec($/;"	f	typeref:typename:int
Zoltan_Block	zoltan/simple/block.c	/^int Zoltan_Block($/;"	f	typeref:typename:int
Zoltan_Border_Obj_List_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Border_Obj_List_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Bucket_DecVal	zoltan/coloring/bucket.h	/^#define Zoltan_Bucket_DecVal(/;"	d
Zoltan_Bucket_Free	zoltan/coloring/bucket.c	/^void Zoltan_Bucket_Free(Bucket* bs)$/;"	f	typeref:typename:void
Zoltan_Bucket_Initialize	zoltan/coloring/bucket.c	/^Bucket Zoltan_Bucket_Initialize(int max_value, int nb_element)$/;"	f	typeref:typename:Bucket
Zoltan_Bucket_Insert	zoltan/coloring/bucket.c	/^void Zoltan_Bucket_Insert(Bucket* bs, int id, int value)$/;"	f	typeref:typename:void
Zoltan_Bucket_PopMin	zoltan/coloring/bucket.c	/^int Zoltan_Bucket_PopMin(Bucket* bs)$/;"	f	typeref:typename:int
Zoltan_Bucket_Update	zoltan/coloring/bucket.c	/^void Zoltan_Bucket_Update(Bucket* bs, int id, int new_value)$/;"	f	typeref:typename:void
Zoltan_Build_Graph	zoltan/tpls/build_graph.c	/^int Zoltan_Build_Graph(ZZ *zz, int *graph_type, int check_graph,$/;"	f	typeref:typename:int
Zoltan_Calloc	zoltan/Utilities/Memory/mem.c	/^double *Zoltan_Calloc (size_t num, size_t size, char *filename, int lineno)$/;"	f	typeref:typename:double *
Zoltan_Check_Param	zoltan/params/check_param.c	/^int       Zoltan_Check_Param($/;"	f	typeref:typename:int
Zoltan_Check_TPL_Data_Sizes	zoltan/tpls/preprocessing.c	/^int Zoltan_Check_TPL_Data_Sizes(ZZ *zz, int local_num_obj)$/;"	f	typeref:typename:int
Zoltan_Child_List_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Child_List_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Child_Weight_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Child_Weight_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Clean_String	zoltan/zz/zz_util.c	/^int Zoltan_Clean_String($/;"	f	typeref:typename:int
Zoltan_Coarse_Obj_List_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Coarse_Obj_List_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Color	zoltan/coloring/coloring.c	/^int Zoltan_Color($/;"	f	typeref:typename:int
Zoltan_Color	zoltan/fort/fwrap.f90	/^interface Zoltan_Color$/;"	i	module:zoltan
Zoltan_Color_Set_Param	zoltan/coloring/coloring.c	/^int Zoltan_Color_Set_Param($/;"	f	typeref:typename:int
Zoltan_Color_Test	zoltan/coloring/color_test.c	/^int Zoltan_Color_Test($/;"	f	typeref:typename:int
Zoltan_Color_Test	zoltan/fort/fwrap.f90	/^interface Zoltan_Color_Test$/;"	i	module:zoltan
Zoltan_Comm	zoltan/include/zoltan_comm_cpp.h	/^  Zoltan_Comm (const Zoltan_Comm &plan) \/\/ Copy constructor$/;"	f	class:Zoltan_Comm
Zoltan_Comm	zoltan/include/zoltan_comm_cpp.h	/^  Zoltan_Comm()$/;"	f	class:Zoltan_Comm
Zoltan_Comm	zoltan/include/zoltan_comm_cpp.h	/^  Zoltan_Comm(const int &nvals, int *assign, const MPI_Comm &comm, $/;"	f	class:Zoltan_Comm
Zoltan_Comm	zoltan/include/zoltan_comm_cpp.h	/^class Zoltan_Comm {$/;"	c
Zoltan_Comm_Copy	zoltan/Utilities/Communication/comm_create.c	/^ZOLTAN_COMM_OBJ *Zoltan_Comm_Copy(ZOLTAN_COMM_OBJ *from)$/;"	f	typeref:typename:ZOLTAN_COMM_OBJ *
Zoltan_Comm_Copy_To	zoltan/Utilities/Communication/comm_create.c	/^int Zoltan_Comm_Copy_To(ZOLTAN_COMM_OBJ **toptr, ZOLTAN_COMM_OBJ *from)$/;"	f	typeref:typename:int
Zoltan_Comm_Create	zoltan/Utilities/Communication/comm_create.c	/^int Zoltan_Comm_Create($/;"	f	typeref:typename:int
Zoltan_Comm_Destroy	zoltan/Utilities/Communication/comm_destroy.c	/^int       Zoltan_Comm_Destroy($/;"	f	typeref:typename:int
Zoltan_Comm_Do	zoltan/Utilities/Communication/comm_do.c	/^int       Zoltan_Comm_Do($/;"	f	typeref:typename:int
Zoltan_Comm_Do_AlltoAll	zoltan/Utilities/Communication/comm_do.c	/^int       Zoltan_Comm_Do_AlltoAll($/;"	f	typeref:typename:int
Zoltan_Comm_Do_Post	zoltan/Utilities/Communication/comm_do.c	/^int       Zoltan_Comm_Do_Post($/;"	f	typeref:typename:int
Zoltan_Comm_Do_Reverse	zoltan/Utilities/Communication/comm_do_reverse.c	/^int Zoltan_Comm_Do_Reverse($/;"	f	typeref:typename:int
Zoltan_Comm_Do_Reverse_Post	zoltan/Utilities/Communication/comm_do_reverse.c	/^int       Zoltan_Comm_Do_Reverse_Post($/;"	f	typeref:typename:int
Zoltan_Comm_Do_Reverse_Wait	zoltan/Utilities/Communication/comm_do_reverse.c	/^int Zoltan_Comm_Do_Reverse_Wait($/;"	f	typeref:typename:int
Zoltan_Comm_Do_Wait	zoltan/Utilities/Communication/comm_do.c	/^int       Zoltan_Comm_Do_Wait($/;"	f	typeref:typename:int
Zoltan_Comm_Exchange_Sizes	zoltan/Utilities/Communication/comm_exchange_sizes.c	/^int       Zoltan_Comm_Exchange_Sizes($/;"	f	typeref:typename:int
Zoltan_Comm_Info	zoltan/Utilities/Communication/comm_info.c	/^int Zoltan_Comm_Info($/;"	f	typeref:typename:int
Zoltan_Comm_Invert_Map	zoltan/Utilities/Communication/comm_invert_map.c	/^int       Zoltan_Comm_Invert_Map($/;"	f	typeref:typename:int
Zoltan_Comm_Invert_Plan	zoltan/Utilities/Communication/comm_invert_plan.c	/^int Zoltan_Comm_Invert_Plan($/;"	f	typeref:typename:int
Zoltan_Comm_Obj	zoltan/Utilities/Communication/comm.h	/^struct Zoltan_Comm_Obj {	\/* data for mapping between decompositions *\/$/;"	s
Zoltan_Comm_Resize	zoltan/Utilities/Communication/comm_resize.c	/^int       Zoltan_Comm_Resize($/;"	f	typeref:typename:int
Zoltan_Comm_Sort_Ints	zoltan/Utilities/Communication/comm_sort_ints.c	/^int  Zoltan_Comm_Sort_Ints($/;"	f	typeref:typename:int
Zoltan_Compare_Indextypes	zoltan/tpls/verify_graph.c	/^static int Zoltan_Compare_Indextypes(const void *key, const void *arg)$/;"	f	typeref:typename:int	file:
Zoltan_Compute_Destinations	zoltan/fort/fwrap.f90	/^interface Zoltan_Compute_Destinations$/;"	i	module:zoltan
Zoltan_Compute_Destinations	zoltan/lb/lb_invert.c	/^int Zoltan_Compute_Destinations($/;"	f	typeref:typename:int
Zoltan_Copy	zoltan/fort/fwrap.f90	/^interface Zoltan_Copy$/;"	i	module:zoltan
Zoltan_Copy	zoltan/zz/zz_struct.c	/^ZZ *Zoltan_Copy(ZZ const *from)$/;"	f	typeref:typename:ZZ *
Zoltan_Copy_Params	zoltan/params/free_params.c	/^int Zoltan_Copy_Params(PARAM_LIST **to, PARAM_LIST const *from)$/;"	f	typeref:typename:int
Zoltan_Copy_To	zoltan/fort/fwrap.f90	/^interface Zoltan_Copy_To$/;"	i	module:zoltan
Zoltan_Copy_To	zoltan/zz/zz_struct.c	/^int Zoltan_Copy_To(ZZ *to, ZZ const *from)$/;"	f	typeref:typename:int
Zoltan_Create	zoltan/fort/fwrap.f90	/^interface Zoltan_Create$/;"	i	module:zoltan
Zoltan_Create	zoltan/zz/zz_struct.c	/^ZZ *Zoltan_Create(MPI_Comm communicator)$/;"	f	typeref:typename:ZZ *
Zoltan_Current	zoltan/fort/cwrap.c	/^static struct Zoltan_Struct *Zoltan_Current;$/;"	v	typeref:struct:Zoltan_Struct *	file:
Zoltan_Cyclic	zoltan/simple/cyclic.c	/^int Zoltan_Cyclic($/;"	f	typeref:typename:int
Zoltan_DD	zoltan/include/zoltan_dd_cpp.h	/^  Zoltan_DD (const Zoltan_DD &dd) \/\/ Copy constructor$/;"	f	class:Zoltan_DD
Zoltan_DD	zoltan/include/zoltan_dd_cpp.h	/^  Zoltan_DD()$/;"	f	class:Zoltan_DD
Zoltan_DD	zoltan/include/zoltan_dd_cpp.h	/^  Zoltan_DD(const MPI_Comm &comm, const int &num_gid, const int &num_lid, $/;"	f	class:Zoltan_DD
Zoltan_DD	zoltan/include/zoltan_dd_cpp.h	/^class Zoltan_DD {$/;"	c
Zoltan_DD_Copy	zoltan/Utilities/DDirectory/DD_Create.c	/^Zoltan_DD_Directory *Zoltan_DD_Copy(Zoltan_DD_Directory *from)$/;"	f	typeref:typename:Zoltan_DD_Directory *
Zoltan_DD_Copy_To	zoltan/Utilities/DDirectory/DD_Create.c	/^int Zoltan_DD_Copy_To(Zoltan_DD_Directory **toptr, Zoltan_DD_Directory *from)$/;"	f	typeref:typename:int
Zoltan_DD_Create	zoltan/Utilities/DDirectory/DD_Create.c	/^int Zoltan_DD_Create ($/;"	f	typeref:typename:int
Zoltan_DD_Destroy	zoltan/Utilities/DDirectory/DD_Destroy.c	/^void Zoltan_DD_Destroy (Zoltan_DD_Directory **dd)$/;"	f	typeref:typename:void
Zoltan_DD_Directory	zoltan/include/zoltan_dd.h	/^typedef struct Zoltan_DD_Struct Zoltan_DD_Directory;$/;"	t	typeref:struct:Zoltan_DD_Struct
Zoltan_DD_Find	zoltan/Utilities/DDirectory/DD_Find.c	/^int Zoltan_DD_Find ($/;"	f	typeref:typename:int
Zoltan_DD_GetLocalKeys	zoltan/Utilities/DDirectory/DD_Find.c	/^int Zoltan_DD_GetLocalKeys(Zoltan_DD_Directory *dd,$/;"	f	typeref:typename:int
Zoltan_DD_Hash2	zoltan/Utilities/DDirectory/DD_Hash2.c	/^unsigned int Zoltan_DD_Hash2(ZOLTAN_ID_PTR key, int num_id_entries,$/;"	f	typeref:typename:unsigned int
Zoltan_DD_Print	zoltan/Utilities/DDirectory/DD_Print.c	/^int Zoltan_DD_Print ($/;"	f	typeref:typename:int
Zoltan_DD_Remove	zoltan/Utilities/DDirectory/DD_Remove.c	/^int Zoltan_DD_Remove ($/;"	f	typeref:typename:int
Zoltan_DD_Set_Hash_Fn	zoltan/Utilities/DDirectory/DD_Set_Hash_Fn.c	/^int Zoltan_DD_Set_Hash_Fn ($/;"	f	typeref:typename:int
Zoltan_DD_Set_Neighbor_Hash_Fn1	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn1.c	/^int Zoltan_DD_Set_Neighbor_Hash_Fn1 ($/;"	f	typeref:typename:int
Zoltan_DD_Set_Neighbor_Hash_Fn2	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^int Zoltan_DD_Set_Neighbor_Hash_Fn2 ($/;"	f	typeref:typename:int
Zoltan_DD_Set_Neighbor_Hash_Fn3	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^int Zoltan_DD_Set_Neighbor_Hash_Fn3 ($/;"	f	typeref:typename:int
Zoltan_DD_Stats	zoltan/Utilities/DDirectory/DD_Stats.c	/^void Zoltan_DD_Stats ($/;"	f	typeref:typename:void
Zoltan_DD_Struct	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^struct Zoltan_DD_Struct {$/;"	s
Zoltan_DD_Update	zoltan/Utilities/DDirectory/DD_Update.c	/^int Zoltan_DD_Update ($/;"	f	typeref:typename:int
Zoltan_DD_default_cleanup	zoltan/Utilities/DDirectory/DD_Hash2.c	/^void Zoltan_DD_default_cleanup (void * hashdata)$/;"	f	typeref:typename:void
Zoltan_DOUBLE	zoltan/fort/ztypes.f90	/^   Zoltan_DOUBLE /;"	v	module:zoltan_types
Zoltan_Destroy	zoltan/fort/fwrap.f90	/^interface Zoltan_Destroy$/;"	i	module:zoltan
Zoltan_Destroy	zoltan/zz/zz_struct.c	/^void Zoltan_Destroy(ZZ **zz)$/;"	f	typeref:typename:void
Zoltan_Distribute_Cyclic	zoltan/matrix/matrix_distribute.c	/^int Zoltan_Distribute_Cyclic(ZOLTAN_GNO_TYPE edge_gno, ZOLTAN_GNO_TYPE vtx_gno, void* data, int /;"	f	typeref:typename:int
Zoltan_Distribute_Linear	zoltan/matrix/matrix_distribute.c	/^int Zoltan_Distribute_Linear(ZOLTAN_GNO_TYPE edge_gno, ZOLTAN_GNO_TYPE vtx_gno, void* data, int /;"	f	typeref:typename:int
Zoltan_Distribute_LinearY	zoltan/matrix/matrix_distribute.c	/^int Zoltan_Distribute_LinearY (ZZ * zz, PHGComm *layout)$/;"	f	typeref:typename:int
Zoltan_Distribute_Origin	zoltan/matrix/matrix_distribute.c	/^int Zoltan_Distribute_Origin(ZOLTAN_GNO_TYPE edge_gno, ZOLTAN_GNO_TYPE vtx_gno, void* data, int /;"	f	typeref:typename:int
Zoltan_Distribute_Partition	zoltan/matrix/matrix_distribute.c	/^int Zoltan_Distribute_Partition(ZOLTAN_GNO_TYPE edge_gno, ZOLTAN_GNO_TYPE vtx_gno, void* data, i/;"	f	typeref:typename:int
Zoltan_Distribute_Partition_Free	zoltan/matrix/matrix_distribute.c	/^Zoltan_Distribute_Partition_Free(void** dist)$/;"	f	typeref:typename:void
Zoltan_Distribute_Partition_Register	zoltan/matrix/matrix_distribute.c	/^void* Zoltan_Distribute_Partition_Register(ZZ* zz, int size, ZOLTAN_GNO_TYPE *yGNO, int *part, i/;"	f	typeref:typename:void *
Zoltan_Distribute_Set	zoltan/matrix/matrix_utils.c	/^Zoltan_Distribute_Set(Zoltan_matrix_2d* mat,$/;"	f	typeref:typename:int
Zoltan_Distribute_Square	zoltan/matrix/matrix_distribute.c	/^int Zoltan_Distribute_Square (ZZ * zz, PHGComm *layout)$/;"	f	typeref:typename:int
Zoltan_Distribute_layout	zoltan/matrix/matrix_distribute.c	/^Zoltan_Distribute_layout (ZZ *zz, const PHGComm * const inlayout,$/;"	f	typeref:typename:int
Zoltan_Divide_Machine	zoltan/ha/divide_machine.c	/^int Zoltan_Divide_Machine($/;"	f	typeref:typename:int
Zoltan_Divide_Parts	zoltan/ha/divide_machine.c	/^int Zoltan_Divide_Parts($/;"	f	typeref:typename:int
Zoltan_Edge_List_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Edge_List_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Edge_List_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Edge_List_Multi_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_FLOAT	zoltan/fort/ztypes.f90	/^   Zoltan_FLOAT /;"	v	module:zoltan_types
Zoltan_Filter_Params	zoltan/params/set_param.c	/^int      Zoltan_Filter_Params($/;"	f	typeref:typename:int
Zoltan_First_Border_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_First_Border_Obj_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_First_Coarse_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_First_Coarse_Obj_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_First_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_First_Obj_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_Fixed_Obj_List_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Fixed_Obj_List_Fort_Wrapper(void *data,$/;"	f	typeref:typename:void
Zoltan_Fn_Type	zoltan/include/zoltan.h	/^enum Zoltan_Fn_Type {$/;"	g
Zoltan_Fort_Free_int	zoltan/all/all_allo.c	/^static ZOLTAN_FORT_FREE_INT_FN *Zoltan_Fort_Free_int;$/;"	v	typeref:typename:ZOLTAN_FORT_FREE_INT_FN *	file:
Zoltan_Fort_Malloc_Set_Struct	zoltan/all/all_allo.c	/^static ZOLTAN_FORT_MALLOC_SET_STRUCT_FN *Zoltan_Fort_Malloc_Set_Struct;$/;"	v	typeref:typename:ZOLTAN_FORT_MALLOC_SET_STRUCT_FN *	file:
Zoltan_Fort_Malloc_int	zoltan/all/all_allo.c	/^static ZOLTAN_FORT_MALLOC_INT_FN *Zoltan_Fort_Malloc_int;$/;"	v	typeref:typename:ZOLTAN_FORT_MALLOC_INT_FN *	file:
Zoltan_Free	zoltan/Utilities/Memory/mem.c	/^void Zoltan_Free (void **ptr, char *filename, int lineno)$/;"	f	typeref:typename:void
Zoltan_Free_And_Reset_Dot_Structure	zoltan/rcb/shared.c	/^void Zoltan_Free_And_Reset_Dot_Structure(struct Dot_Struct *dots)$/;"	f	typeref:typename:void
Zoltan_Free_Params	zoltan/params/free_params.c	/^void Zoltan_Free_Params($/;"	f	typeref:typename:void
Zoltan_Free_Structures	zoltan/zz/zz_struct.c	/^static void Zoltan_Free_Structures($/;"	f	typeref:typename:void	file:
Zoltan_Free_Zoltan_Struct_Members	zoltan/zz/zz_struct.c	/^static void Zoltan_Free_Zoltan_Struct_Members(ZZ *zz)$/;"	f	typeref:typename:void	file:
Zoltan_G2LHash_Create	zoltan/coloring/g2l_hash.c	/^int Zoltan_G2LHash_Create(G2LHash *hash, int maxsize, ZOLTAN_GNO_TYPE base, int nlvtx)$/;"	f	typeref:typename:int
Zoltan_G2LHash_Destroy	zoltan/coloring/g2l_hash.c	/^int Zoltan_G2LHash_Destroy(G2LHash *hash)$/;"	f	typeref:typename:int
Zoltan_G2LHash_G2L	zoltan/coloring/g2l_hash.c	/^int Zoltan_G2LHash_G2L(G2LHash *hash, ZOLTAN_GNO_TYPE gno)$/;"	f	typeref:typename:int
Zoltan_G2LHash_Insert	zoltan/coloring/g2l_hash.c	/^int Zoltan_G2LHash_Insert(G2LHash *hash, ZOLTAN_GNO_TYPE gno)$/;"	f	typeref:typename:int
Zoltan_G2LHash_L2G	zoltan/coloring/g2l_hash.h	/^#define Zoltan_G2LHash_L2G(/;"	d
Zoltan_GenPrime	zoltan/coloring/g2l_hash.c	/^int Zoltan_GenPrime(int stopafter, int *prime_num)$/;"	f	typeref:typename:int
Zoltan_Generate_Files	zoltan/fort/fwrap.f90	/^interface Zoltan_Generate_Files$/;"	i	module:zoltan
Zoltan_Generate_Files	zoltan/zz/zz_gen_files.c	/^int Zoltan_Generate_Files(ZZ *zz, char *fname, int base_index,$/;"	f	typeref:typename:int
Zoltan_Geom_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Geom_Fort_Wrapper($/;"	f	typeref:typename:void
Zoltan_Geom_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Geom_Multi_Fort_Wrapper($/;"	f	typeref:typename:void
Zoltan_Get_Child_Order	zoltan/fort/fwrap.f90	/^interface Zoltan_Get_Child_Order$/;"	i	module:zoltan
Zoltan_Get_Coordinates	zoltan/zz/zz_coord.c	/^int Zoltan_Get_Coordinates($/;"	f	typeref:typename:int
Zoltan_Get_Distribution	zoltan/order/perm.c	/^int Zoltan_Get_Distribution(ZZ *zz, int **vtxdist)$/;"	f	typeref:typename:int
Zoltan_Get_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Get_Fn(ZZ *zz, ZOLTAN_FN_TYPE fn_type,$/;"	f	typeref:typename:int
Zoltan_Get_Hypergraph_From_Queries	zoltan/phg/phg_build_calls.c	/^int Zoltan_Get_Hypergraph_From_Queries($/;"	f	typeref:typename:int
Zoltan_Get_Num_Edges_Per_Obj	zoltan/tpls/build_graph.c	/^int Zoltan_Get_Num_Edges_Per_Obj($/;"	f	typeref:typename:int
Zoltan_Get_Obj_List	zoltan/zz/zz_obj_list.c	/^int Zoltan_Get_Obj_List($/;"	f	typeref:typename:int
Zoltan_Get_Obj_List_Special_Malloc	zoltan/zz/zz_obj_list.c	/^int Zoltan_Get_Obj_List_Special_Malloc($/;"	f	typeref:typename:int
Zoltan_Get_Processor_Graph	zoltan/order/perm.c	/^int Zoltan_Get_Processor_Graph(int *vtxdist, int p, int index)$/;"	f	typeref:typename:int
Zoltan_Get_Processor_Name	zoltan/ha/get_processor_name.c	/^int Zoltan_Get_Processor_Name($/;"	f	typeref:typename:int
Zoltan_Get_Struct_Addr	zoltan/fort/fwrap.f90	/^interface Zoltan_Get_Struct_Addr$/;"	i	module:zoltan
Zoltan_Graph	zoltan/tpls/third_library.c	/^int Zoltan_Graph($/;"	f	typeref:typename:int
Zoltan_Graph_Package_Set_Param	zoltan/tpls/third_library.c	/^int Zoltan_Graph_Package_Set_Param($/;"	f	typeref:typename:int
Zoltan_Graph_Queries	zoltan/phg/phg_build_calls.c	/^int Zoltan_Graph_Queries( ZZ *zz, $/;"	f	typeref:typename:int
Zoltan_HG_CS_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_HG_CS_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_HG_Check	zoltan/phg/phg_hypergraph.c	/^int Zoltan_HG_Check ($/;"	f	typeref:typename:int
Zoltan_HG_Create_Mirror	zoltan/phg/phg_hypergraph.c	/^int Zoltan_HG_Create_Mirror ($/;"	f	typeref:typename:int
Zoltan_HG_Edge_Wts_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_HG_Edge_Wts_Fort_Wrapper(void *data,$/;"	f	typeref:typename:void
Zoltan_HG_Get_Pins	zoltan/zz/zz_gen_files.c	/^static ZOLTAN_GNO_TYPE Zoltan_HG_Get_Pins(ZZ *zz, int *nEdges, int **edgeSize,$/;"	f	typeref:typename:ZOLTAN_GNO_TYPE	file:
Zoltan_HG_HGraph_Free	zoltan/phg/phg_hypergraph.c	/^int Zoltan_HG_HGraph_Free($/;"	f	typeref:typename:int
Zoltan_HG_HGraph_Init	zoltan/phg/phg_hypergraph.c	/^void Zoltan_HG_HGraph_Init($/;"	f	typeref:typename:void
Zoltan_HG_HGraph_Print	zoltan/phg/phg_hypergraph.c	/^void Zoltan_HG_HGraph_Print($/;"	f	typeref:typename:void
Zoltan_HG_Info	zoltan/phg/phg_hypergraph.c	/^int Zoltan_HG_Info ($/;"	f	typeref:typename:int
Zoltan_HG_Mirror	zoltan/phg/phg_hypergraph.c	/^void Zoltan_HG_Mirror($/;"	f	typeref:typename:void
Zoltan_HG_Print	zoltan/phg/phg_hypergraph.c	/^void Zoltan_HG_Print($/;"	f	typeref:typename:void
Zoltan_HG_Size_CS_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_HG_Size_CS_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_HG_Size_Edge_Wts_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_HG_Size_Edge_Wts_Fort_Wrapper(void *data, int *num_edges, int *ierr)$/;"	f	typeref:typename:void
Zoltan_HG_move_vertex	zoltan/phg/phg_refinement.c	/^int Zoltan_HG_move_vertex (HGraph *hg, int vertex, int sour, int dest,$/;"	f	typeref:typename:int
Zoltan_HGraph	zoltan/phg/phg_hypergraph.h	/^struct Zoltan_HGraph {$/;"	s
Zoltan_HSFC	zoltan/hsfc/hsfc.c	/^int Zoltan_HSFC($/;"	f	typeref:typename:int
Zoltan_HSFC_Box_Assign	zoltan/hsfc/hsfc_box_assign.c	/^int Zoltan_HSFC_Box_Assign ($/;"	f	typeref:typename:int
Zoltan_HSFC_Copy_Structure	zoltan/hsfc/hsfc.c	/^int Zoltan_HSFC_Copy_Structure(ZZ *toZZ, ZZ const *fromZZ)$/;"	f	typeref:typename:int
Zoltan_HSFC_Free_Structure	zoltan/hsfc/hsfc.c	/^void Zoltan_HSFC_Free_Structure (ZZ *zz)$/;"	f	typeref:typename:void
Zoltan_HSFC_Hilbert1d	zoltan/hsfc/hsfc_hilbert.c	/^void Zoltan_HSFC_Hilbert1d (ZZ *zz, double *coord, double key)$/;"	f	typeref:typename:void
Zoltan_HSFC_Hilbert2d	zoltan/hsfc/hsfc_hilbert.c	/^void Zoltan_HSFC_Hilbert2d (ZZ *zz, double *coord, double key)$/;"	f	typeref:typename:void
Zoltan_HSFC_Hilbert3d	zoltan/hsfc/hsfc_hilbert.c	/^void Zoltan_HSFC_Hilbert3d (ZZ *zz, double *coord, double key)$/;"	f	typeref:typename:void
Zoltan_HSFC_InvHilbert1d	zoltan/hsfc/hsfc_hilbert.c	/^double Zoltan_HSFC_InvHilbert1d (ZZ *zz, double *coord)$/;"	f	typeref:typename:double
Zoltan_HSFC_InvHilbert2d	zoltan/hsfc/hsfc_hilbert.c	/^double Zoltan_HSFC_InvHilbert2d (ZZ *zz, double *coord)$/;"	f	typeref:typename:double
Zoltan_HSFC_InvHilbert3d	zoltan/hsfc/hsfc_hilbert.c	/^double Zoltan_HSFC_InvHilbert3d (ZZ *zz, double *coord)$/;"	f	typeref:typename:double
Zoltan_HSFC_Point_Assign	zoltan/hsfc/hsfc_point_assign.c	/^int Zoltan_HSFC_Point_Assign ($/;"	f	typeref:typename:int
Zoltan_HSFC_Set_Param	zoltan/hsfc/hsfc.c	/^int Zoltan_HSFC_Set_Param (char *name, char *val)$/;"	f	typeref:typename:int
Zoltan_HSFC_compare	zoltan/hsfc/hsfc.c	/^int Zoltan_HSFC_compare (const void *key, const void *arg)$/;"	f	typeref:typename:int
Zoltan_HUND	zoltan/order/hund.c	/^int Zoltan_HUND($/;"	f	typeref:typename:int
Zoltan_Hash	zoltan/zz/zz_hash.c	/^unsigned int Zoltan_Hash(ZOLTAN_ID_PTR key, int num_id_entries, unsigned int n)$/;"	f	typeref:typename:unsigned int
Zoltan_Heap_Change_Value	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Change_Value (HEAP *h, ZOLTAN_GNO_TYPE element, float value)$/;"	f	typeref:typename:int
Zoltan_Heap_Check	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Check (HEAP *h)$/;"	f	typeref:typename:int
Zoltan_Heap_Clear	zoltan/zz/zz_heap.c	/^void Zoltan_Heap_Clear (HEAP *h)$/;"	f	typeref:typename:void
Zoltan_Heap_Count	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Count(/;"	d
Zoltan_Heap_Empty	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Empty(/;"	d
Zoltan_Heap_Extract	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Extract (HEAP *h, int element)$/;"	f	typeref:typename:int
Zoltan_Heap_Extract_Max	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Extract_Max (HEAP *h)$/;"	f	typeref:typename:int
Zoltan_Heap_Free	zoltan/zz/zz_heap.c	/^void Zoltan_Heap_Free (HEAP *h)$/;"	f	typeref:typename:void
Zoltan_Heap_Has_Elem	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Has_Elem(/;"	d
Zoltan_Heap_Init	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Init (ZZ *zz, HEAP *h, int space)$/;"	f	typeref:typename:int
Zoltan_Heap_Input	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Input (HEAP *h, int element, float value)$/;"	f	typeref:typename:int
Zoltan_Heap_Make	zoltan/zz/zz_heap.c	/^int Zoltan_Heap_Make (HEAP *h)$/;"	f	typeref:typename:int
Zoltan_Heap_Max_Value	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Max_Value(/;"	d
Zoltan_Heap_Not_Empty	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Not_Empty(/;"	d
Zoltan_Heap_Peek_Max	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Peek_Max(/;"	d
Zoltan_Heap_Value	zoltan/zz/zz_heap.h	/^#define Zoltan_Heap_Value(/;"	d
Zoltan_Help_Migrate	zoltan/fort/fwrap.f90	/^interface Zoltan_Help_Migrate$/;"	i	module:zoltan
Zoltan_Help_Migrate	zoltan/lb/lb_migrate.c	/^int Zoltan_Help_Migrate($/;"	f	typeref:typename:int
Zoltan_Help_Migrate	zoltan/lb/low_mem_lb_migrate.c	/^int Zoltan_Help_Migrate($/;"	f	typeref:typename:int
Zoltan_Hier	zoltan/hier/hier.c	/^int Zoltan_Hier($/;"	f	typeref:typename:int
Zoltan_Hier_Assist_Method	zoltan/hier/hier.c	/^static void Zoltan_Hier_Assist_Method($/;"	f	typeref:typename:void	file:
Zoltan_Hier_Assist_Num_Levels	zoltan/hier/hier.c	/^static int Zoltan_Hier_Assist_Num_Levels(void *data, int *ierr)$/;"	f	typeref:typename:int	file:
Zoltan_Hier_Assist_Part_Number	zoltan/hier/hier.c	/^static int Zoltan_Hier_Assist_Part_Number(void *data, int level, int *ierr)$/;"	f	typeref:typename:int	file:
Zoltan_Hier_Copy_Structure	zoltan/hier/hier_free_struct.c	/^int Zoltan_Hier_Copy_Structure($/;"	f	typeref:typename:int
Zoltan_Hier_Edge_List_Multi_Fn	zoltan/hier/hier.c	/^static void Zoltan_Hier_Edge_List_Multi_Fn($/;"	f	typeref:typename:void	file:
Zoltan_Hier_Free_Structure	zoltan/hier/hier_free_struct.c	/^void Zoltan_Hier_Free_Structure($/;"	f	typeref:typename:void
Zoltan_Hier_Geom_Multi_Fn	zoltan/hier/hier.c	/^static void Zoltan_Hier_Geom_Multi_Fn($/;"	f	typeref:typename:void	file:
Zoltan_Hier_Initialize_Params	zoltan/hier/hier.c	/^static int Zoltan_Hier_Initialize_Params(ZZ *zz, HierPartParams *hpp) {$/;"	f	typeref:typename:int	file:
Zoltan_Hier_Method_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Hier_Method_Fort_Wrapper(void *data, int level, $/;"	f	typeref:typename:void
Zoltan_Hier_Num_Edges_Multi_Fn	zoltan/hier/hier.c	/^static void Zoltan_Hier_Num_Edges_Multi_Fn($/;"	f	typeref:typename:void	file:
Zoltan_Hier_Num_Geom_Fn	zoltan/hier/hier.c	/^static int Zoltan_Hier_Num_Geom_Fn(void *data, int *ierr) {$/;"	f	typeref:typename:int	file:
Zoltan_Hier_Num_Levels_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Hier_Num_Levels_Fort_Wrapper(void *data, int *ierr)$/;"	f	typeref:typename:int
Zoltan_Hier_Num_Obj_Fn	zoltan/hier/hier.c	/^static int Zoltan_Hier_Num_Obj_Fn(void *data, int *ierr) {$/;"	f	typeref:typename:int	file:
Zoltan_Hier_Obj_List_Fn	zoltan/hier/hier.c	/^static void Zoltan_Hier_Obj_List_Fn($/;"	f	typeref:typename:void	file:
Zoltan_Hier_Part_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Hier_Part_Fort_Wrapper(void *data, int level, int *ierr)$/;"	f	typeref:typename:int
Zoltan_Hier_Set_Param	zoltan/hier/hier.c	/^int Zoltan_Hier_Set_Param($/;"	f	typeref:typename:int
Zoltan_Hypergraph_Queries	zoltan/phg/phg_build_calls.c	/^int Zoltan_Hypergraph_Queries(ZZ *zz, $/;"	f	typeref:typename:int
Zoltan_INT	zoltan/fort/ztypes.f90	/^   Zoltan_INT /;"	v	module:zoltan_types
Zoltan_INT_PTR	zoltan/fort/ztypes.f90	/^   Zoltan_INT_PTR /;"	v	module:zoltan_types
Zoltan_Init	zoltan/zz/zz_struct.c	/^static void Zoltan_Init(ZZ* zz)$/;"	f	typeref:typename:void	file:
Zoltan_Initialize	zoltan/fort/fwrap.f90	/^interface Zoltan_Initialize$/;"	i	module:zoltan
Zoltan_Initialize	zoltan/zz/zz_init.c	/^int Zoltan_Initialize(int argc, char **argv, float *ver)$/;"	f	typeref:typename:int
Zoltan_Initialize_Transformation	zoltan/zz/zz_coord.c	/^void Zoltan_Initialize_Transformation(ZZ_Transform *tr)$/;"	f	typeref:typename:void
Zoltan_Input_HG_Free	zoltan/phg/phg_hypergraph.c	/^int Zoltan_Input_HG_Free(ZHG *zhg)$/;"	f	typeref:typename:int
Zoltan_Input_HG_Init	zoltan/phg/phg_hypergraph.c	/^void Zoltan_Input_HG_Init(ZHG *zhg)$/;"	f	typeref:typename:void
Zoltan_Inverse_Perm	zoltan/order/perm.c	/^int Zoltan_Inverse_Perm($/;"	f	typeref:typename:int
Zoltan_Invert_Lists	zoltan/fort/fwrap.f90	/^interface Zoltan_Invert_Lists$/;"	i	module:zoltan
Zoltan_Invert_Lists	zoltan/lb/lb_invert.c	/^int Zoltan_Invert_Lists($/;"	f	typeref:typename:int
Zoltan_KVHash_Create	zoltan/coloring/g2l_hash.c	/^int Zoltan_KVHash_Create(KVHash *hash, int maxsize)$/;"	f	typeref:typename:int
Zoltan_KVHash_Destroy	zoltan/coloring/g2l_hash.c	/^int Zoltan_KVHash_Destroy(KVHash *hash)$/;"	f	typeref:typename:int
Zoltan_KVHash_GetValue	zoltan/coloring/g2l_hash.c	/^int Zoltan_KVHash_GetValue(KVHash *hash, ZOLTAN_GNO_TYPE key)    $/;"	f	typeref:typename:int
Zoltan_KVHash_Insert	zoltan/coloring/g2l_hash.c	/^int Zoltan_KVHash_Insert(KVHash *hash, ZOLTAN_GNO_TYPE key, int value)$/;"	f	typeref:typename:int
Zoltan_LB	zoltan/lb/lb_balance.c	/^static int Zoltan_LB($/;"	f	typeref:typename:int	file:
Zoltan_LB_Add_Part_Sizes_Weight	zoltan/tpls/preprocessing.c	/^static int Zoltan_LB_Add_Part_Sizes_Weight($/;"	f	typeref:typename:int	file:
Zoltan_LB_Balance	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Balance$/;"	i	module:zoltan
Zoltan_LB_Balance	zoltan/lb/lb_balance.c	/^int Zoltan_LB_Balance($/;"	f	typeref:typename:int
Zoltan_LB_Box_Assign	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Box_Assign$/;"	i	module:zoltan
Zoltan_LB_Box_Assign	zoltan/lb/lb_box_assign.c	/^int Zoltan_LB_Box_Assign ($/;"	f	typeref:typename:int
Zoltan_LB_Box_PP_Assign	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Box_PP_Assign$/;"	i	module:zoltan
Zoltan_LB_Box_PP_Assign	zoltan/lb/lb_box_assign.c	/^int Zoltan_LB_Box_PP_Assign ($/;"	f	typeref:typename:int
Zoltan_LB_Build_PartDist	zoltan/lb/lb_balance.c	/^int Zoltan_LB_Build_PartDist(ZZ *zz)$/;"	f	typeref:typename:int
Zoltan_LB_Build_ProcDist	zoltan/lb/lb_part2proc.c	/^static int Zoltan_LB_Build_ProcDist($/;"	f	typeref:typename:int	file:
Zoltan_LB_Copy_Struct	zoltan/lb/lb_copy.c	/^int Zoltan_LB_Copy_Struct(ZZ *toZZ, ZZ const *fromZZ)$/;"	f	typeref:typename:int
Zoltan_LB_Eval	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Eval$/;"	i	module:zoltan
Zoltan_LB_Eval	zoltan/lb/lb_eval.c	/^int Zoltan_LB_Eval(ZZ *zz, int print_stats, $/;"	f	typeref:typename:int
Zoltan_LB_Eval_Balance	zoltan/lb/lb_eval.c	/^int Zoltan_LB_Eval_Balance(ZZ *zzin, int print_stats, ZOLTAN_BALANCE_EVAL *eval)$/;"	f	typeref:typename:int
Zoltan_LB_Eval_Graph	zoltan/lb/lb_eval.c	/^int Zoltan_LB_Eval_Graph(ZZ *zzin, int print_stats, ZOLTAN_GRAPH_EVAL *graph)$/;"	f	typeref:typename:int
Zoltan_LB_Eval_HG	zoltan/lb/lb_eval.c	/^int Zoltan_LB_Eval_HG(ZZ *zzin, int print_stats, ZOLTAN_HG_EVAL *hg)$/;"	f	typeref:typename:int
Zoltan_LB_Eval_Print_Balance	zoltan/lb/lb_eval.c	/^void Zoltan_LB_Eval_Print_Balance(ZOLTAN_BALANCE_EVAL *lb)$/;"	f	typeref:typename:void
Zoltan_LB_Eval_Print_Graph	zoltan/lb/lb_eval.c	/^void Zoltan_LB_Eval_Print_Graph(ZOLTAN_GRAPH_EVAL *graph)$/;"	f	typeref:typename:void
Zoltan_LB_Eval_Print_HG	zoltan/lb/lb_eval.c	/^void Zoltan_LB_Eval_Print_HG(ZOLTAN_HG_EVAL *hg)$/;"	f	typeref:typename:void
Zoltan_LB_Free_Data	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Free_Data$/;"	i	module:zoltan
Zoltan_LB_Free_Data	zoltan/lb/lb_free.c	/^int Zoltan_LB_Free_Data($/;"	f	typeref:typename:int
Zoltan_LB_Free_Part	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Free_Part$/;"	i	module:zoltan
Zoltan_LB_Free_Part	zoltan/lb/lb_free.c	/^int Zoltan_LB_Free_Part($/;"	f	typeref:typename:int
Zoltan_LB_Free_Struct	zoltan/lb/lb_free.c	/^void Zoltan_LB_Free_Struct(struct Zoltan_LB_Struct *lb)$/;"	f	typeref:typename:void
Zoltan_LB_Get_Part_Sizes	zoltan/lb/lb_set_part_sizes.c	/^int Zoltan_LB_Get_Part_Sizes(ZZ *zz, int part_dim, float *part_sizes)$/;"	f	typeref:typename:int
Zoltan_LB_Init	zoltan/lb/lb_init.c	/^void Zoltan_LB_Init(struct Zoltan_LB_Struct *lb, int num_proc)$/;"	f	typeref:typename:void
Zoltan_LB_Method	zoltan/lb/lb_const.h	/^typedef enum Zoltan_LB_Method {$/;"	g
Zoltan_LB_Part_To_Proc	zoltan/lb/lb_part2proc.c	/^int Zoltan_LB_Part_To_Proc(ZZ *zz, int part, ZOLTAN_ID_PTR gid)$/;"	f	typeref:typename:int
Zoltan_LB_Partition	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Partition$/;"	i	module:zoltan
Zoltan_LB_Partition	zoltan/lb/lb_balance.c	/^int Zoltan_LB_Partition($/;"	f	typeref:typename:int
Zoltan_LB_Point_Assign	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Point_Assign$/;"	i	module:zoltan
Zoltan_LB_Point_Assign	zoltan/lb/lb_point_assign.c	/^int Zoltan_LB_Point_Assign ($/;"	f	typeref:typename:int
Zoltan_LB_Point_PP_Assign	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Point_PP_Assign$/;"	i	module:zoltan
Zoltan_LB_Point_PP_Assign	zoltan/lb/lb_point_assign.c	/^int Zoltan_LB_Point_PP_Assign ($/;"	f	typeref:typename:int
Zoltan_LB_Proc_To_Part	zoltan/lb/lb_part2proc.c	/^int Zoltan_LB_Proc_To_Part($/;"	f	typeref:typename:int
Zoltan_LB_Remap	zoltan/lb/lb_remap.c	/^int Zoltan_LB_Remap($/;"	f	typeref:typename:int
Zoltan_LB_Set_LB_Method	zoltan/lb/lb_set_method.c	/^int Zoltan_LB_Set_LB_Method(ZZ *zz, char *method_name)$/;"	f	typeref:typename:int
Zoltan_LB_Set_Part_Sizes	zoltan/fort/fwrap.f90	/^interface Zoltan_LB_Set_Part_Sizes$/;"	i	module:zoltan
Zoltan_LB_Set_Part_Sizes	zoltan/lb/lb_set_part_sizes.c	/^int Zoltan_LB_Set_Part_Sizes(ZZ *zz, int global_num,$/;"	f	typeref:typename:int
Zoltan_LB_Special_Free_Part	zoltan/lb/lb_free.c	/^int Zoltan_LB_Special_Free_Part($/;"	f	typeref:typename:int
Zoltan_LB_Struct	zoltan/lb/lb_const.h	/^struct Zoltan_LB_Struct {$/;"	s
Zoltan_LocalHSFC_Order	zoltan/order/hsfcOrder.c	/^int Zoltan_LocalHSFC_Order($/;"	f	typeref:typename:int
Zoltan_Low_Mem_Migrate	zoltan/lb/low_mem_lb_migrate.c	/^int Zoltan_Low_Mem_Migrate($/;"	f	typeref:typename:int
Zoltan_Malloc	zoltan/Utilities/Memory/mem.c	/^double *Zoltan_Malloc(size_t n, char *filename, int lineno)$/;"	f	typeref:typename:double *
Zoltan_Malloc_Num	zoltan/Utilities/Memory/mem.c	/^int       Zoltan_Malloc_Num(void)$/;"	f	typeref:typename:int
Zoltan_Map_Add	zoltan/zz/zz_map.c	/^int Zoltan_Map_Add(ZZ *zz, ZOLTAN_MAP* map, char *key, intptr_t data) {$/;"	f	typeref:typename:int
Zoltan_Map_Create	zoltan/zz/zz_map.c	/^ZOLTAN_MAP* Zoltan_Map_Create(ZZ *zz,     \/* just need this for error messages *\/$/;"	f	typeref:typename:ZOLTAN_MAP *
Zoltan_Map_Destroy	zoltan/zz/zz_map.c	/^int Zoltan_Map_Destroy(ZZ *zz, ZOLTAN_MAP** map)$/;"	f	typeref:typename:int
Zoltan_Map_Entry	zoltan/zz/zz_util_const.h	/^struct Zoltan_Map_Entry{$/;"	s
Zoltan_Map_Find	zoltan/zz/zz_map.c	/^int Zoltan_Map_Find(ZZ *zz, ZOLTAN_MAP* map, char *key, intptr_t *data)$/;"	f	typeref:typename:int
Zoltan_Map_Find_Add	zoltan/zz/zz_map.c	/^int Zoltan_Map_Find_Add(ZZ *zz, ZOLTAN_MAP* map, char *key, intptr_t datain, intptr_t *dataout)$/;"	f	typeref:typename:int
Zoltan_Map_First	zoltan/zz/zz_map.c	/^int Zoltan_Map_First(ZZ *zz, ZOLTAN_MAP* map, char **key, intptr_t *data)$/;"	f	typeref:typename:int
Zoltan_Map_List	zoltan/zz/zz_util_const.h	/^struct Zoltan_Map_List{$/;"	s
Zoltan_Map_Next	zoltan/zz/zz_map.c	/^int Zoltan_Map_Next(ZZ *zz, ZOLTAN_MAP* map, char **key, intptr_t *data)$/;"	f	typeref:typename:int
Zoltan_Map_Size	zoltan/zz/zz_map.c	/^int Zoltan_Map_Size(ZZ *zz, ZOLTAN_MAP* map)$/;"	f	typeref:typename:int
Zoltan_Matrix2d_Distribute	zoltan/matrix/matrix_distribute.c	/^Zoltan_Matrix2d_Distribute (ZZ* zz, Zoltan_matrix inmat, \/* Cannot be const as we can share it /;"	f	typeref:typename:int
Zoltan_Matrix2d_Free	zoltan/matrix/matrix_utils.c	/^Zoltan_Matrix2d_Free(Zoltan_matrix_2d *m)$/;"	f	typeref:typename:void
Zoltan_Matrix2d_Init	zoltan/matrix/matrix_utils.c	/^Zoltan_Matrix2d_Init(Zoltan_matrix_2d *m)$/;"	f	typeref:typename:void
Zoltan_Matrix2d_adjproc	zoltan/matrix/matrix_utils.c	/^Zoltan_Matrix2d_adjproc (ZZ* zz, const Zoltan_matrix_2d * const mat, int **adjproc)$/;"	f	typeref:typename:int
Zoltan_Matrix_Build	zoltan/matrix/matrix_build.c	/^Zoltan_Matrix_Build (ZZ* zz, Zoltan_matrix_options *opt, Zoltan_matrix* matrix,$/;"	f	typeref:typename:int
Zoltan_Matrix_Complete	zoltan/matrix/matrix_utils.c	/^Zoltan_Matrix_Complete(ZZ* zz,Zoltan_matrix* m)$/;"	f	typeref:typename:int
Zoltan_Matrix_Construct_CSR	zoltan/matrix/matrix_operations.c	/^Zoltan_Matrix_Construct_CSR(ZZ *zz, int size, Zoltan_Arc *arcs, float* pinwgt,$/;"	f	typeref:typename:int
Zoltan_Matrix_Delete_nnz	zoltan/matrix/matrix_operations.c	/^Zoltan_Matrix_Delete_nnz(ZZ* zz, Zoltan_matrix* m,$/;"	f	typeref:typename:int
Zoltan_Matrix_Free	zoltan/matrix/matrix_utils.c	/^Zoltan_Matrix_Free(Zoltan_matrix *m, int delete_flag)$/;"	f	typeref:typename:void
Zoltan_Matrix_Get_GID	zoltan/matrix/matrix_utils.c	/^ZOLTAN_ID_PTR Zoltan_Matrix_Get_GID(ZZ* zz, Zoltan_matrix* m)$/;"	f	typeref:typename:ZOLTAN_ID_PTR
Zoltan_Matrix_Mark_Diag	zoltan/matrix/matrix_operations.c	/^Zoltan_Matrix_Mark_Diag(ZZ* zz, const Zoltan_matrix* const m,$/;"	f	typeref:typename:int
Zoltan_Matrix_Permute	zoltan/matrix/matrix_operations.c	/^Zoltan_Matrix_Permute(ZZ* zz, Zoltan_matrix *m, ZOLTAN_GNO_TYPE * perm_y)$/;"	f	typeref:typename:int
Zoltan_Matrix_Remove_DupArcs	zoltan/matrix/matrix_operations.c	/^Zoltan_Matrix_Remove_DupArcs(ZZ *zz, int size, Zoltan_Arc *arcs, float* pinwgt,$/;"	f	typeref:typename:int
Zoltan_Matrix_Remove_Duplicates	zoltan/matrix/matrix_operations.c	/^Zoltan_Matrix_Remove_Duplicates(ZZ *zz, Zoltan_matrix inmat, Zoltan_matrix *outmat)$/;"	f	typeref:typename:int
Zoltan_Matrix_Reset	zoltan/matrix/matrix_utils.c	/^Zoltan_Matrix_Reset(Zoltan_matrix* m)$/;"	f	typeref:typename:void
Zoltan_Matrix_Sym	zoltan/matrix/matrix_sym.c	/^Zoltan_Matrix_Sym(ZZ* zz, Zoltan_matrix *matrix, int bipartite)$/;"	f	typeref:typename:int
Zoltan_Matrix_Vertex_Info	zoltan/matrix/matrix_build.c	/^Zoltan_Matrix_Vertex_Info(ZZ* zz, const Zoltan_matrix * const m,$/;"	f	typeref:typename:int
Zoltan_Memory_Debug	zoltan/Utilities/Memory/mem.c	/^void Zoltan_Memory_Debug(int new_level) {$/;"	f	typeref:typename:void
Zoltan_Memory_Get_Debug	zoltan/Utilities/Memory/mem.c	/^int Zoltan_Memory_Get_Debug() {$/;"	f	typeref:typename:int
Zoltan_Memory_Reset	zoltan/Utilities/Memory/mem.c	/^void Zoltan_Memory_Reset (int type)$/;"	f	typeref:typename:void
Zoltan_Memory_Stats	zoltan/Utilities/Memory/mem.c	/^void Zoltan_Memory_Stats()$/;"	f	typeref:typename:void
Zoltan_Memory_Stats	zoltan/fort/fwrap.f90	/^interface Zoltan_Memory_Stats$/;"	i	module:zoltan
Zoltan_Memory_Usage	zoltan/Utilities/Memory/mem.c	/^size_t Zoltan_Memory_Usage (int type)$/;"	f	typeref:typename:size_t
Zoltan_Mid_Migrate_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Mid_Migrate_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Mid_Migrate_PP_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Mid_Migrate_PP_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Migrate	zoltan/fort/fwrap.f90	/^interface Zoltan_Migrate$/;"	i	module:zoltan
Zoltan_Migrate	zoltan/lb/lb_migrate.c	/^int Zoltan_Migrate($/;"	f	typeref:typename:int
Zoltan_Migrate	zoltan/lb/low_mem_lb_migrate.c	/^int Zoltan_Migrate($/;"	f	typeref:typename:int
Zoltan_Migrate_Init	zoltan/lb/lb_init.c	/^void Zoltan_Migrate_Init(struct Zoltan_Migrate_Struct *mig)$/;"	f	typeref:typename:void
Zoltan_Migrate_Struct	zoltan/lb/lb_const.h	/^struct Zoltan_Migrate_Struct {$/;"	s
Zoltan_Multifree	zoltan/Utilities/Memory/mem.c	/^void Zoltan_Multifree(char *filename, int lineno, int n, ...)$/;"	f	typeref:typename:void
Zoltan_Multifree	zoltan/Utilities/Memory/mem.c	/^void Zoltan_Multifree(va_alist)$/;"	f	typeref:typename:void
Zoltan_NULL_PTR	zoltan/fort/ztypes.f90	/^   Zoltan_NULL_PTR /;"	v	module:zoltan_types
Zoltan_Next_Border_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Next_Border_Obj_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_Next_Coarse_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Next_Coarse_Obj_Fort_Wrapper(void *data, int num_gid_entries, $/;"	f	typeref:typename:int
Zoltan_Next_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Next_Obj_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_Num_Border_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Border_Obj_Fort_Wrapper(void *data, int nbor_proc, int *ierr)$/;"	f	typeref:typename:int
Zoltan_Num_Child_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Child_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_Num_Coarse_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Coarse_Obj_Fort_Wrapper(void *data, int *ierr)$/;"	f	typeref:typename:int
Zoltan_Num_Edges_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Edges_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_Num_Edges_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Num_Edges_Multi_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Num_Fixed_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Fixed_Obj_Fort_Wrapper(void *data, int *ierr)$/;"	f	typeref:typename:int
Zoltan_Num_Geom_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Geom_Fort_Wrapper(void *data, int *ierr)$/;"	f	typeref:typename:int
Zoltan_Num_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Num_Obj_Fort_Wrapper(void *data, int *ierr)$/;"	f	typeref:typename:int
Zoltan_OVIS_Set_Param	zoltan/ha/ha_ovis.c	/^int Zoltan_OVIS_Set_Param($/;"	f	typeref:typename:int
Zoltan_OVIS_Setup	zoltan/ha/ha_ovis.c	/^int Zoltan_OVIS_Setup($/;"	f	typeref:typename:int
Zoltan_Obj_List_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Obj_List_Fort_Wrapper(void *data,$/;"	f	typeref:typename:void
Zoltan_Obj_Size_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Obj_Size_Fort_Wrapper(void *data, int num_gid_entries,$/;"	f	typeref:typename:int
Zoltan_Obj_Size_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Obj_Size_Multi_Fort_Wrapper($/;"	f	typeref:typename:void
Zoltan_Order	zoltan/fort/fwrap.f90	/^interface Zoltan_Order$/;"	i	module:zoltan
Zoltan_Order	zoltan/order/order.c	/^int Zoltan_Order ($/;"	f	typeref:typename:int
Zoltan_Order_Create	zoltan/order/order_struct.c	/^int Zoltan_Order_Create(ZOS **order_info, ZZ *zz)$/;"	f	typeref:typename:int
Zoltan_Order_Destroy	zoltan/order/order_struct.c	/^int Zoltan_Order_Destroy(ZOS **order_info)$/;"	f	typeref:typename:int
Zoltan_Order_Free_Struct	zoltan/order/order_tools.c	/^void Zoltan_Order_Free_Struct(struct Zoltan_Order_Struct *order)$/;"	f	typeref:typename:void
Zoltan_Order_Get_Block_Bounds	zoltan/order/order.c	/^int Zoltan_Order_Get_Block_Bounds($/;"	f	typeref:typename:int
Zoltan_Order_Get_Block_Leaves	zoltan/order/order.c	/^void Zoltan_Order_Get_Block_Leaves($/;"	f	typeref:typename:void
Zoltan_Order_Get_Block_Parent	zoltan/order/order.c	/^int Zoltan_Order_Get_Block_Parent($/;"	f	typeref:typename:int
Zoltan_Order_Get_Block_Size	zoltan/order/order.c	/^int Zoltan_Order_Get_Block_Size($/;"	f	typeref:typename:int
Zoltan_Order_Get_Num_Blocks	zoltan/order/order.c	/^int Zoltan_Order_Get_Num_Blocks($/;"	f	typeref:typename:int
Zoltan_Order_Get_Num_Leaves	zoltan/order/order.c	/^int Zoltan_Order_Get_Num_Leaves($/;"	f	typeref:typename:int
Zoltan_Order_Init_Tree	zoltan/order/order_tools.c	/^int  Zoltan_Order_Init_Tree (struct Zoltan_Order_Struct *order, int blocknbr, int leavesnbr)$/;"	f	typeref:typename:int
Zoltan_Order_Options	zoltan/order/order_const.h	/^struct Zoltan_Order_Options {$/;"	s
Zoltan_Order_Set_Param	zoltan/order/order.c	/^int Zoltan_Order_Set_Param($/;"	f	typeref:typename:int
Zoltan_Order_Struct	zoltan/order/order_const.h	/^struct Zoltan_Order_Struct {$/;"	s
Zoltan_Order_Test	zoltan/driver/order_test.c	/^int Zoltan_Order_Test($/;"	f	typeref:typename:int
Zoltan_PHG	zoltan/phg/phg.c	/^int Zoltan_PHG($/;"	f	typeref:typename:int
Zoltan_PHGComm_Destroy	zoltan/phg/phg_comm.c	/^Zoltan_PHGComm_Destroy(PHGComm* comm)$/;"	f	typeref:typename:void
Zoltan_PHGComm_Init	zoltan/phg/phg_comm.c	/^Zoltan_PHGComm_Init(PHGComm* comm)$/;"	f	typeref:typename:void
Zoltan_PHG_2ways_hyperedge_partition	zoltan/phg/phg_two_ways.c	/^Zoltan_PHG_2ways_hyperedge_partition ($/;"	f	typeref:typename:int
Zoltan_PHG_Add_Repart_Data	zoltan/phg/phg_build.c	/^static int Zoltan_PHG_Add_Repart_Data($/;"	f	typeref:typename:int	file:
Zoltan_PHG_Build_Hypergraph	zoltan/phg/phg_build.c	/^int Zoltan_PHG_Build_Hypergraph($/;"	f	typeref:typename:int
Zoltan_PHG_CoarsePartition	zoltan/phg/phg_serialpartition.c	/^int Zoltan_PHG_CoarsePartition($/;"	f	typeref:typename:int
Zoltan_PHG_Coarsening	zoltan/phg/phg_coarse.c	/^int Zoltan_PHG_Coarsening$/;"	f	typeref:typename:int
Zoltan_PHG_Compute_Balance	zoltan/phg/phg_Vcycle.c	/^double Zoltan_PHG_Compute_Balance ($/;"	f	typeref:typename:double
Zoltan_PHG_Compute_ConCut	zoltan/phg/phg_Vcycle.c	/^double Zoltan_PHG_Compute_ConCut($/;"	f	typeref:typename:double
Zoltan_PHG_Compute_NetCut	zoltan/phg/phg_Vcycle.c	/^double Zoltan_PHG_Compute_NetCut($/;"	f	typeref:typename:double
Zoltan_PHG_Copy_Structure	zoltan/phg/phg_tree.c	/^int Zoltan_PHG_Copy_Structure(ZZ *to, ZZ const *from)$/;"	f	typeref:typename:int
Zoltan_PHG_Cuts	zoltan/phg/phg_build.c	/^int Zoltan_PHG_Cuts($/;"	f	typeref:typename:int
Zoltan_PHG_Fill_Hypergraph	zoltan/phg/phg_build.c	/^int Zoltan_PHG_Fill_Hypergraph($/;"	f	typeref:typename:int
Zoltan_PHG_Find_Root	zoltan/phg/phg_util.c	/^void Zoltan_PHG_Find_Root($/;"	f	typeref:typename:void
Zoltan_PHG_Free_Hypergraph_Data	zoltan/phg/phg.c	/^void Zoltan_PHG_Free_Hypergraph_Data(ZHG *zoltan_hg)$/;"	f	typeref:typename:void
Zoltan_PHG_Free_Structure	zoltan/phg/phg_tree.c	/^void Zoltan_PHG_Free_Structure(ZZ *zz)$/;"	f	typeref:typename:void
Zoltan_PHG_GIDs_to_global_numbers	zoltan/phg/phg_build_calls.c	/^int Zoltan_PHG_GIDs_to_global_numbers(ZZ *zz, ZOLTAN_GNO_TYPE *gnos, int len, int randomize,$/;"	f	typeref:typename:int
Zoltan_PHG_Gather_To_All_Procs	zoltan/phg/phg_gather.c	/^int Zoltan_PHG_Gather_To_All_Procs($/;"	f	typeref:typename:int
Zoltan_PHG_Gno_To_Proc_Block	zoltan/phg/phg_distrib.c	/^int Zoltan_PHG_Gno_To_Proc_Block($/;"	f	typeref:typename:int
Zoltan_PHG_Initialize_Params	zoltan/phg/phg.c	/^int Zoltan_PHG_Initialize_Params($/;"	f	typeref:typename:int
Zoltan_PHG_LB_Data	zoltan/phg/phg_tree.h	/^} Zoltan_PHG_LB_Data;$/;"	t	typeref:struct:Zoltan_PHG_LB_Data_
Zoltan_PHG_LB_Data_	zoltan/phg/phg_tree.h	/^typedef struct Zoltan_PHG_LB_Data_ {$/;"	s
Zoltan_PHG_LB_Data_alloc	zoltan/phg/phg_tree.c	/^Zoltan_PHG_LB_Data_alloc()$/;"	f	typeref:typename:void *
Zoltan_PHG_LB_Data_free_timers	zoltan/phg/phg_tree.c	/^Zoltan_PHG_LB_Data_free_timers(ZZ* zz)$/;"	f	typeref:typename:void
Zoltan_PHG_LB_Data_free_tree	zoltan/phg/phg_tree.c	/^Zoltan_PHG_LB_Data_free_tree(ZZ* zz)$/;"	f	typeref:typename:void
Zoltan_PHG_LB_Data_timers	zoltan/phg/phg_tree.c	/^Zoltan_PHG_LB_Data_timers(ZZ const * zz)$/;"	f	typeref:struct:phg_timer_indices *
Zoltan_PHG_LB_Data_tree	zoltan/phg/phg_tree.c	/^Zoltan_PHG_LB_Data_tree(ZZ const * zz)$/;"	f	typeref:typename:Zoltan_PHG_Tree *
Zoltan_PHG_LoadBalStat	zoltan/phg/phg_util.c	/^int Zoltan_PHG_LoadBalStat(ZZ *zz, HGraph *hg)$/;"	f	typeref:typename:int
Zoltan_PHG_Matching	zoltan/phg/phg_match.c	/^int Zoltan_PHG_Matching ($/;"	f	typeref:typename:int
Zoltan_PHG_Output_Parts	zoltan/phg/phg.c	/^static int Zoltan_PHG_Output_Parts ($/;"	f	typeref:typename:int	file:
Zoltan_PHG_PaToH	zoltan/phg/phg_patoh.c	/^int Zoltan_PHG_PaToH($/;"	f	typeref:typename:int
Zoltan_PHG_ParKway	zoltan/phg/phg_parkway.c	/^int Zoltan_PHG_ParKway($/;"	f	typeref:typename:int
Zoltan_PHG_Partition	zoltan/phg/phg_Vcycle.c	/^int Zoltan_PHG_Partition ($/;"	f	typeref:typename:int
Zoltan_PHG_Plot	zoltan/phg/phg_plot.c	/^void Zoltan_PHG_Plot($/;"	f	typeref:typename:void
Zoltan_PHG_Plot_2D_Distrib	zoltan/phg/phg_plot.c	/^void Zoltan_PHG_Plot_2D_Distrib($/;"	f	typeref:typename:void
Zoltan_PHG_Redistribute	zoltan/phg/phg_distrib.c	/^int Zoltan_PHG_Redistribute($/;"	f	typeref:typename:int
Zoltan_PHG_Redistribute_Hypergraph	zoltan/phg/phg_distrib.c	/^static int Zoltan_PHG_Redistribute_Hypergraph($/;"	f	typeref:typename:int	file:
Zoltan_PHG_Refinement	zoltan/phg/phg_refinement.c	/^int Zoltan_PHG_Refinement (ZZ *zz, HGraph *hg, int p, float *part_sizes, Partition part,$/;"	f	typeref:typename:int
Zoltan_PHG_Remove_Repart_Data	zoltan/phg/phg_build.c	/^int Zoltan_PHG_Remove_Repart_Data($/;"	f	typeref:typename:int
Zoltan_PHG_Return_Lists	zoltan/phg/phg.c	/^static int Zoltan_PHG_Return_Lists ($/;"	f	typeref:typename:int	file:
Zoltan_PHG_Scale_Edges	zoltan/phg/phg_scale.c	/^int Zoltan_PHG_Scale_Edges (ZZ *zz, HGraph *hg, float *new_ewgt, $/;"	f	typeref:typename:int
Zoltan_PHG_Scale_Vtx	zoltan/phg/phg_scale.c	/^int Zoltan_PHG_Scale_Vtx (ZZ *zz, HGraph *hg, PHGPartParams *hgp)$/;"	f	typeref:typename:int
Zoltan_PHG_Set_2D_Proc_Distrib	zoltan/phg/phg.c	/^int Zoltan_PHG_Set_2D_Proc_Distrib($/;"	f	typeref:typename:int
Zoltan_PHG_Set_CoarsePartition_Fn	zoltan/phg/phg_serialpartition.c	/^ZOLTAN_PHG_COARSEPARTITION_FN *Zoltan_PHG_Set_CoarsePartition_Fn($/;"	f	typeref:typename:ZOLTAN_PHG_COARSEPARTITION_FN *
Zoltan_PHG_Set_Matching_Fn	zoltan/phg/phg_match.c	/^int Zoltan_PHG_Set_Matching_Fn (PHGPartParams *hgp)$/;"	f	typeref:typename:int
Zoltan_PHG_Set_Param	zoltan/phg/phg.c	/^int Zoltan_PHG_Set_Param($/;"	f	typeref:typename:int
Zoltan_PHG_Set_Part_Options	zoltan/phg/phg_Vcycle.c	/^int Zoltan_PHG_Set_Part_Options (ZZ *zz, PHGPartParams *hgp)$/;"	f	typeref:typename:int
Zoltan_PHG_Set_Refinement_Fn	zoltan/phg/phg_refinement.c	/^ZOLTAN_PHG_REFINEMENT_FN *Zoltan_PHG_Set_Refinement_Fn(char *str)$/;"	f	typeref:typename:ZOLTAN_PHG_REFINEMENT_FN *
Zoltan_PHG_Timers_copy	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Timers_copy(ZZ* zz, struct phg_timer_indices* ftimers)$/;"	f	typeref:typename:int
Zoltan_PHG_Timers_init	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Timers_init(ZZ* zz)$/;"	f	typeref:typename:int
Zoltan_PHG_Tree	zoltan/phg/phg_tree.h	/^} Zoltan_PHG_Tree;$/;"	t	typeref:struct:Zoltan_PHG_Tree_
Zoltan_PHG_Tree_	zoltan/phg/phg_tree.h	/^typedef struct Zoltan_PHG_Tree_ {$/;"	s
Zoltan_PHG_Tree_Set	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Tree_Set(ZZ* zz, int father, int lo, int hi)$/;"	f	typeref:typename:void
Zoltan_PHG_Tree_centralize	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Tree_centralize(ZZ *zz)$/;"	f	typeref:typename:int
Zoltan_PHG_Tree_copy	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Tree_copy(ZZ* zz, Zoltan_PHG_Tree* ftree)$/;"	f	typeref:typename:int
Zoltan_PHG_Tree_create	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Tree_create(int part_number, ZZ* zz)$/;"	f	typeref:typename:int
Zoltan_PHG_Tree_init	zoltan/phg/phg_tree.c	/^Zoltan_PHG_Tree_init(Zoltan_PHG_Tree* tree)$/;"	f	typeref:typename:int
Zoltan_PHG_Vertex_Visit_Order	zoltan/phg/phg_order.c	/^int Zoltan_PHG_Vertex_Visit_Order($/;"	f	typeref:typename:int
Zoltan_PHG_compute_esize	zoltan/phg/phg_match.c	/^static int Zoltan_PHG_compute_esize($/;"	f	typeref:typename:int	file:
Zoltan_PHG_errexit	zoltan/phg/phg_util.c	/^void Zoltan_PHG_errexit(char *f_str,...)$/;"	f	typeref:typename:void
Zoltan_PHG_isPrime	zoltan/phg/phg_util.c	/^int Zoltan_PHG_isPrime(int n)$/;"	f	typeref:typename:int
Zoltan_PHG_match_isolated	zoltan/phg/phg_match.c	/^static int Zoltan_PHG_match_isolated($/;"	f	typeref:typename:int	file:
Zoltan_PHG_rdivide	zoltan/phg/phg_rdivide.c	/^int Zoltan_PHG_rdivide($/;"	f	typeref:typename:int
Zoltan_PHG_uMe	zoltan/phg/phg_util.c	/^char *Zoltan_PHG_uMe(PHGComm *hgc)$/;"	f	typeref:typename:char *
Zoltan_PHG_uprintf	zoltan/phg/phg_util.c	/^void Zoltan_PHG_uprintf(PHGComm *hgc, char *f_str,...)$/;"	f	typeref:typename:void
Zoltan_PTR	zoltan/fort/ztypes.f90	/^type Zoltan_PTR$/;"	t	module:zoltan_types
Zoltan_PTR_LENGTH	zoltan/fort/ztypes.f90	/^integer, parameter :: Zoltan_PTR_LENGTH /;"	v	module:zoltan_types
Zoltan_Pack_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Pack_Obj_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Pack_Obj_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Pack_Obj_Multi_Fort_Wrapper($/;"	f	typeref:typename:void
Zoltan_ParMetis	zoltan/tpls/parmetis_interface.c	/^int Zoltan_ParMetis($/;"	f	typeref:typename:int
Zoltan_ParMetis_Order	zoltan/tpls/parmetis_interface.c	/^int Zoltan_ParMetis_Order($/;"	f	typeref:typename:int
Zoltan_ParMetis_Set_Param	zoltan/tpls/parmetis_interface.c	/^int Zoltan_ParMetis_Set_Param($/;"	f	typeref:typename:int
Zoltan_Parmetis_Parse	zoltan/tpls/parmetis_interface.c	/^static int Zoltan_Parmetis_Parse($/;"	f	typeref:typename:int	file:
Zoltan_PartDist_MPIOp	zoltan/lb/lb_balance.c	/^void Zoltan_PartDist_MPIOp($/;"	f	typeref:typename:void
Zoltan_Part_Fort_Wrapper	zoltan/fort/cwrap.c	/^int Zoltan_Part_Fort_Wrapper(void *data, $/;"	f	typeref:typename:int
Zoltan_Part_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Part_Multi_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Post_Migrate_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Post_Migrate_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Post_Migrate_PP_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Post_Migrate_PP_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Postprocess_FinalOutput	zoltan/tpls/postprocessing.c	/^Zoltan_Postprocess_FinalOutput (ZZ* zz, ZOLTAN_Third_Graph *gr,$/;"	f	typeref:typename:int
Zoltan_Postprocess_Graph	zoltan/tpls/postprocessing.c	/^int Zoltan_Postprocess_Graph($/;"	f	typeref:typename:int
Zoltan_Postprocess_Order	zoltan/tpls/postprocessing.c	/^Zoltan_Postprocess_Order (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Postprocess_Partition	zoltan/tpls/postprocessing.c	/^Zoltan_Postprocess_Partition (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Postprocess_UnScatter_Graph	zoltan/tpls/postprocessing.c	/^Zoltan_Postprocess_UnScatter_Graph (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Pre_Migrate_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Pre_Migrate_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Pre_Migrate_PP_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Pre_Migrate_PP_Fort_Wrapper(void *data, $/;"	f	typeref:typename:void
Zoltan_Preprocess_Add_Weight	zoltan/tpls/preprocessing.c	/^Zoltan_Preprocess_Add_Weight (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Preprocess_Extract_Geom	zoltan/tpls/preprocessing.c	/^Zoltan_Preprocess_Extract_Geom (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Preprocess_Extract_Vsize	zoltan/tpls/preprocessing.c	/^Zoltan_Preprocess_Extract_Vsize (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Preprocess_Graph	zoltan/tpls/preprocessing.c	/^int Zoltan_Preprocess_Graph($/;"	f	typeref:typename:int
Zoltan_Preprocess_Scale_Weights	zoltan/tpls/preprocessing.c	/^static int Zoltan_Preprocess_Scale_Weights($/;"	f	typeref:typename:int	file:
Zoltan_Preprocess_Scatter_Graph	zoltan/tpls/preprocessing.c	/^Zoltan_Preprocess_Scatter_Graph (ZZ *zz,$/;"	f	typeref:typename:int	file:
Zoltan_Preprocess_Timer	zoltan/tpls/preprocessing.c	/^int Zoltan_Preprocess_Timer(ZZ *zz, int *use_timers)$/;"	f	typeref:typename:int
Zoltan_Print_Assigned_Param_Vals	zoltan/params/assign_param_vals.c	/^static void Zoltan_Print_Assigned_Param_Vals($/;"	f	typeref:typename:void	file:
Zoltan_Print_Configuration	zoltan/params/key_params.c	/^void Zoltan_Print_Configuration(char *indent)$/;"	f	typeref:typename:void
Zoltan_Print_Key_Params	zoltan/params/key_params.c	/^void Zoltan_Print_Key_Params(ZZ const *zz)$/;"	f	typeref:typename:void
Zoltan_Print_Obj_List	zoltan/zz/zz_obj_list.c	/^int Zoltan_Print_Obj_List($/;"	f	typeref:typename:int
Zoltan_Print_Params	zoltan/params/print_params.c	/^void Zoltan_Print_Params($/;"	f	typeref:typename:void
Zoltan_Print_Stats	zoltan/par/par_stats.c	/^void Zoltan_Print_Stats (MPI_Comm communicator, int debug_proc, double x, char *msg)$/;"	f	typeref:typename:void
Zoltan_Print_Sync_End	zoltan/par/par_sync.c	/^void Zoltan_Print_Sync_End(MPI_Comm communicator, int do_print_line)$/;"	f	typeref:typename:void
Zoltan_Print_Sync_Start	zoltan/par/par_sync.c	/^void Zoltan_Print_Sync_Start(MPI_Comm communicator, int do_print_line)$/;"	f	typeref:typename:void
Zoltan_RB_Average_Cut	zoltan/par/par_average.c	/^double Zoltan_RB_Average_Cut($/;"	f	typeref:typename:double
Zoltan_RB_Box_Assign	zoltan/rcb/box_assign.c	/^int Zoltan_RB_Box_Assign($/;"	f	typeref:typename:int
Zoltan_RB_Build_Structure	zoltan/rcb/shared.c	/^int Zoltan_RB_Build_Structure($/;"	f	typeref:typename:int
Zoltan_RB_Candidates_Copy_Input	zoltan/rcb/shared.c	/^int Zoltan_RB_Candidates_Copy_Input($/;"	f	typeref:typename:int
Zoltan_RB_Candidates_Output	zoltan/rcb/shared.c	/^int Zoltan_RB_Candidates_Output($/;"	f	typeref:typename:int
Zoltan_RB_Create_Proc_List	zoltan/rcb/create_proc_list.c	/^int Zoltan_RB_Create_Proc_List($/;"	f	typeref:typename:int
Zoltan_RB_Gather	zoltan/rcb/create_proc_list.c	/^static void Zoltan_RB_Gather($/;"	f	typeref:typename:void	file:
Zoltan_RB_Point_Assign	zoltan/rcb/point_assign.c	/^int Zoltan_RB_Point_Assign($/;"	f	typeref:typename:int
Zoltan_RB_Print_All	zoltan/rcb/shared.c	/^void Zoltan_RB_Print_All($/;"	f	typeref:typename:void
Zoltan_RB_Remap	zoltan/rcb/shared.c	/^int Zoltan_RB_Remap($/;"	f	typeref:typename:int
Zoltan_RB_Return_Arguments	zoltan/rcb/shared.c	/^int Zoltan_RB_Return_Arguments($/;"	f	typeref:typename:int
Zoltan_RB_Send_Dots_less_memory	zoltan/rcb/shared.c	/^int Zoltan_RB_Send_Dots_less_memory($/;"	f	typeref:typename:int
Zoltan_RB_Send_Outgoing	zoltan/rcb/shared.c	/^int Zoltan_RB_Send_Outgoing($/;"	f	typeref:typename:int
Zoltan_RB_Send_To_Part	zoltan/rcb/shared.c	/^int Zoltan_RB_Send_To_Part($/;"	f	typeref:typename:int
Zoltan_RB_Tree_Gatherv	zoltan/rcb/shared.c	/^int Zoltan_RB_Tree_Gatherv($/;"	f	typeref:typename:int
Zoltan_RB_Use_IDs	zoltan/rcb/shared.c	/^int Zoltan_RB_Use_IDs(ZZ *zz)$/;"	f	typeref:typename:int
Zoltan_RB_bcast_doubles	zoltan/par/par_tflops_special.c	/^void Zoltan_RB_bcast_doubles($/;"	f	typeref:typename:void
Zoltan_RB_check_geom_input	zoltan/rcb/shared.c	/^int Zoltan_RB_check_geom_input($/;"	f	typeref:typename:int
Zoltan_RB_check_geom_output	zoltan/rcb/shared.c	/^int Zoltan_RB_check_geom_output($/;"	f	typeref:typename:int
Zoltan_RB_find_bisector	zoltan/par/par_bisect.c	/^int Zoltan_RB_find_bisector($/;"	f	typeref:typename:int
Zoltan_RB_find_median	zoltan/par/par_median.c	/^int Zoltan_RB_find_median($/;"	f	typeref:typename:int
Zoltan_RB_find_median_randomized	zoltan/par/par_median_randomized.c	/^int Zoltan_RB_find_median_randomized($/;"	f	typeref:typename:int
Zoltan_RB_gather_double	zoltan/par/par_tflops_special.c	/^void Zoltan_RB_gather_double($/;"	f	typeref:typename:void
Zoltan_RB_max_double	zoltan/par/par_tflops_special.c	/^void Zoltan_RB_max_double($/;"	f	typeref:typename:void
Zoltan_RB_median_merge	zoltan/par/par_median.c	/^void Zoltan_RB_median_merge(void *in, void *inout, int *len, MPI_Datatype *dptr)$/;"	f	typeref:typename:void
Zoltan_RB_reduce	zoltan/par/par_median.c	/^void Zoltan_RB_reduce($/;"	f	typeref:typename:void
Zoltan_RB_scan_double	zoltan/par/par_tflops_special.c	/^void Zoltan_RB_scan_double($/;"	f	typeref:typename:void
Zoltan_RB_stats	zoltan/rcb/shared.c	/^void Zoltan_RB_stats(ZZ *zz, double timetotal, struct Dot_Struct *dotpt,$/;"	f	typeref:typename:void
Zoltan_RB_sum_double	zoltan/par/par_tflops_special.c	/^void Zoltan_RB_sum_double($/;"	f	typeref:typename:void
Zoltan_RCB	zoltan/rcb/rcb.c	/^int Zoltan_RCB($/;"	f	typeref:typename:int
Zoltan_RCB_Box	zoltan/fort/fwrap.f90	/^interface Zoltan_RCB_Box$/;"	i	module:zoltan
Zoltan_RCB_Box	zoltan/rcb/rcb_box.c	/^int Zoltan_RCB_Box($/;"	f	typeref:typename:int
Zoltan_RCB_Build_Structure	zoltan/rcb/rcb_util.c	/^int Zoltan_RCB_Build_Structure(ZZ *zz, int *num_obj, int *max_obj, int wgtflag,$/;"	f	typeref:typename:int
Zoltan_RCB_Copy_Structure	zoltan/rcb/rcb_util.c	/^int Zoltan_RCB_Copy_Structure(ZZ *toZZ, ZZ const *fromZZ)$/;"	f	typeref:typename:int
Zoltan_RCB_Free_Structure	zoltan/rcb/rcb_util.c	/^void Zoltan_RCB_Free_Structure(ZZ *zz)$/;"	f	typeref:typename:void
Zoltan_RCB_Set_Param	zoltan/rcb/rcb.c	/^int Zoltan_RCB_Set_Param($/;"	f	typeref:typename:int
Zoltan_RCB_box_merge	zoltan/rcb/rcb.c	/^void Zoltan_RCB_box_merge(void *in, void *inout, int *len, MPI_Datatype *dptr)$/;"	f	typeref:typename:void
Zoltan_RIB	zoltan/rcb/rib.c	/^int Zoltan_RIB($/;"	f	typeref:typename:int
Zoltan_RIB_Build_Structure	zoltan/rcb/rib_util.c	/^int Zoltan_RIB_Build_Structure(ZZ *zz, int *num_obj, int *max_obj, int wgtflag,$/;"	f	typeref:typename:int
Zoltan_RIB_Copy_Structure	zoltan/rcb/rib_util.c	/^int Zoltan_RIB_Copy_Structure(ZZ *toZZ, ZZ const *fromZZ)$/;"	f	typeref:typename:int
Zoltan_RIB_Free_Structure	zoltan/rcb/rib_util.c	/^void Zoltan_RIB_Free_Structure(ZZ *zz)$/;"	f	typeref:typename:void
Zoltan_RIB_Set_Param	zoltan/rcb/rib.c	/^int Zoltan_RIB_Set_Param($/;"	f	typeref:typename:int
Zoltan_RIB_inertial1d	zoltan/rcb/inertial1d.c	/^int Zoltan_RIB_inertial1d($/;"	f	typeref:typename:int
Zoltan_RIB_inertial2d	zoltan/rcb/inertial2d.c	/^int Zoltan_RIB_inertial2d($/;"	f	typeref:typename:int
Zoltan_RIB_inertial3d	zoltan/rcb/inertial3d.c	/^int Zoltan_RIB_inertial3d($/;"	f	typeref:typename:int
Zoltan_RIB_min_max	zoltan/rcb/rib.c	/^void Zoltan_RIB_min_max($/;"	f	typeref:typename:void
Zoltan_RIB_reduce_double	zoltan/rcb/inertial3d.c	/^void Zoltan_RIB_reduce_double(double *in, double *out, int len, MPI_Comm comm,$/;"	f	typeref:typename:void
Zoltan_Rand	zoltan/zz/zz_rand.c	/^unsigned Zoltan_Rand(unsigned int *myidum) {$/;"	f	typeref:typename:unsigned
Zoltan_Rand_InRange	zoltan/zz/zz_rand.c	/^unsigned int Zoltan_Rand_InRange (unsigned int *myidum, unsigned int n)$/;"	f	typeref:typename:unsigned int
Zoltan_Rand_Perm_Gno	zoltan/zz/zz_rand.c	/^void Zoltan_Rand_Perm_Gno (ZOLTAN_GNO_TYPE *data, ZOLTAN_GNO_TYPE n, unsigned int *myidum)$/;"	f	typeref:typename:void
Zoltan_Rand_Perm_Int	zoltan/zz/zz_rand.c	/^void Zoltan_Rand_Perm_Int (int *data, int n, unsigned int *myidum)$/;"	f	typeref:typename:void
Zoltan_Random	zoltan/simple/random.c	/^int Zoltan_Random($/;"	f	typeref:typename:int
Zoltan_Random_Set_Param	zoltan/simple/random.c	/^int Zoltan_Random_Set_Param($/;"	f	typeref:typename:int
Zoltan_Realloc	zoltan/Utilities/Memory/mem.c	/^double *Zoltan_Realloc(void *ptr, size_t n, char *filename, int lineno)$/;"	f	typeref:typename:double *
Zoltan_Recommended_Hash_Size	zoltan/zz/zz_hash.c	/^unsigned int Zoltan_Recommended_Hash_Size (unsigned int n)$/;"	f	typeref:typename:unsigned int
Zoltan_Ref_Type	zoltan/include/zoltan.h	/^enum Zoltan_Ref_Type {$/;"	g
Zoltan_Reftree_Build	zoltan/reftree/reftree_build.c	/^int Zoltan_Reftree_Build(ZZ *zz)$/;"	f	typeref:typename:int
Zoltan_Reftree_Build_Recursive	zoltan/reftree/reftree_build.c	/^static int Zoltan_Reftree_Build_Recursive(ZZ *zz,ZOLTAN_REFTREE *subroot)$/;"	f	typeref:typename:int	file:
Zoltan_Reftree_Clear_Hash_Table	zoltan/reftree/reftree_hash.c	/^void Zoltan_Reftree_Clear_Hash_Table(struct Zoltan_Reftree_hash_node **hashtab,$/;"	f	typeref:typename:void
Zoltan_Reftree_Clear_IntHash_Table	zoltan/reftree/reftree_hash.c	/^void Zoltan_Reftree_Clear_IntHash_Table($/;"	f	typeref:typename:void
Zoltan_Reftree_Coarse_Grid_Path	zoltan/reftree/reftree_coarse_path.c	/^int Zoltan_Reftree_Coarse_Grid_Path(int nobj, int *num_vert, $/;"	f	typeref:typename:int
Zoltan_Reftree_Export_Lists	zoltan/reftree/reftree_part.c	/^static int Zoltan_Reftree_Export_Lists(ZZ *zz, ZOLTAN_REFTREE *subroot, $/;"	f	typeref:typename:int	file:
Zoltan_Reftree_Free_Structure	zoltan/reftree/reftree_build.c	/^void Zoltan_Reftree_Free_Structure(ZZ *zz)$/;"	f	typeref:typename:void
Zoltan_Reftree_Free_Subtree	zoltan/reftree/reftree_build.c	/^static void Zoltan_Reftree_Free_Subtree(ZZ *zz, ZOLTAN_REFTREE *subroot)$/;"	f	typeref:typename:void	file:
Zoltan_Reftree_Get_Child_Order	zoltan/reftree/reftree_build.c	/^void Zoltan_Reftree_Get_Child_Order(ZZ *zz, int *order, int *ierr)$/;"	f	typeref:typename:void
Zoltan_Reftree_Hash_Insert	zoltan/reftree/reftree_hash.c	/^void Zoltan_Reftree_Hash_Insert(ZZ *zz, ZOLTAN_REFTREE *reftree_node,$/;"	f	typeref:typename:void
Zoltan_Reftree_Hash_Remove	zoltan/reftree/reftree_hash.c	/^void Zoltan_Reftree_Hash_Remove (ZZ *zz, ZOLTAN_REFTREE *reftree_node,$/;"	f	typeref:typename:void
Zoltan_Reftree_Init	zoltan/reftree/reftree_build.c	/^int Zoltan_Reftree_Init(ZZ *zz)$/;"	f	typeref:typename:int
Zoltan_Reftree_IntHash_Insert	zoltan/reftree/reftree_hash.c	/^void Zoltan_Reftree_IntHash_Insert(ZZ *zz, ZOLTAN_ID_PTR gid, int lid,$/;"	f	typeref:typename:void
Zoltan_Reftree_List_Other_Leaves	zoltan/reftree/reftree_part.c	/^static void Zoltan_Reftree_List_Other_Leaves(ZZ *zz, ZOLTAN_REFTREE *subroot, $/;"	f	typeref:typename:void	file:
Zoltan_Reftree_Mark_and_Count	zoltan/reftree/reftree_part.c	/^static int Zoltan_Reftree_Mark_and_Count(ZOLTAN_REFTREE *subroot, int part, $/;"	f	typeref:typename:int	file:
Zoltan_Reftree_Part	zoltan/reftree/reftree_part.c	/^int Zoltan_Reftree_Part($/;"	f	typeref:typename:int
Zoltan_Reftree_Part_Recursive	zoltan/reftree/reftree_part.c	/^static int Zoltan_Reftree_Part_Recursive(ZZ *zz, ZOLTAN_REFTREE *subroot, int *part,$/;"	f	typeref:typename:int	file:
Zoltan_Reftree_Partition	zoltan/reftree/reftree_part.c	/^static int Zoltan_Reftree_Partition(ZZ *zz, float *part_sizes, int *num_export, $/;"	f	typeref:typename:int	file:
Zoltan_Reftree_Print	zoltan/reftree/reftree_build.c	/^void Zoltan_Reftree_Print(ZZ *zz, ZOLTAN_REFTREE *subroot, int level)$/;"	f	typeref:typename:void
Zoltan_Reftree_Reinit_Coarse	zoltan/reftree/reftree_build.c	/^static int Zoltan_Reftree_Reinit_Coarse(ZZ *zz)$/;"	f	typeref:typename:int	file:
Zoltan_Reftree_Set_Param	zoltan/reftree/reftree_build.c	/^int Zoltan_Reftree_Set_Param($/;"	f	typeref:typename:int
Zoltan_Reftree_Struct	zoltan/reftree/reftree.h	/^struct Zoltan_Reftree_Struct {$/;"	s
Zoltan_Reftree_Sum_All_Weights	zoltan/reftree/reftree_part.c	/^static void Zoltan_Reftree_Sum_All_Weights(ZZ *zz, ZOLTAN_REFTREE *subroot, int wdim)$/;"	f	typeref:typename:void	file:
Zoltan_Reftree_Sum_My_Weights	zoltan/reftree/reftree_part.c	/^static void Zoltan_Reftree_Sum_My_Weights(ZZ *zz, ZOLTAN_REFTREE *subroot, $/;"	f	typeref:typename:void	file:
Zoltan_Reftree_Sum_Weights	zoltan/reftree/reftree_part.c	/^static int Zoltan_Reftree_Sum_Weights(ZZ *zz)$/;"	f	typeref:typename:int	file:
Zoltan_Reftree_data_struct	zoltan/reftree/reftree.h	/^struct Zoltan_Reftree_data_struct {$/;"	s
Zoltan_Reftree_hash_lookup	zoltan/reftree/reftree_hash.c	/^ZOLTAN_REFTREE* Zoltan_Reftree_hash_lookup (ZZ *zz, $/;"	f	typeref:typename:ZOLTAN_REFTREE *
Zoltan_Reftree_hash_node	zoltan/reftree/reftree.h	/^struct Zoltan_Reftree_hash_node {$/;"	s
Zoltan_Reftree_inthash_lookup	zoltan/reftree/reftree_hash.c	/^int Zoltan_Reftree_inthash_lookup (ZZ *zz, $/;"	f	typeref:typename:int
Zoltan_Reftree_inthash_node	zoltan/reftree/reftree.h	/^struct Zoltan_Reftree_inthash_node {$/;"	s
Zoltan_Register_Fort_Malloc	zoltan/all/all_allo.c	/^void Zoltan_Register_Fort_Malloc(ZOLTAN_FORT_MALLOC_INT_FN *fort_malloc_int,$/;"	f	typeref:typename:void
Zoltan_Scatter_Graph	zoltan/tpls/scatter_graph.c	/^int Zoltan_Scatter_Graph($/;"	f	typeref:typename:int
Zoltan_Scotch	zoltan/tpls/scotch_interface.c	/^int Zoltan_Scotch($/;"	f	typeref:typename:int
Zoltan_Scotch_Bind_Param	zoltan/tpls/scotch_interface.c	/^static int Zoltan_Scotch_Bind_Param(ZZ* zz, char *alg, char *graph_type, char **strat)$/;"	f	typeref:typename:int	file:
Zoltan_Scotch_Build_Graph	zoltan/tpls/scotch_interface.c	/^Zoltan_Scotch_Build_Graph(ZOLTAN_Third_Graph * gr,$/;"	f	typeref:typename:int	file:
Zoltan_Scotch_Construct_Offset	zoltan/tpls/scotch_interface.c	/^static int Zoltan_Scotch_Construct_Offset($/;"	f	typeref:typename:int	file:
Zoltan_Scotch_Order	zoltan/tpls/scotch_interface.c	/^int Zoltan_Scotch_Order($/;"	f	typeref:typename:int
Zoltan_Scotch_Set_Param	zoltan/tpls/scotch_interface.c	/^int Zoltan_Scotch_Set_Param($/;"	f	typeref:typename:int
Zoltan_Seed	zoltan/zz/zz_rand.c	/^unsigned int Zoltan_Seed()$/;"	f	typeref:typename:unsigned int
Zoltan_Set_Border_Obj_List_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Border_Obj_List_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Child_List_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Child_List_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Child_Weight_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Child_Weight_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Coarse_Obj_List_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Coarse_Obj_List_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Edge_List_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Edge_List_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Edge_List_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Edge_List_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Set_First_Border_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_First_Border_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_First_Coarse_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_First_Coarse_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_First_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_First_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Fixed_Obj_List_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Fixed_Obj_List_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Fn	zoltan/fort/fwrap.f90	/^interface Zoltan_Set_Fn$/;"	i	module:zoltan
Zoltan_Set_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Fn(ZZ *zz, ZOLTAN_FN_TYPE fn_type, void (*fn)(void), void *data)$/;"	f	typeref:typename:int
Zoltan_Set_Geom_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Geom_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Geom_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Geom_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Set_HG_CS_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_HG_CS_Fn($/;"	f	typeref:typename:int
Zoltan_Set_HG_Edge_Weights_Fn	zoltan/include/zoltan.h	/^#define Zoltan_Set_HG_Edge_Weights_Fn /;"	d
Zoltan_Set_HG_Edge_Wts_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_HG_Edge_Wts_Fn($/;"	f	typeref:typename:int
Zoltan_Set_HG_Size_CS_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_HG_Size_CS_Fn($/;"	f	typeref:typename:int
Zoltan_Set_HG_Size_Edge_Weights_Fn	zoltan/include/zoltan.h	/^#define Zoltan_Set_HG_Size_Edge_Weights_Fn /;"	d
Zoltan_Set_HG_Size_Edge_Wts_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_HG_Size_Edge_Wts_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Hier_Method_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Hier_Method_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Hier_Num_Levels_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Hier_Num_Levels_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Hier_Part_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Hier_Part_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Hier_Partition_Fn	zoltan/include/zoltan.h	/^#define Zoltan_Set_Hier_Partition_Fn /;"	d
Zoltan_Set_Key_Param	zoltan/params/key_params.c	/^int Zoltan_Set_Key_Param($/;"	f	typeref:typename:int
Zoltan_Set_Malloc_Param	zoltan/all/all_allo.c	/^int Zoltan_Set_Malloc_Param($/;"	f	typeref:typename:int
Zoltan_Set_Mid_Migrate_Fn	zoltan/lb/lb_set_fn.c	/^int Zoltan_Set_Mid_Migrate_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Mid_Migrate_PP_Fn	zoltan/lb/lb_set_fn.c	/^int Zoltan_Set_Mid_Migrate_PP_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Next_Border_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Next_Border_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Next_Coarse_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Next_Coarse_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Next_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Next_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Border_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Border_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Child_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Child_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Coarse_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Coarse_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Edges_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Edges_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Edges_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Edges_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Fixed_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Fixed_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Geom_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Geom_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Num_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Num_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Obj_List_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Obj_List_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Obj_Size_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Obj_Size_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Obj_Size_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Obj_Size_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Pack_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Pack_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Pack_Obj_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Pack_Obj_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Param	zoltan/fort/fwrap.f90	/^interface Zoltan_Set_Param$/;"	i	module:zoltan
Zoltan_Set_Param	zoltan/params/set_param.c	/^int Zoltan_Set_Param($/;"	f	typeref:typename:int
Zoltan_Set_Param_Vec	zoltan/fort/fwrap.f90	/^interface Zoltan_Set_Param_Vec$/;"	i	module:zoltan
Zoltan_Set_Param_Vec	zoltan/params/set_param.c	/^int Zoltan_Set_Param_Vec($/;"	f	typeref:typename:int
Zoltan_Set_Part_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Part_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Part_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Part_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Partition_Fn	zoltan/include/zoltan.h	/^#define Zoltan_Set_Partition_Fn /;"	d
Zoltan_Set_Partition_Multi_Fn	zoltan/include/zoltan.h	/^#define Zoltan_Set_Partition_Multi_Fn /;"	d
Zoltan_Set_Post_Migrate_Fn	zoltan/lb/lb_set_fn.c	/^int Zoltan_Set_Post_Migrate_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Post_Migrate_PP_Fn	zoltan/lb/lb_set_fn.c	/^int Zoltan_Set_Post_Migrate_PP_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Pre_Migrate_Fn	zoltan/lb/lb_set_fn.c	/^int Zoltan_Set_Pre_Migrate_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Pre_Migrate_PP_Fn	zoltan/lb/lb_set_fn.c	/^int Zoltan_Set_Pre_Migrate_PP_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Timer_Param	zoltan/timer/timer_params.c	/^int Zoltan_Set_Timer_Param($/;"	f	typeref:typename:int
Zoltan_Set_Unpack_Obj_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Unpack_Obj_Fn($/;"	f	typeref:typename:int
Zoltan_Set_Unpack_Obj_Multi_Fn	zoltan/zz/zz_set_fn.c	/^int Zoltan_Set_Unpack_Obj_Multi_Fn($/;"	f	typeref:typename:int
Zoltan_Special_Fort_Malloc_Set_Struct	zoltan/all/all_allo.c	/^int Zoltan_Special_Fort_Malloc_Set_Struct(int *zz_addr_bytes, int **fort_zz) $/;"	f	typeref:typename:int
Zoltan_Special_Free	zoltan/all/all_allo.c	/^int Zoltan_Special_Free(ZZ *zz, void **array,$/;"	f	typeref:typename:int
Zoltan_Special_Malloc	zoltan/all/all_allo.c	/^int Zoltan_Special_Malloc(ZZ *zz, void **array, int size,$/;"	f	typeref:typename:int
Zoltan_Special_Malloc_Type	zoltan/all/all_allo_const.h	/^enum Zoltan_Special_Malloc_Type {$/;"	g
Zoltan_Srand	zoltan/zz/zz_rand.c	/^void Zoltan_Srand (unsigned int seed, unsigned int *myidum) {$/;"	f	typeref:typename:void
Zoltan_Srand_Sync	zoltan/zz/zz_rand.c	/^void Zoltan_Srand_Sync($/;"	f	typeref:typename:void
Zoltan_Strdup	zoltan/zz/zz_util.c	/^char *Zoltan_Strdup(const char *str)$/;"	f	typeref:typename:char *
Zoltan_Struct	zoltan/fort/ztypes.f90	/^type Zoltan_Struct$/;"	t	module:zoltan_types
Zoltan_Struct	zoltan/lb/lb_const.h	/^typedef int ZOLTAN_LB_BOX_ASSIGN_FN(struct Zoltan_Struct *, $/;"	t	typeref:typename:int ZOLTAN_LB_BOX_ASSIGN_FN (struct *,double,double,double,double,double,double,int *,int *,int *,int *)
Zoltan_Struct	zoltan/lb/lb_const.h	/^typedef int ZOLTAN_LB_POINT_ASSIGN_FN(struct Zoltan_Struct *, double *, int *, $/;"	t	typeref:typename:int ZOLTAN_LB_POINT_ASSIGN_FN (struct *,double *,int *,int *)
Zoltan_Struct	zoltan/lb/lb_const.h	/^typedef void ZOLTAN_LB_FREE_DATA_FN(struct Zoltan_Struct *);$/;"	t	typeref:typename:void ZOLTAN_LB_FREE_DATA_FN (struct *)
Zoltan_Struct	zoltan/zz/zz_const.h	/^struct Zoltan_Struct {$/;"	s
Zoltan_TPL_Order_Free_Struct	zoltan/tpls/third_library.c	/^void Zoltan_TPL_Order_Free_Struct(struct Zoltan_TPL_Order_Struct *order)$/;"	f	typeref:typename:void
Zoltan_TPL_Order_Init_Tree	zoltan/tpls/third_library.c	/^int Zoltan_TPL_Order_Init_Tree (struct Zoltan_TPL_Order_Struct *order, indextype blocknbr, index/;"	f	typeref:typename:int
Zoltan_TPL_Order_Struct	zoltan/tpls/third_library_const.h	/^struct Zoltan_TPL_Order_Struct {$/;"	s
Zoltan_Third_DisplayTime	zoltan/tpls/preprocessing.c	/^void Zoltan_Third_DisplayTime(ZZ* zz, double* times)$/;"	f	typeref:typename:void
Zoltan_Third_Exit	zoltan/tpls/third_library.c	/^void Zoltan_Third_Exit(ZOLTAN_Third_Graph *gr, ZOLTAN_Third_Geom *geo,$/;"	f	typeref:typename:void
Zoltan_Third_Export_User	zoltan/tpls/third_library.c	/^int Zoltan_Third_Export_User(ZOLTAN_Output_Part *part,$/;"	f	typeref:typename:int
Zoltan_Third_Graph_Print	zoltan/tpls/third_library.c	/^int Zoltan_Third_Graph_Print(ZZ *zz, ZOLTAN_Third_Graph *gr, char *s)$/;"	f	typeref:typename:int
Zoltan_Third_Init	zoltan/tpls/third_library.c	/^int Zoltan_Third_Init(ZOLTAN_Third_Graph *gr, ZOLTAN_Third_Part  *prt, ZOLTAN_Third_Vsize *vsp, /;"	f	typeref:typename:int
Zoltan_Third_Set_Param	zoltan/tpls/preprocessing.c	/^int Zoltan_Third_Set_Param($/;"	f	typeref:typename:int
Zoltan_Time	zoltan/Utilities/Timer/timer.c	/^double Zoltan_Time(int timer)$/;"	f	typeref:typename:double
Zoltan_Time_Resolution	zoltan/Utilities/Timer/timer.c	/^double Zoltan_Time_Resolution(int timer)$/;"	f	typeref:typename:double
Zoltan_Timer	zoltan/Utilities/Timer/zoltan_timer.c	/^typedef struct Zoltan_Timer {$/;"	s	file:
Zoltan_Timer_ChangeFlag	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_ChangeFlag($/;"	f	typeref:typename:int
Zoltan_Timer_Copy	zoltan/Utilities/Timer/zoltan_timer.c	/^ZTIMER *Zoltan_Timer_Copy(ZTIMER *from)$/;"	f	typeref:typename:ZTIMER *
Zoltan_Timer_Copy_To	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_Copy_To(ZTIMER **to, ZTIMER *from)$/;"	f	typeref:typename:int
Zoltan_Timer_Create	zoltan/Utilities/Timer/zoltan_timer.c	/^ZTIMER *Zoltan_Timer_Create($/;"	f	typeref:typename:ZTIMER *
Zoltan_Timer_Destroy	zoltan/Utilities/Timer/zoltan_timer.c	/^void Zoltan_Timer_Destroy($/;"	f	typeref:typename:void
Zoltan_Timer_Init	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_Init($/;"	f	typeref:typename:int
Zoltan_Timer_Object	zoltan/include/zoltan_timer_cpp.h	/^  Zoltan_Timer_Object(const Zoltan_Timer_Object &zt)$/;"	f	class:Zoltan_Timer_Object
Zoltan_Timer_Object	zoltan/include/zoltan_timer_cpp.h	/^  Zoltan_Timer_Object(int flag = ZOLTAN_TIME_WALL) {$/;"	f	class:Zoltan_Timer_Object
Zoltan_Timer_Object	zoltan/include/zoltan_timer_cpp.h	/^class Zoltan_Timer_Object {$/;"	c
Zoltan_Timer_Print	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_Print($/;"	f	typeref:typename:int
Zoltan_Timer_PrintAll	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_PrintAll($/;"	f	typeref:typename:int
Zoltan_Timer_Reset	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_Reset($/;"	f	typeref:typename:int
Zoltan_Timer_Start	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_Start($/;"	f	typeref:typename:int
Zoltan_Timer_Stop	zoltan/Utilities/Timer/zoltan_timer.c	/^int Zoltan_Timer_Stop($/;"	f	typeref:typename:int
Zoltan_Transform_Box	zoltan/zz/zz_util.c	/^void Zoltan_Transform_Box($/;"	f	typeref:typename:void
Zoltan_Transform_Box_Points	zoltan/zz/zz_util.c	/^void Zoltan_Transform_Box_Points($/;"	f	typeref:typename:void
Zoltan_Transform_Point	zoltan/zz/zz_util.c	/^void Zoltan_Transform_Point($/;"	f	typeref:typename:void
Zoltan_Transform_Struct	zoltan/zz/zz_const.h	/^struct Zoltan_Transform_Struct{$/;"	s
Zoltan_Unpack_Obj_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Unpack_Obj_Fort_Wrapper(void *data, int num_gid_entries,$/;"	f	typeref:typename:void
Zoltan_Unpack_Obj_Multi_Fort_Wrapper	zoltan/fort/cwrap.c	/^void Zoltan_Unpack_Obj_Multi_Fort_Wrapper($/;"	f	typeref:typename:void
Zoltan_User_Data_1	zoltan/fort/zoltan_user_data.f90	/^type Zoltan_User_Data_1$/;"	t	module:zoltan_user_data
Zoltan_User_Data_2	zoltan/fort/zoltan_user_data.f90	/^type Zoltan_User_Data_2$/;"	t	module:zoltan_user_data
Zoltan_User_Data_3	zoltan/fort/zoltan_user_data.f90	/^type Zoltan_User_Data_3$/;"	t	module:zoltan_user_data
Zoltan_User_Data_4	zoltan/fort/zoltan_user_data.f90	/^type Zoltan_User_Data_4$/;"	t	module:zoltan_user_data
Zoltan_Verify_Graph	zoltan/tpls/verify_graph.c	/^int Zoltan_Verify_Graph(MPI_Comm comm, indextype *vtxdist, indextype *xadj, $/;"	f	typeref:typename:int
Zoltan_ZG_Build	zoltan/graph/graph.c	/^Zoltan_ZG_Build (ZZ* zz, ZG* graph, int local,$/;"	f	typeref:typename:int
Zoltan_ZG_Export	zoltan/graph/graph.c	/^Zoltan_ZG_Export (ZZ* zz, const ZG* const graph, ZOLTAN_GNO_TYPE *gvtx, int *nvtx,$/;"	f	typeref:typename:int
Zoltan_ZG_Free	zoltan/graph/graph.c	/^Zoltan_ZG_Free(ZG *graph){$/;"	f	typeref:typename:void
Zoltan_ZG_Print	zoltan/tpls/third_library.c	/^int Zoltan_ZG_Print(ZZ *zz, ZG *gr, char *s)$/;"	f	typeref:typename:int
Zoltan_ZG_Query	zoltan/graph/graph.c	/^Zoltan_ZG_Query (ZZ* zz, const ZG* const graph,$/;"	f	typeref:typename:int
Zoltan_ZG_Register	zoltan/graph/graph.c	/^Zoltan_ZG_Register(ZZ* zz, ZG* graph, int* properties)$/;"	f	typeref:typename:int
Zoltan_ZG_Set_Param	zoltan/graph/graph.c	/^int Zoltan_ZG_Set_Param($/;"	f	typeref:typename:int
Zoltan_ZG_Vertex_Info	zoltan/graph/graph.c	/^Zoltan_ZG_Vertex_Info(ZZ* zz, const ZG *const graph,$/;"	f	typeref:typename:int
Zoltan_add_back_trace	zoltan/zz/zz_back_trace.c	/^void Zoltan_add_back_trace(char *yo)$/;"	f	typeref:typename:void
Zoltan_average_cuts_reduce	zoltan/par/par_average.c	/^static void Zoltan_average_cuts_reduce($/;"	f	typeref:typename:void	file:
Zoltan_bisector_copy	zoltan/par/par_bisect.c	/^static void Zoltan_bisector_copy(struct bisector *from, struct bisector *to)$/;"	f	typeref:typename:void	file:
Zoltan_bisector_merge	zoltan/par/par_bisect.c	/^void Zoltan_bisector_merge(void *in, void *inout, int *len, MPI_Datatype *dptr)$/;"	f	typeref:typename:void
Zoltan_comm_f2c	zoltan/fort/cwrap.c	/^MPI_Comm Zoltan_comm_f2c(int *f_comm)$/;"	f	typeref:typename:MPI_Comm
Zoltan_daxpy	zoltan/par/par_bisect.c	/^static void Zoltan_daxpy(int n, double alpha, double *x, double *y, double *z)$/;"	f	typeref:typename:void	file:
Zoltan_determinant	zoltan/rcb/inertial3d.c	/^double Zoltan_determinant($/;"	f	typeref:typename:double
Zoltan_eigenvec2	zoltan/rcb/inertial2d.c	/^void Zoltan_eigenvec2($/;"	f	typeref:typename:void
Zoltan_eigenvec3	zoltan/rcb/inertial3d.c	/^void Zoltan_eigenvec3($/;"	f	typeref:typename:void
Zoltan_evals2	zoltan/rcb/inertial2d.c	/^void Zoltan_evals2($/;"	f	typeref:typename:void
Zoltan_evals3	zoltan/rcb/inertial3d.c	/^void Zoltan_evals3($/;"	f	typeref:typename:void
Zoltan_get_global_id_type	zoltan/zz/zz_util.c	/^int Zoltan_get_global_id_type(char **name)$/;"	f	typeref:typename:int
Zoltan_get_linux_meminfo	zoltan/zz/zz_util.c	/^void Zoltan_get_linux_meminfo(char *msg, char **result)$/;"	f	typeref:typename:void
Zoltan_get_process_kilobytes	zoltan/zz/zz_util.c	/^long Zoltan_get_process_kilobytes()$/;"	f	typeref:typename:long
Zoltan_matrix	zoltan/matrix/zoltan_matrix.h	/^} Zoltan_matrix;$/;"	t	typeref:struct:Zoltan_matrix_
Zoltan_matrix_	zoltan/matrix/zoltan_matrix.h	/^typedef struct Zoltan_matrix_ {$/;"	s
Zoltan_matrix_2d	zoltan/matrix/zoltan_matrix.h	/^} Zoltan_matrix_2d;$/;"	t	typeref:struct:Zoltan_matrix_2d_
Zoltan_matrix_2d_	zoltan/matrix/zoltan_matrix.h	/^typedef struct Zoltan_matrix_2d_ {$/;"	s
Zoltan_matrix_Print	zoltan/tpls/third_library.c	/^int Zoltan_matrix_Print(Zoltan_matrix *m, char *s)$/;"	f	typeref:typename:int
Zoltan_matrix_options	zoltan/matrix/zoltan_matrix.h	/^} Zoltan_matrix_options;$/;"	t	typeref:struct:Zoltan_matrix_options_
Zoltan_matrix_options_	zoltan/matrix/zoltan_matrix.h	/^typedef struct Zoltan_matrix_options_ {$/;"	s
Zoltan_mpi_gno_name	zoltan/zz/zz_util.c	/^char *Zoltan_mpi_gno_name()$/;"	f	typeref:typename:char *
Zoltan_mpi_gno_type	zoltan/zz/zz_util.c	/^MPI_Datatype Zoltan_mpi_gno_type()$/;"	f	typeref:typename:MPI_Datatype
Zoltan_norm	zoltan/par/par_bisect.c	/^static double Zoltan_norm(int mcnorm, int n, double *x, double *scal)$/;"	f	typeref:typename:double	file:
Zoltan_overflow_test	zoltan/zz/zz_util.c	/^int Zoltan_overflow_test(size_t val)$/;"	f	typeref:typename:int
Zoltan_part_info	zoltan/lb/lb_const.h	/^struct Zoltan_part_info {$/;"	s
Zoltan_print_trace	zoltan/zz/zz_back_trace.c	/^void Zoltan_print_trace(int rank)$/;"	f	typeref:typename:void
Zoltan_quicksort_list_inc_gno	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_list_inc_gno(ZOLTAN_GNO_TYPE * list, int *parlist, int start, int end)$/;"	f	typeref:typename:void
Zoltan_quicksort_list_inc_int	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_list_inc_int (int* list, int *parlist, int start, int end)$/;"	f	typeref:typename:void
Zoltan_quicksort_list_inc_long	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_list_inc_long(long *list, int *parlist, int start, int end)$/;"	f	typeref:typename:void
Zoltan_quicksort_list_inc_long_long	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_list_inc_long_long(int64_t*list, int *parlist, int start, int end)$/;"	f	typeref:typename:void
Zoltan_quicksort_list_inc_one_int	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_list_inc_one_int (int* list, int start, int end)$/;"	f	typeref:typename:void
Zoltan_quicksort_list_inc_short	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_list_inc_short(short *list, int *parlist, int start, int end)$/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_dec_double	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_dec_double ($/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_dec_float	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_dec_float ($/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_dec_float_int	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_dec_float_int ($/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_inc_double	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_inc_double ($/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_inc_float	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_inc_float ($/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_inc_gno_int	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_inc_gno_int($/;"	f	typeref:typename:void
Zoltan_quicksort_pointer_inc_int_int	zoltan/zz/zz_sort.c	/^void Zoltan_quicksort_pointer_inc_int_int($/;"	f	typeref:typename:void
Zoltan_reduce_bisector	zoltan/par/par_bisect.c	/^static void Zoltan_reduce_bisector(int nproc, int rank, int proc, int n,$/;"	f	typeref:typename:void	file:
Zoltan_remove_back_trace	zoltan/zz/zz_back_trace.c	/^void Zoltan_remove_back_trace()$/;"	f	typeref:typename:void
Zoltan_strcasecmp	zoltan/zz/zz_util.c	/^int Zoltan_strcasecmp(const char *s1, const char *s2)$/;"	f	typeref:typename:int
Zoltan_strcmp	zoltan/zz/zz_util.c	/^int Zoltan_strcmp(const char *s1, const char *s2)$/;"	f	typeref:typename:int
Zoltan_strncasecmp	zoltan/zz/zz_util.c	/^int Zoltan_strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
Zoltan_strncmp	zoltan/zz/zz_util.c	/^int Zoltan_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
Zoltan_write_linux_meminfo	zoltan/zz/zz_util.c	/^void Zoltan_write_linux_meminfo(int append, char *msg, int committedOnly)$/;"	f	typeref:typename:void
_DEBUG1	zoltan/phg/phg_coarse.c	/^#define _DEBUG1$/;"	d	file:
_DR_COMPRESS_CONST_H	zoltan/driver/dr_compress_const.h	/^#define _DR_COMPRESS_CONST_H$/;"	d
_DR_CONST_H	zoltan/driver/dr_const.h	/^#define _DR_CONST_H$/;"	d
_DR_ELEM_UTIL_CONST_H_	zoltan/driver/dr_elem_util_const.h	/^#define _DR_ELEM_UTIL_CONST_H_$/;"	d
_DR_ELM_CONST_H	zoltan/driver/dr_elem_const.h	/^#define _DR_ELM_CONST_H$/;"	d
_DR_ERR_CONST_H_	zoltan/driver/dr_err_const.h	/^#define _DR_ERR_CONST_H_$/;"	d
_DR_EVAL_H_	zoltan/driver/dr_eval_const.h	/^#define _DR_EVAL_H_$/;"	d
_DR_INPUT_CONST_H_	zoltan/driver/dr_input_const.h	/^#define _DR_INPUT_CONST_H_$/;"	d
_DR_LOADBAL_CONST_H_	zoltan/driver/dr_loadbal_const.h	/^#define _DR_LOADBAL_CONST_H_$/;"	d
_DR_MAPS_CONST_H	zoltan/driver/dr_maps_const.h	/^#define _DR_MAPS_CONST_H$/;"	d
_DR_OUTPUT_CONST_H_	zoltan/driver/dr_output_const.h	/^#define _DR_OUTPUT_CONST_H_$/;"	d
_DR_PAR_UTIL_CONST_H_	zoltan/driver/dr_par_util_const.h	/^#define _DR_PAR_UTIL_CONST_H_$/;"	d
_DR_UTIL_CONST_H_	zoltan/driver/dr_util_const.h	/^#define _DR_UTIL_CONST_H_$/;"	d
_G2L_HASH_H_	zoltan/coloring/g2l_hash.h	/^#define _G2L_HASH_H_$/;"	d
_GID_lookup	zoltan/phg/phg_lookup.h	/^typedef struct _GID_lookup{$/;"	s
_ZOLTAN_HG_READFILE_CONST_H_	zoltan/driver/dr_hg_readfile.h	/^#define _ZOLTAN_HG_READFILE_CONST_H_$/;"	d
_Zoltan_Get_Obj_List	zoltan/zz/zz_obj_list.c	/^static int _Zoltan_Get_Obj_List($/;"	f	typeref:typename:int	file:
__ALL_ALLO_H	zoltan/all/all_allo_const.h	/^#define __ALL_ALLO_H$/;"	d
__BUCKET__H	zoltan/coloring/bucket.h	/^#define __BUCKET__H$/;"	d
__CH_INPUT_CONST_H	zoltan/ch/ch_input_const.h	/^#define __CH_INPUT_CONST_H$/;"	d
__COLORING_CONST_H	zoltan/coloring/coloring_const.h	/^#define __COLORING_CONST_H$/;"	d
__COLORING_H	zoltan/coloring/coloring.h	/^#define __COLORING_H$/;"	d
__COMMON_H	zoltan/tpls/graph_util.h	/^#define __COMMON_H$/;"	d
__COMM_CONST_H	zoltan/include/zoltan_comm.h	/^#define __COMM_CONST_H$/;"	d
__COMM_H	zoltan/Utilities/Communication/comm.h	/^#define __COMM_H$/;"	d
__CREATE_PROC_LIST_CONST_H	zoltan/rcb/create_proc_list_const.h	/^#define __CREATE_PROC_LIST_CONST_H$/;"	d
__DR_DD_H	zoltan/driver/dr_dd.h	/^#define __DR_DD_H$/;"	d
__GRAPH_CONST_H	zoltan/graph/graph_const.h	/^#define __GRAPH_CONST_H$/;"	d
__GRAPH_H	zoltan/graph/graph.h	/^#define __GRAPH_H$/;"	d
__GRAPH_PARAMS_H	zoltan/graph/graph_params.h	/^#define __GRAPH_PARAMS_H$/;"	d
__HA_CONST_H	zoltan/ha/ha_const.h	/^#define __HA_CONST_H$/;"	d
__HA_OVIS_H	zoltan/ha/ha_ovis.h	/^#define __HA_OVIS_H$/;"	d
__HIER_H	zoltan/hier/hier.h	/^#define __HIER_H$/;"	d
__HSFC_HILBERT_CONST_H	zoltan/hsfc/hsfc_hilbert_const.h	/^#define __HSFC_HILBERT_CONST_H$/;"	d
__HSFC_PARAMS_H	zoltan/hsfc/hsfc_params.h	/^#define __HSFC_PARAMS_H$/;"	d
__INERTIAL_H	zoltan/rcb/inertial.h	/^#define __INERTIAL_H$/;"	d
__KEY_PARAMS_H	zoltan/params/key_params.h	/^#define __KEY_PARAMS_H$/;"	d
__LBI_CONST_H	zoltan/include/lbi_const.h	/^#define __LBI_CONST_H$/;"	d
__LB_CONST_H	zoltan/lb/lb_const.h	/^#define __LB_CONST_H$/;"	d
__LB_INIT_CONST_H	zoltan/lb/lb_init_const.h	/^#define __LB_INIT_CONST_H$/;"	d
__MEM_CONST_H	zoltan/include/zoltan_mem.h	/^#define __MEM_CONST_H$/;"	d
__ORDER_CONST_H	zoltan/order/order_const.h	/^#define __ORDER_CONST_H$/;"	d
__ORDER_PARAMS_H	zoltan/order/order_params.h	/^#define __ORDER_PARAMS_H$/;"	d
__PARAMS_CONST_H	zoltan/params/params_const.h	/^#define __PARAMS_CONST_H$/;"	d
__PARMETIS_INTERFACE_H	zoltan/tpls/parmetis_interface.h	/^#define __PARMETIS_INTERFACE_H$/;"	d
__PARMETIS_INTERFACE_PARAMS_H	zoltan/tpls/parmetis_interface_params.h	/^#define __PARMETIS_INTERFACE_PARAMS_H$/;"	d
__PAR_AVERAGE_CONST_H	zoltan/par/par_average_const.h	/^#define __PAR_AVERAGE_CONST_H$/;"	d
__PAR_BISECT_CONST_H	zoltan/par/par_bisect_const.h	/^#define __PAR_BISECT_CONST_H$/;"	d
__PAR_CONST_H	zoltan/par/par_const.h	/^#define __PAR_CONST_H$/;"	d
__PAR_MEDIAN_CONST_H	zoltan/par/par_median_const.h	/^#define __PAR_MEDIAN_CONST_H$/;"	d
__PAR_TFLOPS_SPECIAL_H	zoltan/par/par_tflops_special_const.h	/^#define __PAR_TFLOPS_SPECIAL_H$/;"	d
__PHG_CONST_H	zoltan/phg/phg_const.h	/^#define __PHG_CONST_H$/;"	d
__PHG_HYPERGRAPH_H	zoltan/phg/phg_hypergraph.h	/^#define __PHG_HYPERGRAPH_H$/;"	d
__PHG_PARAMS_H	zoltan/phg/phg_params.h	/^#define __PHG_PARAMS_H$/;"	d
__PHG_UTIL_H	zoltan/phg/phg_util.h	/^#define __PHG_UTIL_H$/;"	d
__RCB_CONST_H	zoltan/rcb/rcb_const.h	/^#define __RCB_CONST_H$/;"	d
__RCB_H	zoltan/rcb/rcb.h	/^#define __RCB_H$/;"	d
__RCB_PARAMS_H	zoltan/rcb/rcb_params.h	/^#define __RCB_PARAMS_H$/;"	d
__REFTREE_CONST_H	zoltan/reftree/reftree_const.h	/^#define __REFTREE_CONST_H$/;"	d
__REFTREE_H	zoltan/reftree/reftree.h	/^#define __REFTREE_H$/;"	d
__RIB_CONST_H	zoltan/rcb/rib_const.h	/^#define __RIB_CONST_H$/;"	d
__RIB_H	zoltan/rcb/rib.h	/^#define __RIB_H$/;"	d
__RIB_PARAMS_H	zoltan/rcb/rib_params.h	/^#define __RIB_PARAMS_H$/;"	d
__SCOTCH_INTERFACE_H	zoltan/tpls/scotch_interface.h	/^#define __SCOTCH_INTERFACE_H$/;"	d
__SCOTCH_INTERFACE_PARAMS_H	zoltan/tpls/scotch_interface_params.h	/^#define __SCOTCH_INTERFACE_PARAMS_H$/;"	d
__SHARED_CONST_H	zoltan/rcb/shared.h	/^#define __SHARED_CONST_H$/;"	d
__SIMPLE_CONST_H	zoltan/simple/simple_const.h	/^#define __SIMPLE_CONST_H$/;"	d
__THIRD_LIBRARY_CONST_H	zoltan/tpls/third_library_const.h	/^#define __THIRD_LIBRARY_CONST_H$/;"	d
__THIRD_LIBRARY_H	zoltan/tpls/third_library.h	/^#define __THIRD_LIBRARY_H$/;"	d
__THIRD_LIBRARY_PARAMS_H	zoltan/tpls/third_library_params.h	/^#define __THIRD_LIBRARY_PARAMS_H$/;"	d
__THIRD_LIBRARY_TOOLS_H	zoltan/tpls/third_library_tools.h	/^#define __THIRD_LIBRARY_TOOLS_H$/;"	d
__TIMER_CONST_H	zoltan/timer/timer_const.h	/^#define __TIMER_CONST_H$/;"	d
__TIMER_H	zoltan/Utilities/Timer/timer.h	/^#define __TIMER_H$/;"	d
__ZOLTANPARAMS_H	zoltan/driver/dr_param_file.h	/^#define __ZOLTANPARAMS_H$/;"	d
__ZOLTANPARAMS_H	zoltan/driver/dr_param_fileCPP.h	/^#define __ZOLTANPARAMS_H$/;"	d
__ZOLTANTIMER_H	zoltan/include/zoltan_timer.h	/^#define __ZOLTANTIMER_H$/;"	d
__ZOLTAN_ALIGN_H	zoltan/include/zoltan_align.h	/^#define __ZOLTAN_ALIGN_H$/;"	d
__ZOLTAN_CONST_H	zoltan/zz/zz_const.h	/^#define __ZOLTAN_CONST_H$/;"	d
__ZOLTAN_EVAL_H	zoltan/include/zoltan_eval.h	/^#define __ZOLTAN_EVAL_H$/;"	d
__ZOLTAN_H	zoltan/include/zoltan.h	/^#define __ZOLTAN_H$/;"	d
__ZOLTAN_HASH_H	zoltan/zz/zz_hash.h	/^#define __ZOLTAN_HASH_H$/;"	d
__ZOLTAN_ID_CONST_H	zoltan/zz/zz_id_const.h	/^#define __ZOLTAN_ID_CONST_H$/;"	d
__ZOLTAN_ID_H	zoltan/Utilities/shared/zoltan_id.h	/^#define __ZOLTAN_ID_H$/;"	d
__ZOLTAN_MATRIX_H	zoltan/matrix/zoltan_matrix.h	/^#define __ZOLTAN_MATRIX_H$/;"	d
__ZOLTAN_PHG_COMM_H	zoltan/phg/phg_comm.h	/^#define __ZOLTAN_PHG_COMM_H$/;"	d
__ZOLTAN_PHG_DISTRIB_H	zoltan/phg/phg_distrib.h	/^#define __ZOLTAN_PHG_DISTRIB_H$/;"	d
__ZOLTAN_PHG_H	zoltan/phg/phg.h	/^#define __ZOLTAN_PHG_H$/;"	d
__ZOLTAN_PHG_LOOKUP_H	zoltan/phg/phg_lookup.h	/^#define __ZOLTAN_PHG_LOOKUP_H$/;"	d
__ZOLTAN_PHG_TREE_H	zoltan/phg/phg_tree.h	/^#define __ZOLTAN_PHG_TREE_H$/;"	d
__ZOLTAN_PHG_VERBOSE_H	zoltan/phg/phg_verbose.h	/^#define __ZOLTAN_PHG_VERBOSE_H$/;"	d
__ZOLTAN_TYPES_H	zoltan/include/zoltan_types.h	/^#define __ZOLTAN_TYPES_H$/;"	d
__ZOLTAN_UTIL_CONST_H	zoltan/zz/zz_util_const.h	/^#define __ZOLTAN_UTIL_CONST_H$/;"	d
__ZOLTAN_UTIL_H	zoltan/Utilities/shared/zoltan_util.h	/^#define __ZOLTAN_UTIL_H$/;"	d
__ZZ_RAND_H	zoltan/zz/zz_rand.h	/^#define __ZZ_RAND_H$/;"	d
__anon08db67e70108	zoltan/phg/phg_util.c	/^struct {$/;"	s	function:Zoltan_PHG_Find_Root	file:
__anon279889e4010a	zoltan/driver/dr_compress_const.h	/^  union {$/;"	u	struct:ZOLTAN_FILE_
__anon2e47d5030108	zoltan/phg/phg_serialpartition.c	/^struct {$/;"	s	function:pick_best	file:
__anon371c30e80108	zoltan/phg/phg_hypergraph.h	/^typedef struct {$/;"	s
__anon462eee3b0103	zoltan/driver/dr_elem_const.h	/^typedef enum {E_TYPE_ERROR=-1, SPHERE, BAR1, BAR2, QUAD1, S_QUAD2, QUAD2,$/;"	g
__anon50a459380108	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^   {$/;"	s	file:
__anon5ef29df60108	zoltan/zz/zz_heap.h	/^typedef struct {$/;"	s
__anonbcb9ea720103	zoltan/matrix/zoltan_matrix.h	/^typedef enum {ADD_WEIGHT=0, MAX_WEIGHT, CMP_WEIGHT} WgtOp;$/;"	g
__anonbcb9ea720203	zoltan/matrix/zoltan_matrix.h	/^typedef enum {MATRIX_FULL_DD=0, MATRIX_FAST, MATRIX_NO_REDIST} SpeedOpt;$/;"	g
__anonc14baf7a0108	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^typedef struct {           \/* Only used by Zoltan_DD_Update()              *\/$/;"	s
__anonc14baf7a0208	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^typedef struct {           \/* Only used by Zoltan_DD_Find()         *\/$/;"	s
__anonc14baf7a0308	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^typedef struct  {          \/* Only used by Zoltan_DD_Remove()      *\/$/;"	s
__anond4a4c99f0108	zoltan/zz/zz_const.h	/^typedef struct {$/;"	s
__func__	zoltan/zz/zz_const.h	/^#define __func__ /;"	d
__metis__	zoltan/tpls/third_library_const.h	/^  #define __metis__ /;"	d
__parmetis__	zoltan/tpls/third_library_const.h	/^  #define __parmetis__ /;"	d
__ptscotch__	zoltan/tpls/third_library_const.h	/^  #define __ptscotch__ /;"	d
__scotch__	zoltan/tpls/third_library_const.h	/^  #define __scotch__ /;"	d
_commStruct	zoltan/par/par_median_randomized.c	/^typedef struct _commStruct{$/;"	s	file:
_eval_balance_struct	zoltan/include/zoltan_eval.h	/^struct _eval_balance_struct{$/;"	s
_eval_graph_struct	zoltan/include/zoltan_eval.h	/^struct _eval_graph_struct{$/;"	s
_eval_hg_struct	zoltan/include/zoltan_eval.h	/^struct _eval_hg_struct{$/;"	s
_export_buf	zoltan/lb/low_mem_lb_migrate.c	/^static char *_export_buf= NULL;$/;"	v	typeref:typename:char *	file:
_export_buf_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _export_buf_len = 0;$/;"	v	typeref:typename:int	file:
_gid_list	zoltan/lb/low_mem_lb_migrate.c	/^static ZOLTAN_ID_PTR _gid_list = NULL;$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
_gid_list_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _gid_list_len = 0;$/;"	v	typeref:typename:int	file:
_gidht	zoltan/zz/zz_gen_files.c	/^struct _gidht{$/;"	s	function:augment_search_structure	file:
_gidht	zoltan/zz/zz_gen_files.c	/^struct _gidht{$/;"	s	function:fan_in_edge_global_ids	file:
_gidht	zoltan/zz/zz_gen_files.c	/^struct _gidht{$/;"	s	function:merge_gids	file:
_hash_node	zoltan/phg/phg_build_calls.c	/^struct _hash_node {$/;"	s	function:Convert_To_CSR	file:
_hshEdge	zoltan/phg/phg_lookup.h	/^typedef struct _hshEdge{ \/* Edges assigned to this process with hash func *\/$/;"	s
_hshVtx	zoltan/phg/phg_lookup.h	/^typedef struct _hshVtx{ \/* Vertices assigned to this process with hash func *\/$/;"	s
_idx	zoltan/lb/low_mem_lb_migrate.c	/^static int *_idx = NULL;$/;"	v	typeref:typename:int *	file:
_idx_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _idx_len = 0;$/;"	v	typeref:typename:int	file:
_import_buf	zoltan/lb/low_mem_lb_migrate.c	/^static char *_import_buf= NULL;$/;"	v	typeref:typename:char *	file:
_import_buf_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _import_buf_len = 0;$/;"	v	typeref:typename:int	file:
_import_gids	zoltan/lb/low_mem_lb_migrate.c	/^static ZOLTAN_ID_PTR _import_gids= NULL;$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
_import_gids_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _import_gids_len = 0;$/;"	v	typeref:typename:int	file:
_import_lids	zoltan/lb/low_mem_lb_migrate.c	/^static ZOLTAN_ID_PTR _import_lids = NULL;$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
_import_lids_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _import_lids_len = 0;$/;"	v	typeref:typename:int	file:
_import_parts	zoltan/lb/low_mem_lb_migrate.c	/^static int *_import_parts = NULL;$/;"	v	typeref:typename:int *	file:
_import_parts_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _import_parts_len = 0;$/;"	v	typeref:typename:int	file:
_import_procs	zoltan/lb/low_mem_lb_migrate.c	/^static int *_import_procs = NULL;$/;"	v	typeref:typename:int *	file:
_import_procs_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _import_procs_len = 0;$/;"	v	typeref:typename:int	file:
_lid_list	zoltan/lb/low_mem_lb_migrate.c	/^static ZOLTAN_ID_PTR _lid_list = NULL;$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
_lid_list_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _lid_list_len = 0;$/;"	v	typeref:typename:int	file:
_myEW	zoltan/phg/phg_lookup.h	/^typedef struct _myEW{     \/* Values returned by edge weight query functions *\/$/;"	s
_myObj	zoltan/phg/phg_lookup.h	/^typedef struct _myObj{  \/* Vertices returned in Get_Obj_List queries *\/$/;"	s
_myPin	zoltan/phg/phg_lookup.h	/^typedef struct _myPin{      \/* Pins returned by hypergraph query functions *\/$/;"	s
_part_list	zoltan/lb/low_mem_lb_migrate.c	/^static int *_part_list = NULL;$/;"	v	typeref:typename:int *	file:
_part_list_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _part_list_len = 0;$/;"	v	typeref:typename:int	file:
_proc_list	zoltan/lb/low_mem_lb_migrate.c	/^static int *_proc_list = NULL;$/;"	v	typeref:typename:int *	file:
_proc_list_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _proc_list_len = 0;$/;"	v	typeref:typename:int	file:
_request	zoltan/lb/low_mem_lb_migrate.c	/^static MPI_Request _request;$/;"	v	typeref:typename:MPI_Request	file:
_sizes	zoltan/lb/low_mem_lb_migrate.c	/^static int *_sizes = NULL;$/;"	v	typeref:typename:int *	file:
_sizes_len	zoltan/lb/low_mem_lb_migrate.c	/^static int _sizes_len = 0;$/;"	v	typeref:typename:int	file:
_spec	zoltan/hier/hier.h	/^typedef struct _spec{$/;"	s
_zoltan_sortFunc	zoltan/driver/dr_hg_io.c	/^static int _zoltan_sortFunc(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
abs_builddir	zoltan/Makefile.in	/^abs_builddir = @abs_builddir@$/;"	m
abs_builddir	zoltan/driver/Makefile.in	/^abs_builddir = @abs_builddir@$/;"	m
abs_builddir	zoltan/fdriver/Makefile.in	/^abs_builddir = @abs_builddir@$/;"	m
abs_srcdir	zoltan/Makefile.in	/^abs_srcdir = @abs_srcdir@$/;"	m
abs_srcdir	zoltan/driver/Makefile.in	/^abs_srcdir = @abs_srcdir@$/;"	m
abs_srcdir	zoltan/fdriver/Makefile.in	/^abs_srcdir = @abs_srcdir@$/;"	m
abs_top_builddir	zoltan/Makefile.in	/^abs_top_builddir = @abs_top_builddir@$/;"	m
abs_top_builddir	zoltan/driver/Makefile.in	/^abs_top_builddir = @abs_top_builddir@$/;"	m
abs_top_builddir	zoltan/fdriver/Makefile.in	/^abs_top_builddir = @abs_top_builddir@$/;"	m
abs_top_srcdir	zoltan/Makefile.in	/^abs_top_srcdir = @abs_top_srcdir@$/;"	m
abs_top_srcdir	zoltan/driver/Makefile.in	/^abs_top_srcdir = @abs_top_srcdir@$/;"	m
abs_top_srcdir	zoltan/fdriver/Makefile.in	/^abs_top_srcdir = @abs_top_srcdir@$/;"	m
ac_aux_dir	zoltan/Makefile.in	/^ac_aux_dir = @ac_aux_dir@$/;"	m
ac_aux_dir	zoltan/driver/Makefile.in	/^ac_aux_dir = @ac_aux_dir@$/;"	m
ac_aux_dir	zoltan/fdriver/Makefile.in	/^ac_aux_dir = @ac_aux_dir@$/;"	m
ac_ct_CC	zoltan/Makefile.in	/^ac_ct_CC = @ac_ct_CC@$/;"	m
ac_ct_CC	zoltan/driver/Makefile.in	/^ac_ct_CC = @ac_ct_CC@$/;"	m
ac_ct_CC	zoltan/fdriver/Makefile.in	/^ac_ct_CC = @ac_ct_CC@$/;"	m
ac_ct_CXX	zoltan/Makefile.in	/^ac_ct_CXX = @ac_ct_CXX@$/;"	m
ac_ct_CXX	zoltan/driver/Makefile.in	/^ac_ct_CXX = @ac_ct_CXX@$/;"	m
ac_ct_CXX	zoltan/fdriver/Makefile.in	/^ac_ct_CXX = @ac_ct_CXX@$/;"	m
ac_ct_FC	zoltan/Makefile.in	/^ac_ct_FC = @ac_ct_FC@$/;"	m
ac_ct_FC	zoltan/driver/Makefile.in	/^ac_ct_FC = @ac_ct_FC@$/;"	m
ac_ct_FC	zoltan/fdriver/Makefile.in	/^ac_ct_FC = @ac_ct_FC@$/;"	m
ackTag	zoltan/lb/low_mem_lb_migrate.c	/^static int ackTag = 10000, dataTag = 20000, sizeTag=30000;$/;"	v	typeref:typename:int	file:
actual_arrays	zoltan/lb/lb_migrate.c	/^static int actual_arrays($/;"	f	typeref:typename:int	file:
actual_arrays	zoltan/lb/low_mem_lb_migrate.c	/^static int actual_arrays($/;"	f	typeref:typename:int	file:
add_around_vertex	zoltan/reftree/reftree_coarse_path.c	/^static int add_around_vertex(int vert, ZZ *zz)$/;"	f	typeref:typename:int	file:
add_around_vertices	zoltan/reftree/reftree_coarse_path.c	/^static int add_around_vertices(ZZ *zz)$/;"	f	typeref:typename:int	file:
add_graph_extra_weight	zoltan/lb/lb_eval.c	/^add_graph_extra_weight(ZZ *zz, int num_obj, int *edges_per_obj, int *vwgt_dim, float **vwgts)$/;"	f	typeref:typename:int	file:
add_neigh_pair	zoltan/reftree/reftree_coarse_path.c	/^static int add_neigh_pair(int v,int e1,int e2, ZZ *zz)$/;"	f	typeref:typename:int	file:
add_new_vals	zoltan/driver/dr_mm_readfile.c	/^static int add_new_vals(int *newvals, int newCount, $/;"	f	typeref:typename:int	file:
add_obj_weight	zoltan/phg/phg.h	/^  int add_obj_weight;       \/* Calculated weight: unit vertex, non-zeroes,$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
add_param	zoltan/params/set_param.c	/^static int add_param($/;"	f	typeref:typename:int	file:
add_to_cycle	zoltan/reftree/reftree_coarse_path.c	/^static int add_to_cycle(int element)$/;"	f	typeref:typename:int	file:
add_to_cycle_by_element	zoltan/reftree/reftree_coarse_path.c	/^static int add_to_cycle_by_element(int elementD, int indexB1, int indexB2)$/;"	f	typeref:typename:int	file:
add_to_list	zoltan/rcb/box_assign.c	/^void add_to_list($/;"	f	typeref:typename:void
add_to_to_add	zoltan/reftree/reftree_coarse_path.c	/^static int add_to_to_add(int element, ZZ *zz)$/;"	f	typeref:typename:int	file:
addr	zoltan/fort/ztypes.f90	/^   character(len=Zoltan_PTR_LENGTH) :: addr$/;"	k	type:Zoltan_PTR
addr	zoltan/fort/ztypes.f90	/^   type(Zoltan_PTR) :: addr$/;"	k	type:Zoltan_Struct
adj	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *adj;	\/* list of adjacent elements .$/;"	m	struct:Element_Description	typeref:typename:ZOLTAN_ID_TYPE *
adj	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: adj(/;"	k	type:ELEM_INFO
adj	zoltan/tpls/third_library_tools.h	/^  int *adj;          \/* Pointer to adjcny array *\/$/;"	m	struct:Edge_Info	typeref:typename:int *
adj_band	zoltan/zz/zz_const.h	/^  int *adj_band;       \/* bandwidth of each link *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int *
adj_blank	zoltan/driver/dr_const.h	/^  int     *adj_blank;   \/* NULL if not blanking, else 1\/0 for blanked\/not *\/$/;"	m	struct:Element_Description	typeref:typename:int *
adj_lat	zoltan/zz/zz_const.h	/^  int *adj_lat;        \/* latency of each link *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int *
adj_len	zoltan/driver/dr_const.h	/^  int      adj_len;	\/* allocated length of adj\/adj_proc\/edge_wgt arrays *\/$/;"	m	struct:Element_Description	typeref:typename:int
adj_len	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: adj_len /;"	k	type:ELEM_INFO
adj_proc	zoltan/driver/dr_const.h	/^  int     *adj_proc;	\/* list of processors for adjacent elements *\/$/;"	m	struct:Element_Description	typeref:typename:int *
adj_proc	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: adj_proc(/;"	k	type:ELEM_INFO
adjncy	zoltan/hier/hier.h	/^  ZOLTAN_GNO_TYPE *adjncy;              \/*    see Zoltan_Build_Graph *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:ZOLTAN_GNO_TYPE *
adjncy	zoltan/tpls/third_library.h	/^  indextype *adjncy;                    \/* adjency array (CSR) *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:indextype *
adjncy	zoltan/zz/zz_const.h	/^  int *adjncy;         \/* link list *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int *
adjproc	zoltan/hier/hier.h	/^  int *adjproc;                      \/* adjacent proc (in current MPI group) *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int *
adjproc	zoltan/tpls/third_library.h	/^  int * adjproc;                        \/* Array of procs ? *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int *
all	zoltan/Makefile.in	/^all: all-recursive$/;"	t
all	zoltan/driver/Makefile.in	/^all: all-am$/;"	t
all	zoltan/fdriver/Makefile.in	/^all: all-am$/;"	t
all	zoltan/fort/makefile	/^all: 			$(ZOD)\/cwrap.o $(ZOD)\/ztypes.o \\$/;"	t
all	zoltan/phg/phg_tree.h	/^  int all;  \/* All of Zoltan_PHG; this timer includes other timers and their$/;"	m	struct:phg_timer_indices	typeref:typename:int
all-am	zoltan/Makefile.in	/^all-am: Makefile $(LIBRARIES) $(HEADERS) all-local$/;"	t
all-am	zoltan/driver/Makefile.in	/^all-am: Makefile $(PROGRAMS)$/;"	t
all-am	zoltan/fdriver/Makefile.in	/^all-am: Makefile $(PROGRAMS)$/;"	t
all-local	zoltan/Makefile.am	/^all-local:$/;"	t
all-local	zoltan/Makefile.in	/^all-local:$/;"	t
all_allo.o	zoltan/Makefile.in	/^all_allo.o: $(srcdir)\/all\/all_allo.c$/;"	t
all_allo.obj	zoltan/Makefile.in	/^all_allo.obj: $(srcdir)\/all\/all_allo.c$/;"	t
allocVCycle	zoltan/phg/phg_Vcycle.c	/^static int allocVCycle(VCycle *v)$/;"	f	typeref:typename:int	file:
alloc_reftree_nodes	zoltan/reftree/reftree_build.c	/^static int alloc_reftree_nodes(ZZ *zz, ZOLTAN_REFTREE **node, int num_node,$/;"	f	typeref:typename:int	file:
alloc_stat	zoltan/fdriver/fdr_main.f90	/^  integer(Zoltan_INT) :: alloc_stat$/;"	v	program:fdriver
am__DEPENDENCIES_1	zoltan/driver/Makefile.in	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_1	zoltan/fdriver/Makefile.in	/^am__DEPENDENCIES_1 =$/;"	m
am__aclocal_m4_deps	zoltan/Makefile.in	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/ax_f90_module_case.m4 \\$/;"	m
am__aclocal_m4_deps	zoltan/driver/Makefile.in	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/ax_f90_module_case.m4 \\$/;"	m
am__aclocal_m4_deps	zoltan/fdriver/Makefile.in	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/ax_f90_module_case.m4 \\$/;"	m
am__base_list	zoltan/Makefile.in	/^am__base_list = \\$/;"	m
am__cd	zoltan/Makefile.in	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	zoltan/driver/Makefile.in	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	zoltan/fdriver/Makefile.in	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	zoltan/Makefile.in	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	zoltan/driver/Makefile.in	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	zoltan/fdriver/Makefile.in	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	zoltan/Makefile.in	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	zoltan/driver/Makefile.in	/^am__depfiles_maybe = depfiles$/;"	m
am__include	zoltan/Makefile.in	/^am__include = @am__include@$/;"	m
am__include	zoltan/driver/Makefile.in	/^am__include = @am__include@$/;"	m
am__include	zoltan/fdriver/Makefile.in	/^am__include = @am__include@$/;"	m
am__include_HEADERS_DIST	zoltan/Makefile.in	/^am__include_HEADERS_DIST = $(srcdir)\/include\/lbi_const.h \\$/;"	m
am__install_max	zoltan/Makefile.in	/^am__install_max = 40$/;"	m
am__installdirs	zoltan/Makefile.in	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \\$/;"	m
am__leading_dot	zoltan/Makefile.in	/^am__leading_dot = @am__leading_dot@$/;"	m
am__leading_dot	zoltan/driver/Makefile.in	/^am__leading_dot = @am__leading_dot@$/;"	m
am__leading_dot	zoltan/fdriver/Makefile.in	/^am__leading_dot = @am__leading_dot@$/;"	m
am__libzoltan_a_SOURCES_DIST	zoltan/Makefile.in	/^am__libzoltan_a_SOURCES_DIST = $(srcdir)\/all\/all_allo.c \\$/;"	m
am__mv	zoltan/Makefile.in	/^am__mv = mv -f$/;"	m
am__mv	zoltan/driver/Makefile.in	/^am__mv = mv -f$/;"	m
am__nobase_list	zoltan/Makefile.in	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	zoltan/Makefile.in	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	zoltan/Makefile.in	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	zoltan/Makefile.in	/^am__objects_1 = all_allo.$(OBJEXT)$/;"	m
am__objects_10	zoltan/Makefile.in	/^am__objects_10 = par_average.$(OBJEXT) par_bisect.$(OBJEXT) \\$/;"	m
am__objects_11	zoltan/Makefile.in	/^am__objects_11 = assign_param_vals.$(OBJEXT) bind_param.$(OBJEXT) \\$/;"	m
am__objects_12	zoltan/Makefile.in	/^am__objects_12 = build_graph.$(OBJEXT) postprocessing.$(OBJEXT) \\$/;"	m
am__objects_13	zoltan/Makefile.in	/^am__objects_13 = parmetis_interface.$(OBJEXT)$/;"	m
am__objects_15	zoltan/Makefile.in	/^am__objects_15 = phg_build.$(OBJEXT) phg_build_calls.$(OBJEXT) \\$/;"	m
am__objects_16	zoltan/Makefile.in	/^am__objects_16 = box_assign.$(OBJEXT) create_proc_list.$(OBJEXT) \\$/;"	m
am__objects_17	zoltan/Makefile.in	/^am__objects_17 = reftree_build.$(OBJEXT) reftree_coarse_path.$(OBJEXT) \\$/;"	m
am__objects_18	zoltan/Makefile.in	/^am__objects_18 = scotch_interface.$(OBJEXT)$/;"	m
am__objects_2	zoltan/Makefile.in	/^am__objects_2 = coloring.$(OBJEXT) color_test.$(OBJEXT) \\$/;"	m
am__objects_2	zoltan/driver/Makefile.in	/^am__objects_2 = zCPPdrive-dr_err.$(OBJEXT) \\$/;"	m
am__objects_20	zoltan/Makefile.in	/^am__objects_20 = block.$(OBJEXT) cyclic.$(OBJEXT) random.$(OBJEXT)$/;"	m
am__objects_21	zoltan/Makefile.in	/^am__objects_21 = timer_params.$(OBJEXT)$/;"	m
am__objects_22	zoltan/Makefile.in	/^am__objects_22 = comm_exchange_sizes.$(OBJEXT) \\$/;"	m
am__objects_23	zoltan/Makefile.in	/^am__objects_23 = zz_coord.$(OBJEXT) zz_gen_files.$(OBJEXT) \\$/;"	m
am__objects_24	zoltan/Makefile.in	/^am__objects_24 = ztypes.$(OBJEXT) cwrap.$(OBJEXT) \\$/;"	m
am__objects_3	zoltan/Makefile.in	/^am__objects_3 = graph.$(OBJEXT)$/;"	m
am__objects_4	zoltan/Makefile.in	/^am__objects_4 = divide_machine.$(OBJEXT) get_processor_name.$(OBJEXT) \\$/;"	m
am__objects_4	zoltan/driver/Makefile.in	/^am__objects_4 = zdrive-dr_err.$(OBJEXT) zdrive-dr_input.$(OBJEXT) \\$/;"	m
am__objects_5	zoltan/Makefile.in	/^am__objects_5 = hier.$(OBJEXT) hier_free_struct.$(OBJEXT)$/;"	m
am__objects_6	zoltan/Makefile.in	/^am__objects_6 = hsfc_box_assign.$(OBJEXT) hsfc.$(OBJEXT) \\$/;"	m
am__objects_7	zoltan/Makefile.in	/^am__objects_7 = lb_balance.$(OBJEXT) lb_box_assign.$(OBJEXT) \\$/;"	m
am__objects_8	zoltan/Makefile.in	/^am__objects_8 = matrix_build.$(OBJEXT) matrix_distribute.$(OBJEXT) \\$/;"	m
am__objects_9	zoltan/Makefile.in	/^am__objects_9 = order.$(OBJEXT) order_struct.$(OBJEXT) \\$/;"	m
am__quote	zoltan/Makefile.in	/^am__quote = @am__quote@$/;"	m
am__quote	zoltan/driver/Makefile.in	/^am__quote = @am__quote@$/;"	m
am__quote	zoltan/fdriver/Makefile.in	/^am__quote = @am__quote@$/;"	m
am__relativize	zoltan/Makefile.in	/^am__relativize = \\$/;"	m
am__strip_dir	zoltan/Makefile.in	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	zoltan/Makefile.in	/^am__tar = @am__tar@$/;"	m
am__tar	zoltan/driver/Makefile.in	/^am__tar = @am__tar@$/;"	m
am__tar	zoltan/fdriver/Makefile.in	/^am__tar = @am__tar@$/;"	m
am__uninstall_files_from_dir	zoltan/Makefile.in	/^am__uninstall_files_from_dir = { \\$/;"	m
am__untar	zoltan/Makefile.in	/^am__untar = @am__untar@$/;"	m
am__untar	zoltan/driver/Makefile.in	/^am__untar = @am__untar@$/;"	m
am__untar	zoltan/fdriver/Makefile.in	/^am__untar = @am__untar@$/;"	m
am__vpath_adj	zoltan/Makefile.in	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	zoltan/Makefile.in	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__zCPPdrive_SOURCES_DIST	zoltan/driver/Makefile.in	/^am__zCPPdrive_SOURCES_DIST = $(srcdir)\/dr_err.c $(srcdir)\/dr_input.c \\$/;"	m
am__zdrive_SOURCES_DIST	zoltan/driver/Makefile.in	/^am__zdrive_SOURCES_DIST = $(srcdir)\/dr_err.c $(srcdir)\/dr_input.c \\$/;"	m
am__zfdrive_SOURCES_DIST	zoltan/fdriver/Makefile.in	/^am__zfdrive_SOURCES_DIST = $(srcdir)\/mpi_h.f $(srcdir)\/farg_typical.f \\$/;"	m
am_libzoltan_a_OBJECTS	zoltan/Makefile.in	/^am_libzoltan_a_OBJECTS = $(am__objects_1) $(am__objects_2) \\$/;"	m
am_zCPPdrive_OBJECTS	zoltan/driver/Makefile.in	/^am_zCPPdrive_OBJECTS = $(am__objects_2) zCPPdrive-dr_mainCPP.$(OBJEXT) \\$/;"	m
am_zdrive_OBJECTS	zoltan/driver/Makefile.in	/^am_zdrive_OBJECTS = $(am__objects_4) zdrive-dr_main.$(OBJEXT) \\$/;"	m
am_zfdrive_OBJECTS	zoltan/fdriver/Makefile.in	/^am_zfdrive_OBJECTS = mpi_h.$(OBJEXT) $(am__objects_1) mmio.$(OBJEXT) \\$/;"	m
ancestor	zoltan/order/order_const.h	/^  int *ancestor;                \/* Out: father of block i *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
ancestor	zoltan/tpls/third_library_const.h	/^  indextype *ancestor;                \/* Out: father of block i *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
arg	zoltan/all/all_allo_const.h	/^typedef void ZOLTAN_FORT_FREE_INT_FN(int *arg);$/;"	t	typeref:typename:void ZOLTAN_FORT_FREE_INT_FN (int *)
arg	zoltan/coloring/bucket.h	/^typedef struct arg$/;"	s
array	zoltan/phg/phg_tree.h	/^  int * array;$/;"	m	struct:Zoltan_PHG_Tree_	typeref:typename:int *
assign_param_vals.o	zoltan/Makefile.in	/^assign_param_vals.o: $(srcdir)\/params\/assign_param_vals.c$/;"	t
assign_param_vals.obj	zoltan/Makefile.in	/^assign_param_vals.obj: $(srcdir)\/params\/assign_param_vals.c$/;"	t
assigned_to_me	zoltan/reftree/reftree.h	/^   int assigned_to_me;   \/* for a leaf, 1 if this element is assigned to$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:int
augment_search_structure	zoltan/zz/zz_gen_files.c	/^static int augment_search_structure(ZZ *zz, void *htptr,$/;"	f	typeref:typename:int	file:
average	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^  int average;$/;"	m	struct:dd_nh3_struct	typeref:typename:int	file:
avg_coord	zoltan/driver/dr_const.h	/^  double   avg_coord[3];\/* average coordinates (centroid) for the element *\/$/;"	m	struct:Element_Description	typeref:typename:double[3]
bal_tol	zoltan/phg/phg.h	/^  float bal_tol;                 \/* Balance tolerance in % of average *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
bal_tol_adjustment	zoltan/phg/phg.h	/^  float bal_tol_adjustment;      \/* balance tolerance adjustment;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
balanceTol	zoltan/phg/phg_rdivide.c	/^static float balanceTol(PHGPartParams *hgp, int part_dim, int pno, float *ratios,$/;"	f	typeref:typename:float	file:
bandwidth	zoltan/zz/zz_const.h	/^  int bandwidth;         \/* specify the bandwidth of the topology *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
base	zoltan/coloring/g2l_hash.h	/^    ZOLTAN_GNO_TYPE base, baseend; \/* base and baseend are inclusive gno's of local vertices *\/$/;"	m	struct:G2L_Hash	typeref:typename:ZOLTAN_GNO_TYPE
baseend	zoltan/coloring/g2l_hash.h	/^    ZOLTAN_GNO_TYPE base, baseend; \/* base and baseend are inclusive gno's of local vertices *\/$/;"	m	struct:G2L_Hash	typeref:typename:ZOLTAN_GNO_TYPE
bbox_extent	zoltan/hsfc/hsfc.h	/^   double     bbox_extent[3];    \/* length of each side of bounding box *\/$/;"	m	struct:HSFC_Data	typeref:typename:double[3]
bbox_hi	zoltan/hsfc/hsfc.h	/^   double     bbox_hi[3];        \/* smallest bounding box, high point *\/$/;"	m	struct:HSFC_Data	typeref:typename:double[3]
bbox_lo	zoltan/hsfc/hsfc.h	/^   double     bbox_lo[3];        \/* smallest bounding box, low point *\/$/;"	m	struct:HSFC_Data	typeref:typename:double[3]
bind_param.o	zoltan/Makefile.in	/^bind_param.o: $(srcdir)\/params\/bind_param.c$/;"	t
bind_param.obj	zoltan/Makefile.in	/^bind_param.obj: $(srcdir)\/params\/bind_param.c$/;"	t
bindir	zoltan/Makefile.in	/^bindir = @bindir@$/;"	m
bindir	zoltan/driver/Makefile.in	/^bindir = @bindir@$/;"	m
bindir	zoltan/fdriver/Makefile.in	/^bindir = @bindir@$/;"	m
bipartite	zoltan/graph/graph.h	/^  int          bipartite;$/;"	m	struct:ZG_	typeref:typename:int
bipartite	zoltan/matrix/zoltan_matrix.h	/^  int           bipartite;$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
bisec_split	zoltan/phg/phg_hypergraph.h	/^  int bisec_split;  \/* For fixed vertex partitioning via Recursive Bisection$/;"	m	struct:__anon371c30e80108	typeref:typename:int
bisector	zoltan/par/par_bisect.c	/^struct bisector {          \/* bisector cut info *\/$/;"	s	file:
blank	zoltan/driver/dr_const.h	/^  int     *blank;               \/* 1 if my element is blanked, 0 if not      *\/$/;"	m	struct:Mesh_Description	typeref:typename:int *
blank_count	zoltan/driver/dr_const.h	/^  int     blank_count;          \/* number of my elements that are blanked    *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
block.o	zoltan/Makefile.in	/^block.o: $(srcdir)\/simple\/block.c$/;"	t
block.obj	zoltan/Makefile.in	/^block.obj: $(srcdir)\/simple\/block.c$/;"	t
block_part	zoltan/simple/block.c	/^static void block_part(ZZ *zz, int num_obj, int wtflag, float *wgts, $/;"	f	typeref:typename:void	file:
border	zoltan/driver/dr_const.h	/^  int      border;	\/* set to 1 if this element is a border element *\/$/;"	m	struct:Element_Description	typeref:typename:int
border	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: border /;"	k	type:ELEM_INFO
boundary_exchange	zoltan/driver/dr_par_util.c	/^void boundary_exchange($/;"	f	typeref:typename:void
boundary_exchange	zoltan/fdriver/fdr_migrate.f90	/^subroutine boundary_exchange(/;"	s	module:dr_migrate
box_assign.o	zoltan/Makefile.in	/^box_assign.o: $(srcdir)\/rcb\/box_assign.c$/;"	t
box_assign.obj	zoltan/Makefile.in	/^box_assign.obj: $(srcdir)\/rcb\/box_assign.c$/;"	t
brdcst_cmd_info	zoltan/driver/dr_input.c	/^void brdcst_cmd_info ($/;"	f	typeref:typename:void
brdcst_cmd_info	zoltan/fdriver/fdr_input.f90	/^subroutine brdcst_cmd_info(/;"	s	module:dr_input
break_pnt	zoltan/ch/ch_input_read.c	/^static int break_pnt = LINE_LENGTH;	\/* place in sequence to pause *\/$/;"	v	typeref:typename:int	file:
breakpt	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^  int breakpt;$/;"	m	struct:dd_nh3_struct	typeref:typename:int	file:
broken_link	zoltan/reftree/reftree_coarse_path.c	/^static int broken_link(int *ierr, ZZ *zz)$/;"	f	typeref:typename:int	file:
bucket.o	zoltan/Makefile.in	/^bucket.o: $(srcdir)\/coloring\/bucket.c$/;"	t
bucket.obj	zoltan/Makefile.in	/^bucket.obj: $(srcdir)\/coloring\/bucket.c$/;"	t
buckets	zoltan/coloring/bucket.h	/^    Bucket_element **buckets; \/* actual pointers to bucket heads *\/$/;"	m	struct:arg	typeref:typename:Bucket_element **
buffer	zoltan/driver/dr_compress_const.h	/^  char * buffer;$/;"	m	struct:ZOLTAN_FILE_	typeref:typename:char *
build	zoltan/Makefile.in	/^build = @build@$/;"	m
build	zoltan/driver/Makefile.in	/^build = @build@$/;"	m
build	zoltan/fdriver/Makefile.in	/^build = @build@$/;"	m
build	zoltan/phg/phg_tree.h	/^  int build;  \/* hypergraph build time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
build_alias	zoltan/Makefile.in	/^build_alias = @build_alias@$/;"	m
build_alias	zoltan/driver/Makefile.in	/^build_alias = @build_alias@$/;"	m
build_alias	zoltan/fdriver/Makefile.in	/^build_alias = @build_alias@$/;"	m
build_cpu	zoltan/Makefile.in	/^build_cpu = @build_cpu@$/;"	m
build_cpu	zoltan/driver/Makefile.in	/^build_cpu = @build_cpu@$/;"	m
build_cpu	zoltan/fdriver/Makefile.in	/^build_cpu = @build_cpu@$/;"	m
build_elem_comm_maps	zoltan/driver/dr_maps.c	/^int build_elem_comm_maps(int proc, MESH_INFO_PTR mesh)$/;"	f	typeref:typename:int
build_elem_comm_maps	zoltan/driver/dr_mapsCPP.cpp	/^int build_elem_comm_maps(int proc, MESH_INFO_PTR mesh)$/;"	f	typeref:typename:int
build_elem_comm_maps	zoltan/fdriver/fdr_chaco_io.f90	/^logical function build_elem_comm_maps(/;"	f	module:dr_chaco_io
build_elem_dd	zoltan/driver/dr_dd.c	/^int build_elem_dd(MESH_INFO_PTR mesh) $/;"	f	typeref:typename:int
build_elem_dd	zoltan/driver/dr_ddCPP.cpp	/^int build_elem_dd(MESH_INFO_PTR mesh) $/;"	f	typeref:typename:int
build_graph.o	zoltan/Makefile.in	/^build_graph.o: $(srcdir)\/tpls\/build_graph.c$/;"	t
build_graph.obj	zoltan/Makefile.in	/^build_graph.obj: $(srcdir)\/tpls\/build_graph.c$/;"	t
build_os	zoltan/Makefile.in	/^build_os = @build_os@$/;"	m
build_os	zoltan/driver/Makefile.in	/^build_os = @build_os@$/;"	m
build_os	zoltan/fdriver/Makefile.in	/^build_os = @build_os@$/;"	m
build_triplet	zoltan/Makefile.in	/^build_triplet = @build@$/;"	m
build_triplet	zoltan/driver/Makefile.in	/^build_triplet = @build@$/;"	m
build_triplet	zoltan/fdriver/Makefile.in	/^build_triplet = @build@$/;"	m
build_vendor	zoltan/Makefile.in	/^build_vendor = @build_vendor@$/;"	m
build_vendor	zoltan/driver/Makefile.in	/^build_vendor = @build_vendor@$/;"	m
build_vendor	zoltan/fdriver/Makefile.in	/^build_vendor = @build_vendor@$/;"	m
builddir	zoltan/Makefile.in	/^builddir = @builddir@$/;"	m
builddir	zoltan/driver/Makefile.in	/^builddir = @builddir@$/;"	m
builddir	zoltan/fdriver/Makefile.in	/^builddir = @builddir@$/;"	m
bytes_max	zoltan/Utilities/Memory/mem.c	/^static size_t bytes_max = 0;	\/* Largest total of active allocations *\/$/;"	v	typeref:typename:size_t	file:
bytes_used	zoltan/Utilities/Memory/mem.c	/^static size_t bytes_used = 0;	\/* Sum of active allocations *\/$/;"	v	typeref:typename:size_t	file:
calc_nCandidates	zoltan/phg/phg_match.c	/^static int calc_nCandidates (int num_vtx, int procs)$/;"	f	typeref:typename:int	file:
calculate_cuts	zoltan/phg/phg_build.c	/^static int calculate_cuts(ZZ *zz, ZHG *zhg, $/;"	f	typeref:typename:int	file:
candidate	zoltan/phg/phg_match.c	/^    ZOLTAN_GNO_TYPE candidate;      \/* gno of candidate vertex *\/$/;"	m	struct:triplet	typeref:typename:ZOLTAN_GNO_TYPE	file:
cart_dim	zoltan/zz/zz_const.h	/^  int cart_dim[3];     \/* Number of nodes in each dimension *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int[3]
ch_dist_init	zoltan/ch/ch_init_dist.c	/^void ch_dist_init(int num_proc, int gnvtxs, PARIO_INFO_PTR pio_info,$/;"	f	typeref:typename:void
ch_dist_max_num_vtx	zoltan/ch/ch_init_dist.c	/^int ch_dist_max_num_vtx(short *assignments)$/;"	f	typeref:typename:int
ch_dist_num_vtx	zoltan/ch/ch_init_dist.c	/^int ch_dist_num_vtx($/;"	f	typeref:typename:int
ch_dist_proc	zoltan/ch/ch_init_dist.c	/^int ch_dist_proc(int v, short *assignments, int base)$/;"	f	typeref:typename:int
ch_dist_vtx_list	zoltan/ch/ch_init_dist.c	/^void ch_dist_vtx_list($/;"	f	typeref:typename:void
chaco_dist_graph	zoltan/ch/ch_dist_graph.c	/^int chaco_dist_graph($/;"	f	typeref:typename:int
chaco_dist_graph	zoltan/fdriver/fdr_chaco_io.f90	/^logical function chaco_dist_graph(/;"	f	module:dr_chaco_io
chaco_fill_elements	zoltan/driver/dr_chaco_io.c	/^int chaco_fill_elements($/;"	f	typeref:typename:int
chaco_init_local_ids	zoltan/driver/dr_chaco_io.c	/^void chaco_init_local_ids($/;"	f	typeref:typename:void
chaco_input_assign	zoltan/ch/ch_input_assign.c	/^int chaco_input_assign($/;"	f	typeref:typename:int
chaco_input_geom	zoltan/ch/ch_input_geom.c	/^int chaco_input_geom($/;"	f	typeref:typename:int
chaco_input_geom	zoltan/fdriver/fdr_chaco_io.f90	/^logical function chaco_input_geom(/;"	f	module:dr_chaco_io
chaco_input_graph	zoltan/ch/ch_input_graph.c	/^int chaco_input_graph($/;"	f	typeref:typename:int
chaco_input_graph	zoltan/fdriver/fdr_chaco_io.f90	/^logical function chaco_input_graph(/;"	f	module:dr_chaco_io
chaco_setup_mesh_struct	zoltan/driver/dr_chaco_io.c	/^int chaco_setup_mesh_struct($/;"	f	typeref:typename:int
check	zoltan/Makefile.in	/^check: check-recursive$/;"	t
check	zoltan/driver/Makefile.in	/^check: check-am$/;"	t
check	zoltan/fdriver/Makefile.in	/^check: check-am$/;"	t
check-am	zoltan/Makefile.in	/^check-am: all-am$/;"	t
check-am	zoltan/driver/Makefile.in	/^check-am: all-am$/;"	t
check-am	zoltan/fdriver/Makefile.in	/^check-am: all-am$/;"	t
check_graph	zoltan/phg/phg.h	/^  int check_graph;      \/* Flag indicating whether the input hypergraph should $/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
check_graph	zoltan/tpls/third_library.h	/^  int check_graph;                      \/* We have to check graph consistency *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
check_inp	zoltan/driver/dr_input.c	/^int check_inp ($/;"	f	typeref:typename:int
check_inp	zoltan/fdriver/fdr_input.f90	/^logical function check_inp(/;"	f	module:dr_input
check_input	zoltan/lb/lb_migrate.c	/^static int check_input($/;"	f	typeref:typename:int	file:
check_input	zoltan/lb/low_mem_lb_migrate.c	/^static int check_input($/;"	f	typeref:typename:int	file:
check_invert_input	zoltan/lb/lb_invert.c	/^static int check_invert_input($/;"	f	typeref:typename:int	file:
check_level	zoltan/driver/dr_param_file.c	/^static void check_level(int level) {$/;"	f	typeref:typename:void	file:
check_level	zoltan/driver/dr_param_fileCPP.cpp	/^static void check_level(int level) {$/;"	f	typeref:typename:void	file:
check_level	zoltan/fdriver/fdr_param_file.f90	/^subroutine check_level(/;"	s	module:dr_param_file
check_param.o	zoltan/Makefile.in	/^check_param.o: $(srcdir)\/params\/check_param.c$/;"	t
check_param.obj	zoltan/Makefile.in	/^check_param.obj: $(srcdir)\/params\/check_param.c$/;"	t
checks	zoltan/hier/hier.h	/^  int checks;                        \/* should we do sanity checks? *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
children	zoltan/reftree/reftree.h	/^   struct Zoltan_Reftree_Struct *children; \/* array of the children in the tree *\/$/;"	m	struct:Zoltan_Reftree_Struct	typeref:struct:Zoltan_Reftree_Struct *
choice	zoltan/fort/fwrap.f90	/^   integer(Zoltan_INT) :: choice$/;"	k	type:ZOLTAN_FN_TYPEF
choice	zoltan/fort/fwrap.f90	/^   integer(Zoltan_INT) :: choice$/;"	k	type:ZOLTAN_FN_TYPES
chunk_reader	zoltan/driver/dr_input_const.h	/^  int     chunk_reader;   \/* for very large matrix market files *\/$/;"	m	struct:Parallel_IO	typeref:typename:int
clean	zoltan/Makefile.in	/^clean: clean-recursive$/;"	t
clean	zoltan/driver/Makefile.in	/^clean: clean-am$/;"	t
clean	zoltan/fdriver/Makefile.in	/^clean: clean-am$/;"	t
clean	zoltan/fdriver/makefile	/^clean:$/;"	t
clean	zoltan/fort/makefile	/^clean:$/;"	t
clean-am	zoltan/Makefile.in	/^clean-am: clean-generic clean-libLIBRARIES mostlyclean-am$/;"	t
clean-am	zoltan/driver/Makefile.in	/^clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am$/;"	t
clean-am	zoltan/fdriver/Makefile.in	/^clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am$/;"	t
clean-generic	zoltan/Makefile.in	/^clean-generic:$/;"	t
clean-generic	zoltan/driver/Makefile.in	/^clean-generic:$/;"	t
clean-generic	zoltan/fdriver/Makefile.in	/^clean-generic:$/;"	t
clean-libLIBRARIES	zoltan/Makefile.in	/^clean-libLIBRARIES:$/;"	t
clean-noinstPROGRAMS	zoltan/driver/Makefile.in	/^clean-noinstPROGRAMS:$/;"	t
clean-noinstPROGRAMS	zoltan/fdriver/Makefile.in	/^clean-noinstPROGRAMS:$/;"	t
clean_string	zoltan/driver/dr_util.c	/^void clean_string(char inp_str[], const char *tokens)$/;"	f	typeref:typename:void
cleanup	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_Cleanup_fn *cleanup; \/* Functioned to free our hash data      *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_Cleanup_fn *
cm	zoltan/rcb/rib.h	/^    double    cm[3];            \/* center of mass *\/$/;"	m	struct:rib_tree	typeref:typename:double[3]
cmd_file	zoltan/fdriver/fdr_main.f90	/^  character(len=64)  :: cmd_file$/;"	v	program:fdriver
coarse	zoltan/phg/phg_tree.h	/^  int coarse;  \/* Coarsening time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
coarse_part_greedy	zoltan/phg/phg_serialpartition.c	/^static ZOLTAN_PHG_COARSEPARTITION_FN coarse_part_greedy;$/;"	v	typeref:typename:ZOLTAN_PHG_COARSEPARTITION_FN	file:
coarse_part_greedy	zoltan/phg/phg_serialpartition.c	/^static int coarse_part_greedy ($/;"	f	typeref:typename:int	file:
coarse_part_linear	zoltan/phg/phg_serialpartition.c	/^static ZOLTAN_PHG_COARSEPARTITION_FN coarse_part_linear;$/;"	v	typeref:typename:ZOLTAN_PHG_COARSEPARTITION_FN	file:
coarse_part_linear	zoltan/phg/phg_serialpartition.c	/^static int coarse_part_linear ($/;"	f	typeref:typename:int	file:
coarse_part_random	zoltan/phg/phg_serialpartition.c	/^static ZOLTAN_PHG_COARSEPARTITION_FN coarse_part_random;$/;"	v	typeref:typename:ZOLTAN_PHG_COARSEPARTITION_FN	file:
coarse_part_random	zoltan/phg/phg_serialpartition.c	/^static int coarse_part_random ($/;"	f	typeref:typename:int	file:
coarsepart	zoltan/phg/phg_tree.h	/^  int coarsepart;  \/* Coarse partitioning time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
coarsepartition_str	zoltan/phg/phg.h	/^  char coarsepartition_str[MAX_PARAM_STRING_LEN]; $/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
col_comm	zoltan/phg/phg_comm.h	/^  MPI_Comm col_comm; \/* my processor's column communicator *\/$/;"	m	struct:PHGCommStruct	typeref:typename:MPI_Comm
colorV	zoltan/matlab/plotcolors.m	/^        colorV = [0 0 1];$/;"	v
colorV	zoltan/matlab/plotcolors.m	/^        colorV = [0 1 0];$/;"	v
colorV	zoltan/matlab/plotcolors.m	/^        colorV = [0 1 1];$/;"	v
colorV	zoltan/matlab/plotcolors.m	/^        colorV = [1 0 0];$/;"	v
colorV	zoltan/matlab/plotcolors.m	/^    colorV = cmap(mod(cindex-1,diffColors)+1,:);$/;"	v
color_test.o	zoltan/Makefile.in	/^color_test.o: $(srcdir)\/coloring\/color_test.c$/;"	t
color_test.obj	zoltan/Makefile.in	/^color_test.obj: $(srcdir)\/coloring\/color_test.c$/;"	t
coloring.o	zoltan/Makefile.in	/^coloring.o: $(srcdir)\/coloring\/coloring.c$/;"	t
coloring.obj	zoltan/Makefile.in	/^coloring.obj: $(srcdir)\/coloring\/coloring.c$/;"	t
cols	zoltan/matlab/mmread.m	/^  cols = sizeinfo(2);$/;"	v
comerge	zoltan/phg/phg_tree.h	/^  int comerge;   \/* Part of coarsening *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
comm	zoltan/Utilities/Communication/comm.h	/^    MPI_Comm  comm;		\/* communicator for operation *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:MPI_Comm
comm	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  MPI_Comm comm;          \/* Dup of original MPI Comm(KDD)         *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:MPI_Comm
comm	zoltan/driver/dr_param_file.c	/^static MPI_Comm comm;$/;"	v	typeref:typename:MPI_Comm	file:
comm	zoltan/driver/dr_param_fileCPP.cpp	/^static MPI_Comm comm;$/;"	v	typeref:typename:MPI_Comm	file:
comm	zoltan/fdriver/fdr_param_file.f90	/^integer :: comm$/;"	v	module:dr_param_file
comm	zoltan/matrix/zoltan_matrix.h	/^  PHGComm         *comm;        \/* How data are distributed *\/$/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:PHGComm *
comm	zoltan/par/par_median_randomized.c	/^  MPI_Comm comm;$/;"	m	struct:_commStruct	typeref:typename:MPI_Comm	file:
comm	zoltan/phg/phg_hypergraph.h	/^  PHGComm *comm;  \/* this is a pointer to storage PHGPartParamsStruct:$/;"	m	struct:__anon371c30e80108	typeref:typename:PHGComm *
commStruct	zoltan/par/par_median_randomized.c	/^}commStruct;$/;"	t	typeref:struct:_commStruct	file:
comm_create.o	zoltan/Makefile.in	/^comm_create.o: $(srcdir)\/Utilities\/Communication\/comm_create.c$/;"	t
comm_create.obj	zoltan/Makefile.in	/^comm_create.obj: $(srcdir)\/Utilities\/Communication\/comm_create.c$/;"	t
comm_destroy.o	zoltan/Makefile.in	/^comm_destroy.o: $(srcdir)\/Utilities\/Communication\/comm_destroy.c$/;"	t
comm_destroy.obj	zoltan/Makefile.in	/^comm_destroy.obj: $(srcdir)\/Utilities\/Communication\/comm_destroy.c$/;"	t
comm_do.o	zoltan/Makefile.in	/^comm_do.o: $(srcdir)\/Utilities\/Communication\/comm_do.c$/;"	t
comm_do.obj	zoltan/Makefile.in	/^comm_do.obj: $(srcdir)\/Utilities\/Communication\/comm_do.c$/;"	t
comm_do_reverse.o	zoltan/Makefile.in	/^comm_do_reverse.o: $(srcdir)\/Utilities\/Communication\/comm_do_reverse.c$/;"	t
comm_do_reverse.obj	zoltan/Makefile.in	/^comm_do_reverse.obj: $(srcdir)\/Utilities\/Communication\/comm_do_reverse.c$/;"	t
comm_exchange_sizes.o	zoltan/Makefile.in	/^comm_exchange_sizes.o: $(srcdir)\/Utilities\/Communication\/comm_exchange_sizes.c$/;"	t
comm_exchange_sizes.obj	zoltan/Makefile.in	/^comm_exchange_sizes.obj: $(srcdir)\/Utilities\/Communication\/comm_exchange_sizes.c$/;"	t
comm_info.o	zoltan/Makefile.in	/^comm_info.o: $(srcdir)\/Utilities\/Communication\/comm_info.c$/;"	t
comm_info.obj	zoltan/Makefile.in	/^comm_info.obj: $(srcdir)\/Utilities\/Communication\/comm_info.c$/;"	t
comm_invert_map.o	zoltan/Makefile.in	/^comm_invert_map.o: $(srcdir)\/Utilities\/Communication\/comm_invert_map.c$/;"	t
comm_invert_map.obj	zoltan/Makefile.in	/^comm_invert_map.obj: $(srcdir)\/Utilities\/Communication\/comm_invert_map.c$/;"	t
comm_invert_plan.o	zoltan/Makefile.in	/^comm_invert_plan.o: $(srcdir)\/Utilities\/Communication\/comm_invert_plan.c$/;"	t
comm_invert_plan.obj	zoltan/Makefile.in	/^comm_invert_plan.obj: $(srcdir)\/Utilities\/Communication\/comm_invert_plan.c$/;"	t
comm_plan	zoltan/phg/phg_Vcycle.c	/^    struct Zoltan_Comm_Obj  *comm_plan;    $/;"	m	struct:tagVCycle	typeref:struct:Zoltan_Comm_Obj *	file:
comm_plan	zoltan/tpls/third_library.h	/^  ZOLTAN_COMM_OBJ *comm_plan;           \/* Communication plan used by scattering process *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:ZOLTAN_COMM_OBJ *
comm_resize.o	zoltan/Makefile.in	/^comm_resize.o: $(srcdir)\/Utilities\/Communication\/comm_resize.c$/;"	t
comm_resize.obj	zoltan/Makefile.in	/^comm_resize.obj: $(srcdir)\/Utilities\/Communication\/comm_resize.c$/;"	t
comm_sort_ints.o	zoltan/Makefile.in	/^comm_sort_ints.o: $(srcdir)\/Utilities\/Communication\/comm_sort_ints.c$/;"	t
comm_sort_ints.obj	zoltan/Makefile.in	/^comm_sort_ints.obj: $(srcdir)\/Utilities\/Communication\/comm_sort_ints.c$/;"	t
comment	zoltan/matlab/mmwrite.m	/^  comment = '';$/;"	v
commentline	zoltan/matlab/mmread.m	/^     commentline =  fgets(mmfile);$/;"	v
commentline	zoltan/matlab/mmread.m	/^  commentline = fgets(mmfile);$/;"	v
commentline	zoltan/matlab/mmread.m	/^commentline = fgets(mmfile);$/;"	v
communication_by_plan	zoltan/phg/phg_match.c	/^static int communication_by_plan (ZZ* zz, int sendcnt, int* dest, int* size, $/;"	f	typeref:typename:int	file:
comp	zoltan/driver/dr_mm_readfile.c	/^static int comp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
compar_indextype	zoltan/tpls/scotch_interface.c	/^static int compar_indextype(const void * a, const void * b)$/;"	f	typeref:typename:int	file:
compare_maps_with_ddirectory_results	zoltan/driver/dr_maps.c	/^static void compare_maps_with_ddirectory_results($/;"	f	typeref:typename:void	file:
compare_maps_with_ddirectory_results	zoltan/driver/dr_mapsCPP.cpp	/^static void compare_maps_with_ddirectory_results($/;"	f	typeref:typename:void	file:
compare_search	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^static int compare_search (const void *a, const void *b)$/;"	f	typeref:typename:int	file:
compare_sort	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^static int compare_sort (const void *a, const void *b)$/;"	f	typeref:typename:int	file:
completed	zoltan/matrix/zoltan_matrix.h	/^  int           completed;     \/* Matrix is ready to be specialized in HG or G *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
compute_RCB_box	zoltan/rcb/rcb.c	/^static void compute_RCB_box($/;"	f	typeref:typename:void	file:
compute_box	zoltan/rcb/rcb_box.c	/^static void compute_box($/;"	f	typeref:typename:void	file:
compute_only_part_changes	zoltan/tpls/third_library.h	/^  int  compute_only_part_changes;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int
compute_part_number	zoltan/phg/phg_tree.c	/^compute_part_number(Zoltan_PHG_Tree *tree)$/;"	f	typeref:typename:int *
compute_rib_direction	zoltan/rcb/rib.c	/^static int compute_rib_direction($/;"	f	typeref:typename:int	file:
compute_weight_sums	zoltan/par/par_bisect.c	/^static void compute_weight_sums($/;"	f	typeref:typename:void	file:
connect	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *connect;	\/* list of nodes that make up this element, the node$/;"	m	struct:Element_Description	typeref:typename:ZOLTAN_ID_TYPE *
connect	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: connect(/;"	k	type:ELEM_INFO
connectivity_cut	zoltan/phg/phg.h	/^  int connectivity_cut;     \/* 1: if cut_objective==connectivity,$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
coor	zoltan/phg/phg_hypergraph.h	/^  double *coor;             \/* Array of gathered coordinates returned from *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:double *
coor	zoltan/phg/phg_hypergraph.h	/^  double *coor;     \/* |V| long by CoordinateDim *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:double *
coord	zoltan/driver/dr_const.h	/^  float  **coord;	\/* array for the coordinates of the element.$/;"	m	struct:Element_Description	typeref:typename:float **
coord	zoltan/fdriver/fdr_const.f90	/^  real(Zoltan_FLOAT), pointer ::  coord(/;"	k	type:ELEM_INFO
copyKeys	zoltan/zz/zz_util_const.h	/^  int copyKeys;         \/* 1 - We create a copy of the added keys *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
coremove	zoltan/phg/phg_tree.h	/^  int coremove;   \/* Part of coarsening *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
coshuffle	zoltan/phg/phg_tree.h	/^  int coshuffle;   \/* Part of coarsening *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
cotheend	zoltan/phg/phg_tree.h	/^  int cotheend;   \/* Part of coarsening *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
count	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^  int count;$/;"	m	struct:dd_nh2_struct	typeref:typename:int	file:
counthi	zoltan/par/par_bisect.c	/^  ZOLTAN_GNO_TYPE countlo, counthi;   \/* # of dots at that position *\/$/;"	m	struct:bisector	typeref:typename:ZOLTAN_GNO_TYPE	file:
counthi	zoltan/par/par_median.c	/^  ZOLTAN_GNO_TYPE countlo, counthi;   \/* # of dots at that position *\/$/;"	m	struct:median	typeref:typename:ZOLTAN_GNO_TYPE	file:
counthi	zoltan/rcb/rcb.h	/^  ZOLTAN_GNO_TYPE countlo, counthi;   \/* # of dots at that position *\/$/;"	m	struct:rcb_median	typeref:typename:ZOLTAN_GNO_TYPE
countlo	zoltan/par/par_bisect.c	/^  ZOLTAN_GNO_TYPE countlo, counthi;   \/* # of dots at that position *\/$/;"	m	struct:bisector	typeref:typename:ZOLTAN_GNO_TYPE	file:
countlo	zoltan/par/par_median.c	/^  ZOLTAN_GNO_TYPE countlo, counthi;   \/* # of dots at that position *\/$/;"	m	struct:median	typeref:typename:ZOLTAN_GNO_TYPE	file:
countlo	zoltan/rcb/rcb.h	/^  ZOLTAN_GNO_TYPE countlo, counthi;   \/* # of dots at that position *\/$/;"	m	struct:rcb_median	typeref:typename:ZOLTAN_GNO_TYPE
countwd	zoltan/fdriver/mmio.f	/^      subroutine countwd(/;"	s
cpart	zoltan/phg/phg_tree.h	/^  int cpart;   \/* Coarse partitioning time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
cpgather	zoltan/phg/phg_tree.h	/^  int cpgather;   \/* Part of Coarse Partitioning *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
cplxformat	zoltan/matlab/mmwrite.m	/^  cplxformat = sprintf('%% .%dg %% .%dg\\n', precision,precision);$/;"	v
cplxformat	zoltan/matlab/mmwrite.m	/^  cplxformat = sprintf('%%d %%d %% .%dg %% .%dg\\n',precision,precision);$/;"	v
cprefine	zoltan/phg/phg_tree.h	/^  int cprefine;   \/* Part of Coarse Partitioning *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
cpu_wgt	zoltan/driver/dr_const.h	/^  float    cpu_wgt[MAX_CPU_WGTS]; \/* the computational weight(s) associated with the elem *\/$/;"	m	struct:Element_Description	typeref:typename:float[]
cpu_wgt	zoltan/fdriver/fdr_const.f90	/^  real(Zoltan_FLOAT)  :: cpu_wgt /;"	k	type:ELEM_INFO
create_Vtxdist	zoltan/ch/ch_init_dist.c	/^static void create_Vtxdist()$/;"	f	typeref:typename:void	file:
create_a_graph	zoltan/driver/dr_random_io.c	/^int create_a_graph($/;"	f	typeref:typename:int
create_edge_lists	zoltan/driver/dr_hg_io.c	/^static int create_edge_lists(int nMyPins, ZOLTAN_ID_TYPE *myPinI, ZOLTAN_ID_TYPE *myPinJ,$/;"	f	typeref:typename:int	file:
create_hash_table	zoltan/lb/lb_balance.c	/^static struct Hash_Node **create_hash_table(ZZ *zz, $/;"	f	typeref:struct:Hash_Node **	file:
create_import_lists	zoltan/lb/low_mem_lb_migrate.c	/^static int create_import_lists(ZZ *zz, int msglen, int src, int num,$/;"	f	typeref:typename:int	file:
create_proc_list.o	zoltan/Makefile.in	/^create_proc_list.o: $(srcdir)\/rcb\/create_proc_list.c$/;"	t
create_proc_list.obj	zoltan/Makefile.in	/^create_proc_list.obj: $(srcdir)\/rcb\/create_proc_list.c$/;"	t
create_random_input	zoltan/driver/dr_random_io.c	/^int create_random_input($/;"	f	typeref:typename:int
create_random_triangles	zoltan/driver/dr_random_io.c	/^int create_random_triangles($/;"	f	typeref:typename:int
create_reverse_plan	zoltan/Utilities/Communication/comm_do_reverse.c	/^static int create_reverse_plan( $/;"	f	typeref:typename:int	file:
ctags	zoltan/Makefile.in	/^ctags: CTAGS$/;"	t
ctags	zoltan/driver/Makefile.in	/^ctags: CTAGS$/;"	t
ctags	zoltan/fdriver/Makefile.in	/^ctags: CTAGS$/;"	t
ctags-recursive	zoltan/Makefile.in	/^ctags-recursive:$/;"	t
current_key	zoltan/zz/zz_map.c	/^#define current_key(/;"	d	file:
current_min_value	zoltan/coloring/bucket.h	/^  int current_min_value;$/;"	m	struct:arg	typeref:typename:int
currenti	zoltan/matlab/mmread.m	/^        currenti = j*rows;$/;"	v
cut	zoltan/rcb/rcb.h	/^  double    cut;        	\/* position of cut *\/$/;"	m	struct:rcb_tree	typeref:typename:double
cut	zoltan/rcb/rib.h	/^    double    cut;              \/* position of cut *\/$/;"	m	struct:rib_tree	typeref:typename:double
cut_dimension	zoltan/rcb/rcb.c	/^static int cut_dimension($/;"	f	typeref:typename:int	file:
cut_wgt	zoltan/include/zoltan_eval.h	/^  float cut_wgt[EVAL_SIZE]  ;   \/* The sum of the weights of the cut edges *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
cutl	zoltan/include/zoltan_eval.h	/^  float cutl[EVAL_SIZE];        \/* ConCut measure *\/$/;"	m	struct:_eval_hg_struct	typeref:typename:float[]
cutn	zoltan/include/zoltan_eval.h	/^  float cutn[EVAL_SIZE];        \/* NetCut measure *\/$/;"	m	struct:_eval_hg_struct	typeref:typename:float[]
cuts	zoltan/include/zoltan_eval.h	/^  float cuts[EVAL_SIZE];        \/* The number of cut edges *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
cval	zoltan/params/params_const.h	/^  char cval;$/;"	m	struct:Param_Utype	typeref:typename:char
cwrap.o	zoltan/Makefile.in	/^cwrap.o: $(srcdir)\/fort\/cwrap.c$/;"	t
cwrap.obj	zoltan/Makefile.in	/^cwrap.obj: $(srcdir)\/fort\/cwrap.c$/;"	t
cyclic.o	zoltan/Makefile.in	/^cyclic.o: $(srcdir)\/simple\/cyclic.c$/;"	t
cyclic.obj	zoltan/Makefile.in	/^cyclic.obj: $(srcdir)\/simple\/cyclic.c$/;"	t
cyclic_part	zoltan/simple/cyclic.c	/^static void cyclic_part(ZZ *zz, int num_obj, int wtflag, float *wgts, $/;"	f	typeref:typename:void	file:
data	zoltan/zz/zz_util_const.h	/^  intptr_t data;         \/* value *\/$/;"	m	struct:Zoltan_Map_Entry	typeref:typename:intptr_t
data2d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const int data2d[] = \/* nkey to 2 dimension conversion *\/$/;"	v	typeref:typename:unsigned const int[]
data3d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const data3d [] = {  \/* nkey to 3 dimension conversion *\/$/;"	v	typeref:typename:unsigned const[]
dataTag	zoltan/lb/low_mem_lb_migrate.c	/^static int ackTag = 10000, dataTag = 20000, sizeTag=30000;$/;"	v	typeref:typename:int	file:
data_type	zoltan/driver/dr_const.h	/^  enum DATA_TYPE data_type;     \/* Type of data stored in this data structure,$/;"	m	struct:Mesh_Description	typeref:enum:DATA_TYPE
datadir	zoltan/Makefile.in	/^datadir = @datadir@$/;"	m
datadir	zoltan/driver/Makefile.in	/^datadir = @datadir@$/;"	m
datadir	zoltan/fdriver/Makefile.in	/^datadir = @datadir@$/;"	m
datarootdir	zoltan/Makefile.in	/^datarootdir = @datarootdir@$/;"	m
datarootdir	zoltan/driver/Makefile.in	/^datarootdir = @datarootdir@$/;"	m
datarootdir	zoltan/fdriver/Makefile.in	/^datarootdir = @datarootdir@$/;"	m
dd	zoltan/driver/dr_const.h	/^  struct Zoltan_DD_Struct *dd;  \/* Only used C and Fortran test driver *\/$/;"	m	struct:Mesh_Description	typeref:struct:Zoltan_DD_Struct *
dd	zoltan/driver/dr_ddCPP.cpp	/^static Zoltan_DD *dd = NULL;$/;"	v	typeref:typename:Zoltan_DD *	file:
ddHedge	zoltan/phg/phg_hypergraph.h	/^  struct Zoltan_DD_Struct *ddHedge;$/;"	m	struct:Zoltan_HGraph	typeref:struct:Zoltan_DD_Struct *
ddHedge	zoltan/phg/phg_tree.h	/^  struct Zoltan_DD_Struct *ddHedge;$/;"	m	struct:Zoltan_PHG_LB_Data_	typeref:struct:Zoltan_DD_Struct *
ddX	zoltan/matrix/zoltan_matrix.h	/^  struct Zoltan_DD_Struct *ddX; \/* Map xGNO -> xGID, xpid *\/$/;"	m	struct:Zoltan_matrix_	typeref:struct:Zoltan_DD_Struct *
ddY	zoltan/matrix/zoltan_matrix.h	/^  struct Zoltan_DD_Struct *ddY; \/* Map yGNO -> yGID, ypid *\/$/;"	m	struct:Zoltan_matrix_	typeref:struct:Zoltan_DD_Struct *
dd_hash_user	zoltan/Utilities/DDirectory/DD_Set_Hash_Fn.c	/^static unsigned int dd_hash_user ($/;"	f	typeref:typename:unsigned int	file:
dd_nh1	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn1.c	/^static unsigned int dd_nh1 (ZOLTAN_ID_PTR gid, int gid_length,$/;"	f	typeref:typename:unsigned int	file:
dd_nh1_struct	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn1.c	/^struct dd_nh1_struct {$/;"	s	file:
dd_nh2	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^static unsigned int dd_nh2 (ZOLTAN_ID_PTR gid, int gid_length,$/;"	f	typeref:typename:unsigned int	file:
dd_nh2_cleanup	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^static void dd_nh2_cleanup (struct dd_nh2_struct *hashdata)$/;"	f	typeref:typename:void	file:
dd_nh2_struct	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^struct dd_nh2_struct {$/;"	s	file:
dd_nh3	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^static unsigned int dd_nh3 (ZOLTAN_ID_PTR gid, int gid_length,$/;"	f	typeref:typename:unsigned int	file:
dd_nh3_struct	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^struct dd_nh3_struct {$/;"	s	file:
debug_elements	zoltan/driver/dr_hg_io.c	/^static void debug_elements(int Proc, int Num_Proc, int num, ELEM_INFO_PTR el)$/;"	f	typeref:typename:void	file:
debug_graph_to_hg	zoltan/phg/phg_verbose.c	/^void debug_graph_to_hg($/;"	f	typeref:typename:void
debug_level	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^  int debug_level;$/;"	m	struct:dd_nh2_struct	typeref:typename:int	file:
debug_level	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int debug_level;        \/* Determines actions to multiple updates *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
debug_lists	zoltan/driver/dr_hg_io.c	/^static void debug_lists(int Proc, int Num_Proc, int nedge, int *index, ZOLTAN_ID_TYPE *vtx, int /;"	f	typeref:typename:void	file:
debug_pins	zoltan/driver/dr_hg_io.c	/^static void debug_pins(int Proc, int Num_Proc,  $/;"	f	typeref:typename:void	file:
def	zoltan/params/params_const.h	/^  int def;   \/* default flag *\/$/;"	m	struct:Param_Utype	typeref:typename:int
delete_flag	zoltan/matrix/zoltan_matrix.h	/^  int             delete_flag;  \/* 0x001: dist_y, 0x010: ystart, $/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:int
depcomp	zoltan/Makefile.in	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	zoltan/driver/Makefile.in	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depthCount	zoltan/par/par_median_randomized.c	/^static int depthCount = 0;$/;"	v	typeref:typename:int	file:
destroy_elem_dd	zoltan/driver/dr_ddCPP.cpp	/^void destroy_elem_dd()$/;"	f	typeref:typename:void
dim	zoltan/rcb/rcb.h	/^  int       dim;	        \/* dimension (012) of cut *\/$/;"	m	struct:rcb_tree	typeref:typename:int
dimension	zoltan/Utilities/Memory/mem.c	/^  struct dimension {$/;"	s	function:Zoltan_Array_Alloc	file:
dir	zoltan/matlab/zoltan.m	/^  dir = 1; $/;"	v
dist_hyperedges	zoltan/driver/dr_hg_io.c	/^static int dist_hyperedges($/;"	f	typeref:typename:int	file:
dist_x	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_GNO_TYPE *dist_x;      \/* Distribution on x axis *\/$/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:ZOLTAN_GNO_TYPE *
dist_x	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *dist_x;    \/* distributions of vertices to processor columns. Vertices$/;"	m	struct:__anon371c30e80108	typeref:typename:ZOLTAN_GNO_TYPE *
dist_y	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_GNO_TYPE *dist_y;      \/* Distribution on y axis *\/$/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:ZOLTAN_GNO_TYPE *
dist_y	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *dist_y;    \/* distribution of hyperedges to processor rows as above *\/    $/;"	m	struct:__anon371c30e80108	typeref:typename:ZOLTAN_GNO_TYPE *
distclean	zoltan/Makefile.in	/^distclean: distclean-recursive$/;"	t
distclean	zoltan/driver/Makefile.in	/^distclean: distclean-am$/;"	t
distclean	zoltan/fdriver/Makefile.in	/^distclean: distclean-am$/;"	t
distclean-am	zoltan/Makefile.in	/^distclean-am: clean-am distclean-compile distclean-generic \\$/;"	t
distclean-am	zoltan/driver/Makefile.in	/^distclean-am: clean-am distclean-compile distclean-generic \\$/;"	t
distclean-am	zoltan/fdriver/Makefile.in	/^distclean-am: clean-am distclean-compile distclean-generic \\$/;"	t
distclean-compile	zoltan/Makefile.in	/^distclean-compile:$/;"	t
distclean-compile	zoltan/driver/Makefile.in	/^distclean-compile:$/;"	t
distclean-compile	zoltan/fdriver/Makefile.in	/^distclean-compile:$/;"	t
distclean-generic	zoltan/Makefile.in	/^distclean-generic:$/;"	t
distclean-generic	zoltan/driver/Makefile.in	/^distclean-generic:$/;"	t
distclean-generic	zoltan/fdriver/Makefile.in	/^distclean-generic:$/;"	t
distclean-tags	zoltan/Makefile.in	/^distclean-tags:$/;"	t
distclean-tags	zoltan/driver/Makefile.in	/^distclean-tags:$/;"	t
distclean-tags	zoltan/fdriver/Makefile.in	/^distclean-tags:$/;"	t
distdir	zoltan/Makefile.in	/^distdir: $(DISTFILES)$/;"	t
distdir	zoltan/driver/Makefile.in	/^distdir: $(DISTFILES)$/;"	t
distdir	zoltan/fdriver/Makefile.in	/^distdir: $(DISTFILES)$/;"	t
divide_machine.o	zoltan/Makefile.in	/^divide_machine.o: $(srcdir)\/ha\/divide_machine.c$/;"	t
divide_machine.obj	zoltan/Makefile.in	/^divide_machine.obj: $(srcdir)\/ha\/divide_machine.c$/;"	t
dll	zoltan/ha/ha_ovis.h	/^  char dll[MAX_PARAM_STRING_LEN];$/;"	m	struct:OVIS_parameters	typeref:typename:char[]
do_match	zoltan/lb/lb_remap.c	/^static int do_match($/;"	f	typeref:typename:int	file:
docdir	zoltan/Makefile.in	/^docdir = @docdir@$/;"	m
docdir	zoltan/driver/Makefile.in	/^docdir = @docdir@$/;"	m
docdir	zoltan/fdriver/Makefile.in	/^docdir = @docdir@$/;"	m
dr_chaco_io	zoltan/fdriver/fdr_chaco_io.f90	/^module dr_chaco_io$/;"	m
dr_const	zoltan/fdriver/fdr_const.f90	/^module dr_const$/;"	m
dr_input	zoltan/fdriver/fdr_input.f90	/^module dr_input$/;"	m
dr_loadbal	zoltan/fdriver/fdr_loadbal.f90	/^module dr_loadbal$/;"	m
dr_migrate	zoltan/fdriver/fdr_migrate.f90	/^module dr_migrate$/;"	m
dr_mm_io	zoltan/fdriver/fdr_mm_io.f90	/^module dr_mm_io$/;"	m
dr_param_file	zoltan/fdriver/fdr_param_file.f90	/^module dr_param_file$/;"	m
dr_sort	zoltan/fdriver/fdr_sort.f90	/^module dr_sort$/;"	m
dr_sort2_index	zoltan/fdriver/fdr_sort.f90	/^recursive subroutine dr_sort2_index(/;"	s	module:dr_sort
dr_sort2_index_sub	zoltan/fdriver/fdr_sort.f90	/^subroutine dr_sort2_index_sub(/;"	s	module:dr_sort
dr_sort_index	zoltan/fdriver/fdr_sort.f90	/^recursive subroutine dr_sort_index(/;"	s	module:dr_sort
dr_sort_index_sub	zoltan/fdriver/fdr_sort.f90	/^subroutine dr_sort_index_sub(/;"	s	module:dr_sort
driver_eval	zoltan/driver/dr_eval.c	/^void driver_eval(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:void
dsk_list	zoltan/driver/dr_input_const.h	/^  int    *dsk_list;$/;"	m	struct:Parallel_IO	typeref:typename:int *
dsk_list	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT), pointer :: dsk_list(/;"	k	type:PARIO_INFO
dsk_list_cnt	zoltan/driver/dr_input_const.h	/^  int     dsk_list_cnt;$/;"	m	struct:Parallel_IO	typeref:typename:int
dsk_list_cnt	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: dsk_list_cnt$/;"	k	type:PARIO_INFO
dummy	zoltan/fort/zoltan_user_data.f90	/^   integer :: dummy$/;"	k	type:Zoltan_User_Data_1
dummy	zoltan/fort/zoltan_user_data.f90	/^   integer :: dummy$/;"	k	type:Zoltan_User_Data_2
dummy	zoltan/fort/zoltan_user_data.f90	/^   integer :: dummy$/;"	k	type:Zoltan_User_Data_3
dummy	zoltan/fort/zoltan_user_data.f90	/^   integer :: dummy$/;"	k	type:Zoltan_User_Data_4
dval	zoltan/params/params_const.h	/^  double dval;$/;"	m	struct:Param_Utype	typeref:typename:double
dvi	zoltan/Makefile.in	/^dvi: dvi-recursive$/;"	t
dvi	zoltan/driver/Makefile.in	/^dvi: dvi-am$/;"	t
dvi	zoltan/fdriver/Makefile.in	/^dvi: dvi-am$/;"	t
dvi-am	zoltan/Makefile.in	/^dvi-am:$/;"	t
dvi-am	zoltan/driver/Makefile.in	/^dvi-am:$/;"	t
dvi-am	zoltan/fdriver/Makefile.in	/^dvi-am:$/;"	t
dvidir	zoltan/Makefile.in	/^dvidir = @dvidir@$/;"	m
dvidir	zoltan/driver/Makefile.in	/^dvidir = @dvidir@$/;"	m
dvidir	zoltan/fdriver/Makefile.in	/^dvidir = @dvidir@$/;"	m
dynamicEntries	zoltan/zz/zz_util_const.h	/^  int dynamicEntries;   \/* 1 - entries allocated as they are added *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
eb_cnts	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *eb_cnts;	\/* number of elements in each element block  *\/$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE *
eb_cnts	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: eb_cnts(/;"	k	type:MESH_INFO
eb_etypes	zoltan/driver/dr_const.h	/^  int    *eb_etypes;            \/* element block element types               *\/$/;"	m	struct:Mesh_Description	typeref:typename:int *
eb_ids	zoltan/driver/dr_const.h	/^  int    *eb_ids;		\/* element block ids                         *\/$/;"	m	struct:Mesh_Description	typeref:typename:int *
eb_ids	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: eb_ids(/;"	k	type:MESH_INFO
eb_names	zoltan/driver/dr_const.h	/^  char  **eb_names;		\/* element block element names               *\/$/;"	m	struct:Mesh_Description	typeref:typename:char **
eb_names	zoltan/fdriver/fdr_const.f90	/^  character(len=MAX_EB_NAME_LEN), pointer :: eb_names(/;"	k	type:MESH_INFO
eb_nattrs	zoltan/driver/dr_const.h	/^  int    *eb_nattrs;		\/* number of attributes per element in each$/;"	m	struct:Mesh_Description	typeref:typename:int *
eb_nattrs	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: eb_nattrs(/;"	k	type:MESH_INFO
eb_nnodes	zoltan/driver/dr_const.h	/^  int    *eb_nnodes;		\/* number of nodes per element in each$/;"	m	struct:Mesh_Description	typeref:typename:int *
eb_nnodes	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: eb_nnodes(/;"	k	type:MESH_INFO
echo_cmd_file	zoltan/driver/dr_output.c	/^static void echo_cmd_file(FILE *fp, const char *cmd_file)$/;"	f	typeref:typename:void	file:
echo_cmd_file	zoltan/fdriver/fdr_main.f90	/^subroutine echo_cmd_file(/;"	s
ecmap_cnt	zoltan/driver/dr_const.h	/^  int    *ecmap_cnt;            \/* number of elements in each elemental$/;"	m	struct:Mesh_Description	typeref:typename:int *
ecmap_cnt	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: ecmap_cnt(/;"	k	type:MESH_INFO
ecmap_elemids	zoltan/driver/dr_const.h	/^  int    *ecmap_elemids;        \/* element ids of elements for all elemental$/;"	m	struct:Mesh_Description	typeref:typename:int *
ecmap_elemids	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: ecmap_elemids(/;"	k	type:MESH_INFO
ecmap_id	zoltan/driver/dr_const.h	/^  int    *ecmap_id;             \/* IDs of each elemental communication map.  *\/$/;"	m	struct:Mesh_Description	typeref:typename:int *
ecmap_id	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: ecmap_id(/;"	k	type:MESH_INFO
ecmap_neighids	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *ecmap_neighids;    \/* elements ids of neighboring elements $/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE *
ecmap_neighids	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: ecmap_neighids(/;"	k	type:MESH_INFO
ecmap_sideids	zoltan/driver/dr_const.h	/^  int    *ecmap_sideids;        \/* side ids of elements for all elemental $/;"	m	struct:Mesh_Description	typeref:typename:int *
ecmap_sideids	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: ecmap_sideids(/;"	k	type:MESH_INFO
edgeGID	zoltan/phg/phg_lookup.h	/^  ZOLTAN_ID_PTR edgeGID;    \/* edge global IDs *\/$/;"	m	struct:_hshEdge	typeref:typename:ZOLTAN_ID_PTR
edgeGID	zoltan/phg/phg_lookup.h	/^  ZOLTAN_ID_PTR edgeGID;    \/* edge global IDs *\/$/;"	m	struct:_myPin	typeref:typename:ZOLTAN_ID_PTR
edgeGID	zoltan/phg/phg_lookup.h	/^  ZOLTAN_ID_PTR edgeGID;   \/* edge global IDs *\/$/;"	m	struct:_myEW	typeref:typename:ZOLTAN_ID_PTR
edgeGNO	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *edgeGNO;        \/* edge global number *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE *
edgeHash	zoltan/phg/phg_lookup.h	/^  int           *edgeHash;  \/* process assigned edgeGID by hash function *\/$/;"	m	struct:_myPin	typeref:typename:int *
edgeHash	zoltan/phg/phg_lookup.h	/^  int           *edgeHash;  \/* process assigned this edge by hash function *\/$/;"	m	struct:_myEW	typeref:typename:int *
edgeWeightDim	zoltan/phg/phg_hypergraph.h	/^  int edgeWeightDim;        \/* Number of weights stored for each hyperedge *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
edge_scaling	zoltan/phg/phg.h	/^  int edge_scaling;              \/* type of hyperedge weight scaling *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
edge_weight_op	zoltan/phg/phg.h	/^  int edge_weight_op;   \/* What to do when more than one process returns a$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
edge_weight_operation	zoltan/phg/phg_build_calls.c	/^static int edge_weight_operation(ZZ *zz, float *dest, float *src, int ew_dim, int ew_op, int len/;"	f	typeref:typename:int	file:
edge_wgt	zoltan/driver/dr_const.h	/^  float   *edge_wgt;	\/* edge weights for adjacent elements *\/$/;"	m	struct:Element_Description	typeref:typename:float *
edge_wgt	zoltan/fdriver/fdr_const.f90	/^  real(Zoltan_FLOAT), pointer :: edge_wgt(/;"	k	type:ELEM_INFO
edge_wgt_dim	zoltan/hier/hier.h	/^  int obj_wgt_dim, edge_wgt_dim;     \/* object and edge weight dimensions *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
edge_wgt_dim	zoltan/tpls/third_library.h	/^  int edge_wgt_dim;                     \/* Number of weights by edge *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
egid	zoltan/phg/phg_build_calls.c	/^  ZOLTAN_ID_PTR egid;$/;"	m	struct:Convert_To_CSR::_hash_node	typeref:typename:ZOLTAN_ID_PTR	file:
eigenvectors	zoltan/zz/zz_coord.c	/^static int eigenvectors(double (*m)[3], double (*evecs)[3], int dim)$/;"	f	typeref:typename:int	file:
ele	zoltan/zz/zz_heap.h	/^   int   *ele;$/;"	m	struct:__anon5ef29df60108	typeref:typename:int *
elem_array_len	zoltan/driver/dr_const.h	/^  int     elem_array_len;	\/* length that the ELEM_INFO array is$/;"	m	struct:Mesh_Description	typeref:typename:int
elem_array_len	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: elem_array_len /;"	k	type:MESH_INFO
elem_blk	zoltan/driver/dr_const.h	/^  int      elem_blk;    \/* element block number which this element is in *\/$/;"	m	struct:Element_Description	typeref:typename:int
elem_blk	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: elem_blk /;"	k	type:ELEM_INFO
elem_dim	zoltan/reftree/reftree_coarse_path.c	/^static int *elem_dim;$/;"	v	typeref:typename:int *	file:
elem_id	zoltan/driver/dr_maps.c	/^  int      *elem_id;$/;"	m	struct:map_list_head	typeref:typename:int *	file:
elem_id	zoltan/driver/dr_mapsCPP.cpp	/^  int *elem_id;$/;"	m	struct:map_list_head	typeref:typename:int *	file:
elem_id	zoltan/fdriver/fdr_chaco_io.f90	/^  integer(Zoltan_INT), pointer :: elem_id(/;"	k	type:map_list_head
element_list	zoltan/reftree/reftree_coarse_path.c	/^static int **element_list;$/;"	v	typeref:typename:int **	file:
element_list_dim	zoltan/reftree/reftree_coarse_path.c	/^static int element_list_dim;$/;"	v	typeref:typename:int	file:
element_swap	zoltan/reftree/reftree_coarse_path.c	/^static int element_swap(int *ierr, ZZ *zz)$/;"	f	typeref:typename:int	file:
element_swap_recur	zoltan/reftree/reftree_coarse_path.c	/^static int element_swap_recur(int element, int *ierr, ZZ *zz)$/;"	f	typeref:typename:int	file:
elements	zoltan/coloring/bucket.h	/^    Bucket_element *elements; \/* for direct access to bucket elements$/;"	m	struct:arg	typeref:typename:Bucket_element *
elements	zoltan/driver/dr_const.h	/^  ELEM_INFO_PTR elements;       \/* array of elements that are in the mesh.   *\/$/;"	m	struct:Mesh_Description	typeref:typename:ELEM_INFO_PTR
elements	zoltan/fdriver/fdr_const.f90	/^  type(ELEM_INFO), pointer :: elements(/;"	k	type:MESH_INFO
enforceSquare	zoltan/matrix/zoltan_matrix.h	/^  int enforceSquare;           \/* Want to build a graph *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
entries	zoltan/matlab/mmread.m	/^   entries = nnz(A);$/;"	v
entries	zoltan/matlab/mmread.m	/^  entries = rows*cols;$/;"	v
entries	zoltan/matlab/mmread.m	/^  entries = sizeinfo(3);$/;"	v
entries	zoltan/zz/zz_util_const.h	/^  ZOLTAN_ENTRY **entries; \/* hash array, length max_index + 1 *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:ZOLTAN_ENTRY **
entry_count	zoltan/zz/zz_util_const.h	/^  int entry_count;      \/* how many entries have been added to the map *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
err	zoltan/matlab/mmwrite.m	/^     err = -1;$/;"	v
err	zoltan/matlab/mmwrite.m	/^     err = -2$/;"	v
err_mesg	zoltan/driver/dr_err_const.h	/^  char *err_mesg;$/;"	m	struct:error_message	typeref:typename:char *
errcheck	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int              errcheck;   \/* Error checking(inconsistent updates) *\/$/;"	m	struct:DD_Node	typeref:typename:int
errexit	zoltan/phg/phg_util.h	/^#define errexit /;"	d
error	zoltan/fdriver/fdr_main.f90	/^  integer(Zoltan_INT) :: error,/;"	v	program:fdriver
error_add	zoltan/driver/dr_err.c	/^void error_add(int level, const char *message, const char *filename, int line_no)$/;"	f	typeref:typename:void
error_cnt	zoltan/driver/dr_err.c	/^static int error_cnt = 0;$/;"	v	typeref:typename:int	file:
error_info	zoltan/driver/dr_err.c	/^static ERROR_MSG_PTR error_info;$/;"	v	typeref:typename:ERROR_MSG_PTR	file:
error_lev	zoltan/driver/dr_err.c	/^static int error_lev = 3;$/;"	v	typeref:typename:int	file:
error_message	zoltan/driver/dr_err_const.h	/^struct error_message$/;"	s
error_report	zoltan/driver/dr_err.c	/^void error_report(int Proc)$/;"	f	typeref:typename:void
esize	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *esize;      \/* global edge size; nEdge long *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:ZOLTAN_GNO_TYPE *
esizes	zoltan/phg/phg_lookup.h	/^  int           *esizes;    \/* local size in pins of each hyperedge *\/$/;"	m	struct:_myPin	typeref:typename:int *
ev	zoltan/rcb/rib.h	/^    double    ev[3];            \/* perpendicular direction from cut *\/$/;"	m	struct:rib_tree	typeref:typename:double[3]
eval_cut_quality	zoltan/par/par_bisect.c	/^static double eval_cut_quality($/;"	f	typeref:typename:double	file:
ewgt	zoltan/phg/phg_hypergraph.h	/^  float *ewgt;    \/* weights of hypergraph edges, nEdge long by EdgeWeightDim *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:float *
ewgt_dim	zoltan/driver/dr_const.h	/^  int     ewgt_dim;             \/* number of weights per graph edge.         *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
ewgts	zoltan/hier/hier.h	/^  float *ewgts;                      \/* edge weights for intermediate struct *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:float *
ewgts	zoltan/tpls/third_library.h	/^  weighttype * ewgts;                   \/* Array of edge weights *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:weighttype *
exchange	zoltan/par/par_median_randomized.c	/^#define exchange(/;"	d	file:
exec_prefix	zoltan/Makefile.in	/^exec_prefix = @exec_prefix@$/;"	m
exec_prefix	zoltan/driver/Makefile.in	/^exec_prefix = @exec_prefix@$/;"	m
exec_prefix	zoltan/fdriver/Makefile.in	/^exec_prefix = @exec_prefix@$/;"	m
execinclude	zoltan/Makefile.am	/^execincludedir = $(includedir)$/;"	d
execincludedir	zoltan/Makefile.am	/^execincludedir = $(includedir)$/;"	m
execincludedir	zoltan/Makefile.in	/^execincludedir = $(includedir)$/;"	m
exp_gids	zoltan/tpls/third_library.h	/^  ZOLTAN_ID_PTR *exp_gids;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:ZOLTAN_ID_PTR *
exp_lids	zoltan/tpls/third_library.h	/^  ZOLTAN_ID_PTR *exp_lids;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:ZOLTAN_ID_PTR *
exp_part	zoltan/tpls/third_library.h	/^  int **exp_part;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int **
exp_procs	zoltan/tpls/third_library.h	/^  int **exp_procs;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int **
export_it	zoltan/reftree/reftree_part.c	/^static int export_it(ZOLTAN_REFTREE *subroot, ZZ *zz, int *ierr)$/;"	f	typeref:typename:int	file:
fan_in_edge_global_ids	zoltan/zz/zz_gen_files.c	/^static ZOLTAN_GNO_TYPE fan_in_edge_global_ids(ZZ *zz, int numEdges, ZOLTAN_ID_PTR egids)$/;"	f	typeref:typename:ZOLTAN_GNO_TYPE	file:
farg_nagf95.o	zoltan/fdriver/Makefile.in	/^farg_nagf95.o: $(srcdir)\/farg_nagf95.f$/;"	t
farg_nagf95.obj	zoltan/fdriver/Makefile.in	/^farg_nagf95.obj: $(srcdir)\/farg_nagf95.f$/;"	t
farg_typical.o	zoltan/fdriver/Makefile.in	/^farg_typical.o: $(srcdir)\/farg_typical.f$/;"	t
farg_typical.obj	zoltan/fdriver/Makefile.in	/^farg_typical.obj: $(srcdir)\/farg_typical.f$/;"	t
fast_build_base	zoltan/matrix/zoltan_matrix.h	/^  int fast_build_base;         \/* smallest GID (typically 0 or 1); for fast$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
fcopy	zoltan/driver/dr_exoII_io.c	/^void fcopy(char *in, char *out)$/;"	f	typeref:typename:void
fcopy	zoltan/driver/dr_exoII_ioCPP.cpp	/^void fcopy(char *in, char *out)$/;"	f	typeref:typename:void
fdr_chaco_io.o	zoltan/fdriver/Makefile.in	/^fdr_chaco_io.o: $(srcdir)\/fdr_chaco_io.f90$/;"	t
fdr_chaco_io.obj	zoltan/fdriver/Makefile.in	/^fdr_chaco_io.obj: $(srcdir)\/fdr_chaco_io.f90$/;"	t
fdr_const.o	zoltan/fdriver/Makefile.in	/^fdr_const.o: $(srcdir)\/fdr_const.f90$/;"	t
fdr_const.obj	zoltan/fdriver/Makefile.in	/^fdr_const.obj: $(srcdir)\/fdr_const.f90$/;"	t
fdr_input.o	zoltan/fdriver/Makefile.in	/^fdr_input.o: $(srcdir)\/fdr_input.f90$/;"	t
fdr_input.obj	zoltan/fdriver/Makefile.in	/^fdr_input.obj: $(srcdir)\/fdr_input.f90$/;"	t
fdr_loadbal.o	zoltan/fdriver/Makefile.in	/^fdr_loadbal.o: $(srcdir)\/fdr_loadbal.f90$/;"	t
fdr_loadbal.obj	zoltan/fdriver/Makefile.in	/^fdr_loadbal.obj: $(srcdir)\/fdr_loadbal.f90$/;"	t
fdr_main.o	zoltan/fdriver/Makefile.in	/^fdr_main.o: $(srcdir)\/fdr_main.f90$/;"	t
fdr_main.obj	zoltan/fdriver/Makefile.in	/^fdr_main.obj: $(srcdir)\/fdr_main.f90$/;"	t
fdr_migrate.o	zoltan/fdriver/Makefile.in	/^fdr_migrate.o: $(srcdir)\/fdr_migrate.f90$/;"	t
fdr_migrate.obj	zoltan/fdriver/Makefile.in	/^fdr_migrate.obj: $(srcdir)\/fdr_migrate.f90$/;"	t
fdr_mm_io.o	zoltan/fdriver/Makefile.in	/^fdr_mm_io.o: $(srcdir)\/fdr_mm_io.f90$/;"	t
fdr_mm_io.obj	zoltan/fdriver/Makefile.in	/^fdr_mm_io.obj: $(srcdir)\/fdr_mm_io.f90$/;"	t
fdr_param_file.o	zoltan/fdriver/Makefile.in	/^fdr_param_file.o: $(srcdir)\/fdr_param_file.f90$/;"	t
fdr_param_file.obj	zoltan/fdriver/Makefile.in	/^fdr_param_file.obj: $(srcdir)\/fdr_param_file.f90$/;"	t
fdr_sort.o	zoltan/fdriver/Makefile.in	/^fdr_sort.o: $(srcdir)\/fdr_sort.f90$/;"	t
fdr_sort.obj	zoltan/fdriver/Makefile.in	/^fdr_sort.obj: $(srcdir)\/fdr_sort.f90$/;"	t
fdriver	zoltan/fdriver/fdr_main.f90	/^program fdriver$/;"	p
fget_strided_stats	zoltan/lb/lb_eval.c	/^static void fget_strided_stats(float *v, int stride, int offset, int len,$/;"	f	typeref:typename:void	file:
fhsfc	zoltan/hsfc/hsfc.h	/^   double    (*fhsfc)(ZZ*, double*);  \/* space filling curve function *\/$/;"	m	struct:HSFC_Data	typeref:typename:double (*)(ZZ *,double *)
field	zoltan/matlab/mmread.m	/^field = lower(field);$/;"	v
file	zoltan/Utilities/Memory/mem.c	/^  char  file[MAX_STRING_LEN+1];   	\/* file name *\/$/;"	m	struct:malloc_debug_data	typeref:typename:char[]	file:
file_comp	zoltan/driver/dr_input_const.h	/^  ZOLTAN_FILETYPE file_comp;  \/* whether the file is compressed and how      *\/$/;"	m	struct:Parallel_IO	typeref:typename:ZOLTAN_FILETYPE
file_type	zoltan/driver/dr_input_const.h	/^  int     file_type;    \/* input file type *\/$/;"	m	struct:Parallel_IO	typeref:typename:int
file_type	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: file_type /;"	k	type:PARIO_INFO
filebz	zoltan/driver/dr_compress_const.h	/^    BZFILE * filebz;$/;"	m	union:ZOLTAN_FILE_::__anon279889e4010a	typeref:typename:BZFILE *
filegz	zoltan/driver/dr_compress_const.h	/^    gzFile filegz;$/;"	m	union:ZOLTAN_FILE_::__anon279889e4010a	typeref:typename:gzFile
filename	zoltan/driver/dr_err_const.h	/^  char *filename;$/;"	m	struct:error_message	typeref:typename:char *
fileunc	zoltan/driver/dr_compress_const.h	/^    FILE * fileunc;$/;"	m	union:ZOLTAN_FILE_::__anon279889e4010a	typeref:typename:FILE *
fill_elements	zoltan/fdriver/fdr_chaco_io.f90	/^logical function fill_elements(/;"	f	module:dr_chaco_io
final_migrate	zoltan/hier/hier.c	/^static int final_migrate($/;"	f	typeref:typename:int	file:
final_output	zoltan/matrix/zoltan_matrix.h	/^  int final_output;            \/* final_output flag, not used yet *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
final_output	zoltan/phg/phg.h	/^  int final_output;     \/* Prints final timing and quality info at end of PHG$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
final_output	zoltan/tpls/third_library.h	/^  int final_output;                     \/* Do some output computations *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
final_partition	zoltan/hsfc/hsfc.h	/^   Partition *final_partition;$/;"	m	struct:HSFC_Data	typeref:typename:Partition *
finaloutput	zoltan/phg/phg_tree.h	/^  int finaloutput;  \/* printing final output time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
findAndSaveLeftAloneVertices	zoltan/phg/phg.c	/^static int findAndSaveLeftAloneVertices(ZZ *zz, HGraph *hg, int p, $/;"	f	typeref:typename:int	file:
find_adjacency	zoltan/driver/dr_exoII_io.c	/^static int find_adjacency(int Proc, MESH_INFO_PTR mesh,$/;"	f	typeref:typename:int	file:
find_adjacency	zoltan/driver/dr_exoII_ioCPP.cpp	/^static int find_adjacency(int Proc, MESH_INFO_PTR mesh,$/;"	f	typeref:typename:int	file:
find_in_hash	zoltan/driver/dr_migrate.c	/^int find_in_hash($/;"	f	typeref:typename:int
find_inout	zoltan/reftree/reftree_build.c	/^static int find_inout(ZZ *zz,int level,int num_child,int *num_vert,int *vert1,$/;"	f	typeref:typename:int	file:
find_inout	zoltan/reftree/reftree_coarse_path.c	/^static int find_inout(int elem, int pprev, int prevprev,$/;"	f	typeref:typename:int	file:
find_inter	zoltan/driver/dr_util.c	/^int find_inter(const ZOLTAN_ID_TYPE set1[], const ZOLTAN_ID_TYPE set2[], const int length1,$/;"	f	typeref:typename:int
find_interval_in_tree	zoltan/phg/phg_tree.c	/^find_interval_in_tree(Zoltan_PHG_Tree *tree, int *interval)$/;"	f	typeref:typename:int
find_max	zoltan/driver/dr_util.c	/^ZOLTAN_ID_TYPE find_max(const ZOLTAN_ID_TYPE list_length, const ZOLTAN_ID_TYPE list[])$/;"	f	typeref:typename:ZOLTAN_ID_TYPE
find_min	zoltan/driver/dr_util.c	/^ZOLTAN_ID_TYPE find_min(const ZOLTAN_ID_TYPE list_length, const ZOLTAN_ID_TYPE list[])$/;"	f	typeref:typename:ZOLTAN_ID_TYPE
find_msg_size	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  size_t find_msg_size;   \/* Total allocation for DD_FIND_MSG       *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:size_t
find_surnd_elem	zoltan/driver/dr_exoII_io.c	/^static int find_surnd_elem(MESH_INFO_PTR mesh, int **sur_elem, int *nsurnd,$/;"	f	typeref:typename:int	file:
find_surnd_elem	zoltan/driver/dr_exoII_ioCPP.cpp	/^static int find_surnd_elem(MESH_INFO_PTR mesh, int **sur_elem, int *nsurnd,$/;"	f	typeref:typename:int	file:
finer	zoltan/phg/phg_Vcycle.c	/^    struct tagVCycle *finer; $/;"	m	struct:tagVCycle	typeref:struct:tagVCycle *	file:
first	zoltan/driver/dr_param_file.c	/^  struct zoltanParams_list_entry *first;$/;"	m	struct:zoltanParams_hier_struct	typeref:struct:zoltanParams_list_entry *	file:
first	zoltan/driver/dr_param_fileCPP.cpp	/^  struct zoltanParams_list_entry *first;$/;"	m	struct:zoltanParams_hier_struct	typeref:struct:zoltanParams_list_entry *	file:
first	zoltan/fdriver/fdr_param_file.f90	/^   type (ztnPrm_list_entry), pointer :: first$/;"	k	type:ztnPrm_hier_struct
first_char	zoltan/driver/dr_hg_io.c	/^static char *first_char(char *buf, size_t max)$/;"	f	typeref:typename:char *	file:
fixObj	zoltan/graph/graph.h	/^  int          fixObj;$/;"	m	struct:ZG_	typeref:typename:int
fixed	zoltan/phg/phg_hypergraph.h	/^  int *fixed;               \/* size nObj, part assignments for fixed vertices *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
fixed_part	zoltan/driver/dr_const.h	/^  int      fixed_part;  \/* Partition to which the element should be fixed;$/;"	m	struct:Element_Description	typeref:typename:int
fixed_part	zoltan/phg/phg_hypergraph.h	/^  int *fixed_part;       \/* an array of size |V| containing part assignments of fixed$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
fixed_vertices	zoltan/graph/graph.h	/^  int         *fixed_vertices; $/;"	m	struct:ZG_	typeref:typename:int *
float_ewgts	zoltan/tpls/third_library.h	/^  float * float_ewgts;$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:float *
flush_line	zoltan/ch/ch_input_read.c	/^static void flush_line($/;"	f	typeref:typename:void	file:
fm2_move_vertex_oneway	zoltan/phg/phg_refinement.c	/^static void fm2_move_vertex_oneway(int v, HGraph *hg, Partition part, $/;"	f	typeref:typename:void	file:
fm2_move_vertex_oneway_nonroot	zoltan/phg/phg_refinement.c	/^static void fm2_move_vertex_oneway_nonroot(int v, HGraph *hg, Partition part, $/;"	f	typeref:typename:void	file:
fm_loop_limit	zoltan/phg/phg.h	/^  int fm_loop_limit;    \/* Number of FM loops (if the refinement is FM) *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
fm_max_neg_move	zoltan/phg/phg.h	/^  int fm_max_neg_move;  \/* Maximum number of vertex moves with negative gain;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
fmix32	zoltan/zz/murmur3.c	/^static FORCE_INLINE uint32_t fmix32 ( uint32_t h )$/;"	f	typeref:typename:FORCE_INLINE uint32_t	file:
format	zoltan/driver/dr_const.h	/^  int     format;               \/* rows (edges) or columns (vertices) *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
fort_free_int	zoltan/fort/fwrap.f90	/^subroutine fort_free_int(/;"	s	module:zoltan
fort_malloc_int	zoltan/fort/fwrap.f90	/^subroutine fort_malloc_int(/;"	s	module:zoltan
fort_malloc_set_struct	zoltan/fort/fwrap.f90	/^subroutine fort_malloc_set_struct(/;"	s	module:zoltan
fp	zoltan/matlab/zoltPartSpy.m	/^  fp = fopen(partFilename, 'r');$/;"	v
fp	zoltan/matlab/zoltan.m	/^fp = fopen('matlab.out.1.0', 'r');$/;"	v
fp	zoltan/matlab/zoltan.m	/^fp = fopen('zdrive.inp', 'a');$/;"	v
free	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int              free;       \/* flag indicating whether node is$/;"	m	struct:DD_Node	typeref:typename:int
free_element_arrays	zoltan/driver/dr_elem_util.c	/^void free_element_arrays(ELEM_INFO *elem, MESH_INFO_PTR mesh)$/;"	f	typeref:typename:void
free_element_arrays	zoltan/fdriver/fdr_chaco_io.f90	/^subroutine free_element_arrays(/;"	s	module:dr_chaco_io
free_hash_table	zoltan/lb/lb_balance.c	/^static void free_hash_table(struct Hash_Node **ht, int tableSize)$/;"	f	typeref:typename:void	file:
free_lists	zoltan/reftree/reftree_coarse_path.c	/^static void free_lists(int all_triangles)$/;"	f	typeref:typename:void	file:
free_mesh_arrays	zoltan/driver/dr_elem_util.c	/^void free_mesh_arrays(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:void
free_params.o	zoltan/Makefile.in	/^free_params.o: $(srcdir)\/params\/free_params.c$/;"	t
free_params.obj	zoltan/Makefile.in	/^free_params.obj: $(srcdir)\/params\/free_params.c$/;"	t
free_reftree_nodes	zoltan/reftree/reftree_build.c	/^static void free_reftree_nodes(ZOLTAN_REFTREE **node)$/;"	f	typeref:typename:void	file:
free_reverse_plan	zoltan/Utilities/Communication/comm_do_reverse.c	/^static void free_reverse_plan(ZOLTAN_COMM_OBJ *plan)$/;"	f	typeref:typename:void	file:
from	zoltan/lb/lb_const.h	/^typedef int ZOLTAN_LB_COPY_DATA_FN(struct Zoltan_Struct *to, struct Zoltan_Struct const *from);$/;"	t	typeref:typename:int ZOLTAN_LB_COPY_DATA_FN (struct Zoltan_Struct * to,struct Zoltan_Struct const *)
fsfc	zoltan/hsfc/hsfc.h	/^   double fsfc;         \/* computed normalized SFC coordinate     *\/$/;"	m	struct:Dots	typeref:typename:double
fval	zoltan/params/params_const.h	/^  float fval;$/;"	m	struct:Param_Utype	typeref:typename:float
fwrap.o	zoltan/Makefile.in	/^fwrap.o: $(srcdir)\/fort\/fwrap.f90$/;"	t
fwrap.obj	zoltan/Makefile.in	/^fwrap.obj: $(srcdir)\/fort\/fwrap.f90$/;"	t
g2l_hash.o	zoltan/Makefile.in	/^g2l_hash.o: $(srcdir)\/coloring\/g2l_hash.c$/;"	t
g2l_hash.obj	zoltan/Makefile.in	/^g2l_hash.obj: $(srcdir)\/coloring\/g2l_hash.c$/;"	t
gather_and_build_remap	zoltan/lb/lb_remap.c	/^static int gather_and_build_remap($/;"	f	typeref:typename:int	file:
gen_files	zoltan/hier/hier.h	/^  int gen_files;                      \/* call Zoltan_Generate_Files *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
gen_par_filename	zoltan/driver/dr_input.c	/^void gen_par_filename ($/;"	f	typeref:typename:void
gen_par_filename	zoltan/fdriver/fdr_input.f90	/^subroutine gen_par_filename(/;"	s	module:dr_input
geom_vec	zoltan/hier/hier.h	/^  double *geom_vec;                  \/* geometry of objects in intermediate *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:double *
geometric_get_geom_multi	zoltan/phg/phg_match.c	/^static ZOLTAN_GEOM_MULTI_FN geometric_get_geom_multi;$/;"	v	typeref:typename:ZOLTAN_GEOM_MULTI_FN	file:
geometric_get_geom_multi	zoltan/phg/phg_match.c	/^static void geometric_get_geom_multi(void *data, int num_obj, int num_gid,$/;"	f	typeref:typename:void	file:
geometric_get_num_geom	zoltan/phg/phg_match.c	/^static ZOLTAN_NUM_GEOM_FN geometric_get_num_geom;$/;"	v	typeref:typename:ZOLTAN_NUM_GEOM_FN	file:
geometric_get_num_geom	zoltan/phg/phg_match.c	/^static int geometric_get_num_geom(void *data, int *ierr) {$/;"	f	typeref:typename:int	file:
geometric_get_num_obj	zoltan/phg/phg_match.c	/^static ZOLTAN_NUM_OBJ_FN geometric_get_num_obj;$/;"	v	typeref:typename:ZOLTAN_NUM_OBJ_FN	file:
geometric_get_num_obj	zoltan/phg/phg_match.c	/^static int geometric_get_num_obj(void *data, int *ierr) {$/;"	f	typeref:typename:int	file:
geometric_get_obj_list	zoltan/phg/phg_match.c	/^static ZOLTAN_OBJ_LIST_FN geometric_get_obj_list;$/;"	v	typeref:typename:ZOLTAN_OBJ_LIST_FN	file:
geometric_get_obj_list	zoltan/phg/phg_match.c	/^static void geometric_get_obj_list(void *data, int num_gid, int num_lid,$/;"	f	typeref:typename:void	file:
geometric_levels	zoltan/phg/phg.h	/^  int geometric_levels;          \/* Max number of levels to which geometric$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
geometric_red	zoltan/phg/phg.h	/^  float geometric_red;           \/* Reduction factor using geometric matching *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
getObjectSizes	zoltan/phg/phg_build.c	/^static int getObjectSizes(ZZ *zz, ZHG *zhg)$/;"	f	typeref:typename:int	file:
get_3plus_candidates	zoltan/par/par_median_randomized.c	/^static int get_3plus_candidates(int numlist, int *dotlist, double *dots,$/;"	f	typeref:typename:int	file:
get_char_array	zoltan/lb/low_mem_lb_migrate.c	/^static int get_char_array(ZZ *zz, int len, char **buf, int *oldlen)$/;"	f	typeref:typename:int	file:
get_child_elements	zoltan/driver/dr_loadbal.c	/^ZOLTAN_CHILD_LIST_FN get_child_elements;$/;"	v	typeref:typename:ZOLTAN_CHILD_LIST_FN
get_child_elements	zoltan/driver/dr_loadbal.c	/^void get_child_elements(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_child_elements	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_CHILD_LIST_FN get_child_elements;$/;"	v	typeref:typename:ZOLTAN_CHILD_LIST_FN
get_child_elements	zoltan/driver/dr_loadbalCPP.cpp	/^void get_child_elements(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_child_order_recur	zoltan/reftree/reftree_build.c	/^static void get_child_order_recur(ZZ *zz, ZOLTAN_REFTREE *subroot, int *isub, int *order)$/;"	f	typeref:typename:void	file:
get_current_part	zoltan/reftree/reftree_part.c	/^static int get_current_part(ZOLTAN_REFTREE *subroot, ZZ *zz, int *ierr)$/;"	f	typeref:typename:int	file:
get_data	zoltan/tpls/third_library.h	/^  int get_data;                         \/* Construct edge datas *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
get_edge_list	zoltan/driver/dr_loadbal.c	/^ZOLTAN_EDGE_LIST_FN get_edge_list;$/;"	v	typeref:typename:ZOLTAN_EDGE_LIST_FN
get_edge_list	zoltan/driver/dr_loadbal.c	/^void get_edge_list (void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_edge_list	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_EDGE_LIST_FN get_edge_list;$/;"	v	typeref:typename:ZOLTAN_EDGE_LIST_FN
get_edge_list	zoltan/driver/dr_loadbalCPP.cpp	/^void get_edge_list (void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_edge_list	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_edge_list /;"	s	module:dr_loadbal
get_edge_list_multi	zoltan/driver/dr_loadbal.c	/^ZOLTAN_EDGE_LIST_MULTI_FN get_edge_list_multi;$/;"	v	typeref:typename:ZOLTAN_EDGE_LIST_MULTI_FN
get_edge_list_multi	zoltan/driver/dr_loadbal.c	/^void get_edge_list_multi (void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_edge_list_multi	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_EDGE_LIST_MULTI_FN get_edge_list_multi;$/;"	v	typeref:typename:ZOLTAN_EDGE_LIST_MULTI_FN
get_edge_list_multi	zoltan/driver/dr_loadbalCPP.cpp	/^void get_edge_list_multi (void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_edge_list_multi	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_edge_list_multi(/;"	s	module:dr_loadbal
get_elem_info	zoltan/driver/dr_elem.c	/^int get_elem_info(const int req, const E_Type etype, const ZOLTAN_ID_TYPE sid)$/;"	f	typeref:typename:int
get_elem_name	zoltan/driver/dr_elem.c	/^const char *get_elem_name(int itype) {$/;"	f	typeref:typename:const char *
get_elem_type	zoltan/driver/dr_elem.c	/^E_Type get_elem_type(char *elem_name, const int num_nodes,$/;"	f	typeref:typename:E_Type
get_element_to_add	zoltan/reftree/reftree_coarse_path.c	/^static int get_element_to_add(void)$/;"	f	typeref:typename:int	file:
get_elements	zoltan/driver/dr_loadbal.c	/^ZOLTAN_OBJ_LIST_FN get_elements;$/;"	v	typeref:typename:ZOLTAN_OBJ_LIST_FN
get_elements	zoltan/driver/dr_loadbal.c	/^void get_elements(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_elements	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_OBJ_LIST_FN get_elements;$/;"	v	typeref:typename:ZOLTAN_OBJ_LIST_FN
get_elements	zoltan/driver/dr_loadbalCPP.cpp	/^void get_elements(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_elements	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_elements(/;"	s	module:dr_loadbal
get_first_coarse_element	zoltan/driver/dr_loadbal.c	/^ZOLTAN_FIRST_COARSE_OBJ_FN get_first_coarse_element;$/;"	v	typeref:typename:ZOLTAN_FIRST_COARSE_OBJ_FN
get_first_coarse_element	zoltan/driver/dr_loadbal.c	/^int get_first_coarse_element(void *data, int num_gid_entries,$/;"	f	typeref:typename:int
get_first_coarse_element	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_FIRST_COARSE_OBJ_FN get_first_coarse_element;$/;"	v	typeref:typename:ZOLTAN_FIRST_COARSE_OBJ_FN
get_first_coarse_element	zoltan/driver/dr_loadbalCPP.cpp	/^int get_first_coarse_element(void *data, int num_gid_entries,$/;"	f	typeref:typename:int
get_first_element	zoltan/driver/dr_loadbal.c	/^ZOLTAN_FIRST_OBJ_FN get_first_element;$/;"	v	typeref:typename:ZOLTAN_FIRST_OBJ_FN
get_first_element	zoltan/driver/dr_loadbal.c	/^int get_first_element(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_first_element	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_FIRST_OBJ_FN get_first_element;$/;"	v	typeref:typename:ZOLTAN_FIRST_OBJ_FN
get_first_element	zoltan/driver/dr_loadbalCPP.cpp	/^int get_first_element(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_first_element	zoltan/fdriver/fdr_loadbal.f90	/^integer(Zoltan_INT) function get_first_element(/;"	f	module:dr_loadbal
get_fixed_obj_list	zoltan/driver/dr_loadbal.c	/^ZOLTAN_FIXED_OBJ_LIST_FN get_fixed_obj_list;$/;"	v	typeref:typename:ZOLTAN_FIXED_OBJ_LIST_FN
get_fixed_obj_list	zoltan/driver/dr_loadbal.c	/^void get_fixed_obj_list(void *data, int num_fixed_obj,$/;"	f	typeref:typename:void
get_fixed_obj_list	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_FIXED_OBJ_LIST_FN get_fixed_obj_list;$/;"	v	typeref:typename:ZOLTAN_FIXED_OBJ_LIST_FN
get_fixed_obj_list	zoltan/driver/dr_loadbalCPP.cpp	/^void get_fixed_obj_list(void *data, int num_fixed_obj,$/;"	f	typeref:typename:void
get_geom	zoltan/driver/dr_loadbal.c	/^ZOLTAN_GEOM_FN get_geom;$/;"	v	typeref:typename:ZOLTAN_GEOM_FN
get_geom	zoltan/driver/dr_loadbal.c	/^void get_geom(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_geom	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_GEOM_FN get_geom;$/;"	v	typeref:typename:ZOLTAN_GEOM_FN
get_geom	zoltan/driver/dr_loadbalCPP.cpp	/^void get_geom(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_geom	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_geom(/;"	s	module:dr_loadbal
get_geom_multi	zoltan/driver/dr_loadbal.c	/^ZOLTAN_GEOM_MULTI_FN get_geom_multi;$/;"	v	typeref:typename:ZOLTAN_GEOM_MULTI_FN
get_geom_multi	zoltan/driver/dr_loadbal.c	/^void get_geom_multi(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_geom_multi	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_GEOM_MULTI_FN get_geom_multi;$/;"	v	typeref:typename:ZOLTAN_GEOM_MULTI_FN
get_geom_multi	zoltan/driver/dr_loadbalCPP.cpp	/^void get_geom_multi(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_geom_multi	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_geom_multi(/;"	s	module:dr_loadbal
get_gid_array	zoltan/lb/low_mem_lb_migrate.c	/^static int get_gid_array(ZZ *zz, int len, ZOLTAN_ID_TYPE **buf, int *oldlen)$/;"	f	typeref:typename:int	file:
get_hg_compressed_pin_storage	zoltan/driver/dr_loadbal.c	/^ZOLTAN_HG_CS_FN get_hg_compressed_pin_storage;$/;"	v	typeref:typename:ZOLTAN_HG_CS_FN
get_hg_compressed_pin_storage	zoltan/driver/dr_loadbal.c	/^void get_hg_compressed_pin_storage($/;"	f	typeref:typename:void
get_hg_compressed_pin_storage	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_HG_CS_FN get_hg_compressed_pin_storage;$/;"	v	typeref:typename:ZOLTAN_HG_CS_FN
get_hg_compressed_pin_storage	zoltan/driver/dr_loadbalCPP.cpp	/^void get_hg_compressed_pin_storage($/;"	f	typeref:typename:void
get_hg_compressed_pins	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_hg_compressed_pins(/;"	s	module:dr_loadbal
get_hg_edge_weights	zoltan/driver/dr_loadbal.c	/^ZOLTAN_HG_EDGE_WTS_FN get_hg_edge_weights;$/;"	v	typeref:typename:ZOLTAN_HG_EDGE_WTS_FN
get_hg_edge_weights	zoltan/driver/dr_loadbal.c	/^void get_hg_edge_weights($/;"	f	typeref:typename:void
get_hg_edge_weights	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_HG_EDGE_WTS_FN get_hg_edge_weights;$/;"	v	typeref:typename:ZOLTAN_HG_EDGE_WTS_FN
get_hg_edge_weights	zoltan/driver/dr_loadbalCPP.cpp	/^void get_hg_edge_weights($/;"	f	typeref:typename:void
get_hg_edge_weights	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_hg_edge_weights(/;"	s	module:dr_loadbal
get_hg_size_compressed_pin_storage	zoltan/driver/dr_loadbal.c	/^ZOLTAN_HG_SIZE_CS_FN get_hg_size_compressed_pin_storage;$/;"	v	typeref:typename:ZOLTAN_HG_SIZE_CS_FN
get_hg_size_compressed_pin_storage	zoltan/driver/dr_loadbal.c	/^void get_hg_size_compressed_pin_storage($/;"	f	typeref:typename:void
get_hg_size_compressed_pin_storage	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_HG_SIZE_CS_FN get_hg_size_compressed_pin_storage;$/;"	v	typeref:typename:ZOLTAN_HG_SIZE_CS_FN
get_hg_size_compressed_pin_storage	zoltan/driver/dr_loadbalCPP.cpp	/^void get_hg_size_compressed_pin_storage($/;"	f	typeref:typename:void
get_hg_size_compressed_pins	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_hg_size_compressed_pins(/;"	s	module:dr_loadbal
get_hg_size_edge_weights	zoltan/driver/dr_loadbal.c	/^ZOLTAN_HG_SIZE_EDGE_WTS_FN get_hg_size_edge_weights;$/;"	v	typeref:typename:ZOLTAN_HG_SIZE_EDGE_WTS_FN
get_hg_size_edge_weights	zoltan/driver/dr_loadbal.c	/^void get_hg_size_edge_weights($/;"	f	typeref:typename:void
get_hg_size_edge_weights	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_HG_SIZE_EDGE_WTS_FN get_hg_size_edge_weights;$/;"	v	typeref:typename:ZOLTAN_HG_SIZE_EDGE_WTS_FN
get_hg_size_edge_weights	zoltan/driver/dr_loadbalCPP.cpp	/^void get_hg_size_edge_weights($/;"	f	typeref:typename:void
get_hg_size_edge_weights	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_hg_size_edge_weights(/;"	s	module:dr_loadbal
get_int_array	zoltan/lb/low_mem_lb_migrate.c	/^static int get_int_array(ZZ *zz, int len, int **buf, int *oldlen)$/;"	f	typeref:typename:int	file:
get_median_candidates	zoltan/par/par_median_randomized.c	/^static int get_median_candidates(double *mymed, int nmymed, $/;"	f	typeref:typename:int	file:
get_method	zoltan/driver/dr_param_file.c	/^static void get_method(void *data, int level, struct Zoltan_Struct *zz,$/;"	f	typeref:typename:void	file:
get_method	zoltan/driver/dr_param_fileCPP.cpp	/^static void get_method(void *data, int level, struct Zoltan_Struct *zz,$/;"	f	typeref:typename:void	file:
get_method	zoltan/fdriver/fdr_param_file.f90	/^subroutine get_method(/;"	s	module:dr_param_file
get_nbor_parts	zoltan/lb/lb_eval.c	/^static int get_nbor_parts($/;"	f	typeref:typename:int	file:
get_nemesis_hg	zoltan/driver/dr_loadbal.c	/^ZOLTAN_HG_CS_FN get_nemesis_hg;$/;"	v	typeref:typename:ZOLTAN_HG_CS_FN
get_nemesis_hg	zoltan/driver/dr_loadbal.c	/^void get_nemesis_hg($/;"	f	typeref:typename:void
get_nemesis_hg	zoltan/driver/dr_loadbalCPP.cpp	/^void get_nemesis_hg($/;"	f	typeref:typename:void
get_nemesis_hg_size	zoltan/driver/dr_loadbal.c	/^ZOLTAN_HG_SIZE_CS_FN get_nemesis_hg_size;$/;"	v	typeref:typename:ZOLTAN_HG_SIZE_CS_FN
get_nemesis_hg_size	zoltan/driver/dr_loadbal.c	/^void get_nemesis_hg_size($/;"	f	typeref:typename:void
get_nemesis_hg_size	zoltan/driver/dr_loadbalCPP.cpp	/^void get_nemesis_hg_size($/;"	f	typeref:typename:void
get_next_coarse_element	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NEXT_COARSE_OBJ_FN get_next_coarse_element;$/;"	v	typeref:typename:ZOLTAN_NEXT_COARSE_OBJ_FN
get_next_coarse_element	zoltan/driver/dr_loadbal.c	/^int get_next_coarse_element(void *data, int num_gid_entries,$/;"	f	typeref:typename:int
get_next_coarse_element	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NEXT_COARSE_OBJ_FN get_next_coarse_element;$/;"	v	typeref:typename:ZOLTAN_NEXT_COARSE_OBJ_FN
get_next_coarse_element	zoltan/driver/dr_loadbalCPP.cpp	/^int get_next_coarse_element(void *data, int num_gid_entries,$/;"	f	typeref:typename:int
get_next_element	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NEXT_OBJ_FN get_next_element;$/;"	v	typeref:typename:ZOLTAN_NEXT_OBJ_FN
get_next_element	zoltan/driver/dr_loadbal.c	/^int get_next_element(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_next_element	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NEXT_OBJ_FN get_next_element;$/;"	v	typeref:typename:ZOLTAN_NEXT_OBJ_FN
get_next_element	zoltan/driver/dr_loadbalCPP.cpp	/^int get_next_element(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_next_element	zoltan/fdriver/fdr_loadbal.f90	/^integer(Zoltan_INT) function get_next_element(/;"	f	module:dr_loadbal
get_nth_token	zoltan/driver/dr_hg_io.c	/^static char *get_nth_token(char *line, int nth, \/* get nth token (0-based) *\/$/;"	f	typeref:typename:char *	file:
get_num_child	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NUM_CHILD_FN get_num_child;$/;"	v	typeref:typename:ZOLTAN_NUM_CHILD_FN
get_num_child	zoltan/driver/dr_loadbal.c	/^int get_num_child(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_num_child	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NUM_CHILD_FN get_num_child;$/;"	v	typeref:typename:ZOLTAN_NUM_CHILD_FN
get_num_child	zoltan/driver/dr_loadbalCPP.cpp	/^int get_num_child(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_num_edges	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NUM_EDGES_FN get_num_edges;$/;"	v	typeref:typename:ZOLTAN_NUM_EDGES_FN
get_num_edges	zoltan/driver/dr_loadbal.c	/^int get_num_edges(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_num_edges	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NUM_EDGES_FN get_num_edges;$/;"	v	typeref:typename:ZOLTAN_NUM_EDGES_FN
get_num_edges	zoltan/driver/dr_loadbalCPP.cpp	/^int get_num_edges(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_num_edges	zoltan/fdriver/fdr_loadbal.f90	/^integer(Zoltan_INT) function get_num_edges(/;"	f	module:dr_loadbal
get_num_edges_multi	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NUM_EDGES_MULTI_FN get_num_edges_multi;$/;"	v	typeref:typename:ZOLTAN_NUM_EDGES_MULTI_FN
get_num_edges_multi	zoltan/driver/dr_loadbal.c	/^void get_num_edges_multi($/;"	f	typeref:typename:void
get_num_edges_multi	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NUM_EDGES_MULTI_FN get_num_edges_multi;$/;"	v	typeref:typename:ZOLTAN_NUM_EDGES_MULTI_FN
get_num_edges_multi	zoltan/driver/dr_loadbalCPP.cpp	/^void get_num_edges_multi($/;"	f	typeref:typename:void
get_num_edges_multi	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_num_edges_multi /;"	s	module:dr_loadbal
get_num_elements	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NUM_OBJ_FN get_num_elements;$/;"	v	typeref:typename:ZOLTAN_NUM_OBJ_FN
get_num_elements	zoltan/driver/dr_loadbal.c	/^int get_num_elements(void *data, int *ierr)$/;"	f	typeref:typename:int
get_num_elements	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NUM_OBJ_FN get_num_elements;$/;"	v	typeref:typename:ZOLTAN_NUM_OBJ_FN
get_num_elements	zoltan/driver/dr_loadbalCPP.cpp	/^int get_num_elements(void *data, int *ierr)$/;"	f	typeref:typename:int
get_num_elements	zoltan/fdriver/fdr_loadbal.f90	/^integer(Zoltan_INT) function get_num_elements(/;"	f	module:dr_loadbal
get_num_fixed_obj	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NUM_FIXED_OBJ_FN get_num_fixed_obj;$/;"	v	typeref:typename:ZOLTAN_NUM_FIXED_OBJ_FN
get_num_fixed_obj	zoltan/driver/dr_loadbal.c	/^int get_num_fixed_obj(void *data, int *ierr)$/;"	f	typeref:typename:int
get_num_fixed_obj	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NUM_FIXED_OBJ_FN get_num_fixed_obj;$/;"	v	typeref:typename:ZOLTAN_NUM_FIXED_OBJ_FN
get_num_fixed_obj	zoltan/driver/dr_loadbalCPP.cpp	/^int get_num_fixed_obj(void *data, int *ierr)$/;"	f	typeref:typename:int
get_num_geom	zoltan/driver/dr_loadbal.c	/^ZOLTAN_NUM_GEOM_FN get_num_geom;$/;"	v	typeref:typename:ZOLTAN_NUM_GEOM_FN
get_num_geom	zoltan/driver/dr_loadbal.c	/^int get_num_geom(void *data, int *ierr)$/;"	f	typeref:typename:int
get_num_geom	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_NUM_GEOM_FN get_num_geom;$/;"	v	typeref:typename:ZOLTAN_NUM_GEOM_FN
get_num_geom	zoltan/driver/dr_loadbalCPP.cpp	/^int get_num_geom(void *data, int *ierr)$/;"	f	typeref:typename:int
get_num_geom	zoltan/fdriver/fdr_loadbal.f90	/^integer(Zoltan_INT) function get_num_geom(/;"	f	module:dr_loadbal
get_num_levels	zoltan/driver/dr_param_file.c	/^static int get_num_levels(void *data, int *ierr) {$/;"	f	typeref:typename:int	file:
get_num_levels	zoltan/driver/dr_param_fileCPP.cpp	/^static int get_num_levels(void *data, int *ierr) {$/;"	f	typeref:typename:int	file:
get_num_levels	zoltan/fdriver/fdr_param_file.f90	/^function get_num_levels(/;"	f	module:dr_param_file
get_part	zoltan/driver/dr_loadbal.c	/^ZOLTAN_PART_FN get_part;$/;"	v	typeref:typename:ZOLTAN_PART_FN
get_part	zoltan/driver/dr_loadbal.c	/^int get_part(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_part	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_PART_FN get_part;$/;"	v	typeref:typename:ZOLTAN_PART_FN
get_part	zoltan/driver/dr_loadbalCPP.cpp	/^int get_part(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
get_part	zoltan/driver/dr_param_fileCPP.cpp	/^static int get_part(void *data, int level, int *ierr) {$/;"	f	typeref:typename:int	file:
get_part	zoltan/fdriver/fdr_loadbal.f90	/^function get_part(/;"	f	module:dr_loadbal
get_part	zoltan/fdriver/fdr_param_file.f90	/^function get_part(/;"	f	module:dr_param_file
get_part_multi	zoltan/driver/dr_loadbal.c	/^ZOLTAN_PART_MULTI_FN get_part_multi;$/;"	v	typeref:typename:ZOLTAN_PART_MULTI_FN
get_part_multi	zoltan/driver/dr_loadbal.c	/^void get_part_multi(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_part_multi	zoltan/driver/dr_loadbalCPP.cpp	/^ZOLTAN_PART_MULTI_FN get_part_multi;$/;"	v	typeref:typename:ZOLTAN_PART_MULTI_FN
get_part_multi	zoltan/driver/dr_loadbalCPP.cpp	/^void get_part_multi(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
get_part_multi	zoltan/fdriver/fdr_loadbal.f90	/^subroutine get_part_multi(/;"	s	module:dr_loadbal
get_partition	zoltan/driver/dr_param_file.c	/^static int get_partition(void *data, int level, int *ierr) {$/;"	f	typeref:typename:int	file:
get_processor_name.o	zoltan/Makefile.in	/^get_processor_name.o: $(srcdir)\/ha\/get_processor_name.c$/;"	t
get_processor_name.obj	zoltan/Makefile.in	/^get_processor_name.obj: $(srcdir)\/ha\/get_processor_name.c$/;"	t
get_side_id	zoltan/driver/dr_elem.c	/^int get_side_id(E_Type etype, const ZOLTAN_ID_TYPE *connect, const int nsnodes,$/;"	f	typeref:typename:int
get_ss_mirror	zoltan/driver/dr_elem.c	/^ZOLTAN_ID_TYPE get_ss_mirror(const E_Type etype, const ZOLTAN_ID_TYPE *ss_node_list, ZOLTAN_ID_T/;"	f	typeref:typename:ZOLTAN_ID_TYPE
get_target_dimension	zoltan/zz/zz_coord.c	/^static int get_target_dimension(double *dist, int *order, $/;"	f	typeref:typename:int	file:
get_tree	zoltan/phg/phg_tree.c	/^get_tree(ZZ* zz)$/;"	f	typeref:typename:Zoltan_PHG_Tree *
get_tree_size	zoltan/phg/phg_tree.h	/^#define get_tree_size(/;"	d
getblock	zoltan/zz/murmur3.c	/^#define getblock(/;"	d	file:
getwd	zoltan/fdriver/mmio.f	/^      subroutine getwd(/;"	s
gid	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   ZOLTAN_ID_TYPE gid[1];   \/* struct malloc'd to include gid & lid & user *\/$/;"	m	struct:__anonc14baf7a0108	typeref:typename:ZOLTAN_ID_TYPE[1]
gid	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   ZOLTAN_ID_TYPE gid[1];  \/* structure malloc'd to include gid    *\/$/;"	m	struct:__anonc14baf7a0308	typeref:typename:ZOLTAN_ID_TYPE[1]
gid	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  ZOLTAN_ID_TYPE  *gid;        \/* gid used as key for update & lookup   *\/$/;"	m	struct:DD_Node	typeref:typename:ZOLTAN_ID_TYPE *
gid	zoltan/lb/lb_balance.c	/^  ZOLTAN_ID_PTR gid;$/;"	m	struct:Hash_Node	typeref:typename:ZOLTAN_ID_PTR	file:
gid	zoltan/reftree/reftree.h	/^  ZOLTAN_ID_PTR gid;            \/* Global id *\/$/;"	m	struct:Zoltan_Reftree_hash_node	typeref:typename:ZOLTAN_ID_PTR
gid	zoltan/reftree/reftree.h	/^  ZOLTAN_ID_PTR gid;            \/* Global id *\/$/;"	m	struct:Zoltan_Reftree_inthash_node	typeref:typename:ZOLTAN_ID_PTR
gid	zoltan/tpls/third_library_tools.h	/^  ZOLTAN_ID_PTR gid;     \/* Pointer to a Global id *\/$/;"	m	struct:Hash_Node	typeref:typename:ZOLTAN_ID_PTR
gidIdx	zoltan/zz/zz_gen_files.c	/^  int gidIdx;$/;"	m	struct:augment_search_structure::_gidht	typeref:typename:int	file:
gidIdx	zoltan/zz/zz_gen_files.c	/^  int gidIdx;$/;"	m	struct:fan_in_edge_global_ids::_gidht	typeref:typename:int	file:
gidIdx	zoltan/zz/zz_gen_files.c	/^  int gidIdx;$/;"	m	struct:merge_gids::_gidht	typeref:typename:int	file:
gid_length	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int gid_length;         \/* = zz->Num_GID -- avoid needing Zoltan_Struct *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
gidrank	zoltan/order/order_const.h	/^  ZOLTAN_ID_PTR gidrank;$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:ZOLTAN_ID_PTR
gidrank	zoltan/tpls/third_library_const.h	/^  ZOLTAN_ID_PTR gidrank;$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:ZOLTAN_ID_PTR
gids	zoltan/order/order_const.h	/^  ZOLTAN_ID_PTR gids;           \/* ptr to list of global ids *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:ZOLTAN_ID_PTR
gids	zoltan/tpls/third_library_const.h	/^  ZOLTAN_ID_PTR gids;           \/* ptr to list of global ids *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:ZOLTAN_ID_PTR
give_proc	zoltan/tpls/preprocessing.c	/^static int give_proc($/;"	f	typeref:typename:int	file:
glob_id	zoltan/driver/dr_maps.c	/^  ZOLTAN_ID_TYPE *glob_id;$/;"	m	struct:map_list_head	typeref:typename:ZOLTAN_ID_TYPE *	file:
glob_id	zoltan/driver/dr_mapsCPP.cpp	/^  ZOLTAN_ID_TYPE *glob_id;$/;"	m	struct:map_list_head	typeref:typename:ZOLTAN_ID_TYPE *	file:
glob_id	zoltan/fdriver/fdr_chaco_io.f90	/^  integer(Zoltan_INT), pointer :: glob_id(/;"	k	type:map_list_head
globalHedges	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE globalHedges;    \/* global number of hyperedges listed here *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE
globalID	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE globalID;	\/* Global ID of this element, the local ID is the$/;"	m	struct:Element_Description	typeref:typename:ZOLTAN_ID_TYPE
globalID	zoltan/driver/dr_migrate.c	/^  ZOLTAN_ID_TYPE globalID;$/;"	m	struct:New_Elem_Hash_Node	typeref:typename:ZOLTAN_ID_TYPE	file:
globalID	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: globalID /;"	k	type:ELEM_INFO
globalObj	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE globalObj;       \/* Global number of objects over all procs. *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE
globalPins	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE globalPins;  \/* global number of pins *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE
globalX	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_GNO_TYPE globalX;       \/* Overall number on X dimension *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:ZOLTAN_GNO_TYPE
globalY	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_GNO_TYPE globalY;       \/* Overall number on Y dimension *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:ZOLTAN_GNO_TYPE
global_blank_count	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE global_blank_count;   \/* number of all elements that are blanked   *\/$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE
global_id	zoltan/reftree/reftree.h	/^   ZOLTAN_ID_PTR global_id;  \/* global ID of the corresponding element *\/$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:ZOLTAN_ID_PTR
global_to_proc_owner_map	zoltan/driver/dr_random_io.c	/^static int global_to_proc_owner_map(ZOLTAN_ID_TYPE global_id, int numProc, int rank)$/;"	f	typeref:typename:int	file:
globalcomm	zoltan/phg/phg.h	/^  PHGComm globalcomm;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:PHGComm
gnhedges	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE gnhedges;             \/* for hypergraphs, the number of global$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE
gno	zoltan/coloring/g2l_hash.h	/^    ZOLTAN_GNO_TYPE gno;           \/* Global number *\/$/;"	m	struct:G2L_Hash_Node	typeref:typename:ZOLTAN_GNO_TYPE
gno	zoltan/hier/hier.h	/^  ZOLTAN_GNO_TYPE *gno;              \/* global vertex ids *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:ZOLTAN_GNO_TYPE *
gno	zoltan/lb/lb_balance.c	/^  int gno;$/;"	m	struct:Hash_Node	typeref:typename:int	file:
gno	zoltan/tpls/third_library_tools.h	/^  int gno;           \/* Global number *\/$/;"	m	struct:Hash_Node	typeref:typename:int
graph	zoltan/tpls/third_library.h	/^  ZG graph;$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:ZG
graph.o	zoltan/Makefile.in	/^graph.o: $(srcdir)\/graph\/graph.c$/;"	t
graph.obj	zoltan/Makefile.in	/^graph.obj: $(srcdir)\/graph\/graph.c$/;"	t
graph_type	zoltan/tpls/third_library.h	/^  int graph_type;                       \/* Type of the graph *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
greedy_grow_part	zoltan/phg/phg_serialpartition.c	/^static int greedy_grow_part ($/;"	f	typeref:typename:int	file:
groupsize	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn1.c	/^ int groupsize ;$/;"	m	struct:dd_nh1_struct	typeref:typename:int	file:
ha_ovis.o	zoltan/Makefile.in	/^ha_ovis.o: $(srcdir)\/ha\/ha_ovis.c$/;"	t
ha_ovis.obj	zoltan/Makefile.in	/^ha_ovis.obj: $(srcdir)\/ha\/ha_ovis.c$/;"	t
hanging_nodes	zoltan/reftree/reftree_coarse_path.c	/^static int hanging_nodes(int *ierr,ZZ *zz)$/;"	f	typeref:typename:int	file:
hash	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_Hash_fn *hash;       \/* Hash function used by this DD         *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_Hash_fn *
hashDistData	zoltan/matrix/zoltan_matrix.h	/^  void            *hashDistData;\/* Used by hashDist *\/$/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:void *
hashDistFct	zoltan/matrix/zoltan_matrix.h	/^  distFnct        *hashDistFct; \/* How to distribute nnz *\/$/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:distFnct *
hashValue	zoltan/phg/phg_coarse.c	/^static unsigned int hashValue(HGraph *hg, int n, int *ar)$/;"	f	typeref:typename:unsigned int	file:
hash_table	zoltan/reftree/reftree.h	/^  struct Zoltan_Reftree_hash_node **hash_table;$/;"	m	struct:Zoltan_Reftree_data_struct	typeref:struct:Zoltan_Reftree_hash_node **
hash_table_size	zoltan/reftree/reftree.h	/^  int hash_table_size;$/;"	m	struct:Zoltan_Reftree_data_struct	typeref:typename:int
hashdata	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  void *hashdata;         \/* Either our hash data ...              *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:void *
hashfn	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  ZOLTAN_HASH_FN *hashfn; \/* ... Or user's hash function, not both *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:ZOLTAN_HASH_FN *
heNumWgts	zoltan/driver/dr_const.h	/^  int    heNumWgts;             \/* number of edges for which we have weights *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
heWgtId	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *heWgtId;              \/* global edge ID of the heNumWgts edges,$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE *
head1	zoltan/matlab/mmread.m	/^head1 = lower(head1);$/;"	v
header	zoltan/matlab/mmread.m	/^header = fgets(mmfile);$/;"	v
heapify	zoltan/zz/zz_heap.c	/^static void heapify (HEAP *h, int root)$/;"	f	typeref:typename:void	file:
hello	zoltan/ha/ha_ovis.h	/^  char hello[MAX_PARAM_STRING_LEN];$/;"	m	struct:OVIS_parameters	typeref:typename:char[]
hewgt_dim	zoltan/driver/dr_const.h	/^  int     hewgt_dim;            \/* for hypergraphs, the number of weights per$/;"	m	struct:Mesh_Description	typeref:typename:int
hewgts	zoltan/driver/dr_const.h	/^  float  *hewgts;               \/* for hypergraphs, an array of hyperedge$/;"	m	struct:Mesh_Description	typeref:typename:float *
hewgts	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_FLOAT), pointer :: hewgts(/;"	k	type:MESH_INFO
hex_nshared	zoltan/reftree/reftree_build.c	/^static int hex_nshared(int elem1, int elem2, int *lvertices, int *vert1)$/;"	f	typeref:typename:int	file:
hg	zoltan/phg/phg_Vcycle.c	/^    HGraph           *hg;         \/* for finer==NULL, hg and Part contains   *\/$/;"	m	struct:tagVCycle	typeref:typename:HGraph *	file:
hgid	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *hgid;        \/* Global number for edges (or pin vertices),$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE *
hgid	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: hgid(/;"	k	type:MESH_INFO
hgraph_method	zoltan/phg/phg.h	/^  char hgraph_method[MAX_PARAM_STRING_LEN]; \/* Operation(partition,repart,refine)*\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
hgraph_pkg	zoltan/phg/phg.h	/^  char hgraph_pkg[MAX_PARAM_STRING_LEN];\/* Package (Zoltan,PaToH,ParKway) *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
hi	zoltan/rcb/rcb.h	/^  double    lo[3], hi[3];	\/* xyz lo\/hi bounds *\/$/;"	m	struct:rcb_box	typeref:typename:double[3][3]
hidden	zoltan/all/all_allo_const.h	/^typedef void ZOLTAN_FORT_FREE_INT_FN(int *arg, int *hidden);$/;"	t	typeref:typename:void ZOLTAN_FORT_FREE_INT_FN (int * arg,int *)
hidden	zoltan/all/all_allo_const.h	/^typedef void ZOLTAN_FORT_MALLOC_INT_FN(int *arg, int *size, int **ret, int *hidden);$/;"	t	typeref:typename:void ZOLTAN_FORT_MALLOC_INT_FN (int * arg,int * size,int ** ret,int *)
hidden3	zoltan/all/all_allo_const.h	/^typedef void ZOLTAN_FORT_MALLOC_INT_FN(int *arg, int *size, int **ret, int *hidden, int hidden2,/;"	t	typeref:typename:void ZOLTAN_FORT_MALLOC_INT_FN (int * arg,int * size,int ** ret,int * hidden,int hidden2,int)
hier.o	zoltan/Makefile.in	/^hier.o: $(srcdir)\/hier\/hier.c$/;"	t
hier.obj	zoltan/Makefile.in	/^hier.obj: $(srcdir)\/hier\/hier.c$/;"	t
hier_comm	zoltan/hier/hier.h	/^  MPI_Comm hier_comm;                \/* MPI communicator for each level *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:MPI_Comm
hier_free_struct.o	zoltan/Makefile.in	/^hier_free_struct.o: $(srcdir)\/hier\/hier_free_struct.c$/;"	t
hier_free_struct.obj	zoltan/Makefile.in	/^hier_free_struct.obj: $(srcdir)\/hier\/hier_free_struct.c$/;"	t
hierzz	zoltan/hier/hier.h	/^  ZZ *hierzz;                        \/* internal zoltan struct for balancing $/;"	m	struct:HierPartParamsStruct	typeref:typename:ZZ *
high	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^   int high;$/;"	m	struct:__anon50a459380108	typeref:typename:int	file:
high_limit	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^  int high_limit;$/;"	m	struct:dd_nh2_struct	typeref:typename:int	file:
hindex	zoltan/driver/dr_const.h	/^  int    *hindex;               \/* for hypergraphs, an entry for each $/;"	m	struct:Mesh_Description	typeref:typename:int *
hindex	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: hindex(/;"	k	type:MESH_INFO
hindex	zoltan/phg/phg_hypergraph.h	/^  int *hindex;      \/* length nEdge+1 index into hvertex, last is nPins *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
host	zoltan/Makefile.in	/^host = @host@$/;"	m
host	zoltan/driver/Makefile.in	/^host = @host@$/;"	m
host	zoltan/fdriver/Makefile.in	/^host = @host@$/;"	m
host_alias	zoltan/Makefile.in	/^host_alias = @host_alias@$/;"	m
host_alias	zoltan/driver/Makefile.in	/^host_alias = @host_alias@$/;"	m
host_alias	zoltan/fdriver/Makefile.in	/^host_alias = @host_alias@$/;"	m
host_cpu	zoltan/Makefile.in	/^host_cpu = @host_cpu@$/;"	m
host_cpu	zoltan/driver/Makefile.in	/^host_cpu = @host_cpu@$/;"	m
host_cpu	zoltan/fdriver/Makefile.in	/^host_cpu = @host_cpu@$/;"	m
host_os	zoltan/Makefile.in	/^host_os = @host_os@$/;"	m
host_os	zoltan/driver/Makefile.in	/^host_os = @host_os@$/;"	m
host_os	zoltan/fdriver/Makefile.in	/^host_os = @host_os@$/;"	m
host_triplet	zoltan/Makefile.in	/^host_triplet = @host@$/;"	m
host_triplet	zoltan/driver/Makefile.in	/^host_triplet = @host@$/;"	m
host_triplet	zoltan/fdriver/Makefile.in	/^host_triplet = @host@$/;"	m
host_vendor	zoltan/Makefile.in	/^host_vendor = @host_vendor@$/;"	m
host_vendor	zoltan/driver/Makefile.in	/^host_vendor = @host_vendor@$/;"	m
host_vendor	zoltan/fdriver/Makefile.in	/^host_vendor = @host_vendor@$/;"	m
hsfc.o	zoltan/Makefile.in	/^hsfc.o: $(srcdir)\/hsfc\/hsfc.c$/;"	t
hsfc.obj	zoltan/Makefile.in	/^hsfc.obj: $(srcdir)\/hsfc\/hsfc.c$/;"	t
hsfcOrder.o	zoltan/Makefile.in	/^hsfcOrder.o: $(srcdir)\/order\/hsfcOrder.c$/;"	t
hsfcOrder.obj	zoltan/Makefile.in	/^hsfcOrder.obj: $(srcdir)\/order\/hsfcOrder.c$/;"	t
hsfc_box_assign.o	zoltan/Makefile.in	/^hsfc_box_assign.o: $(srcdir)\/hsfc\/hsfc_box_assign.c$/;"	t
hsfc_box_assign.obj	zoltan/Makefile.in	/^hsfc_box_assign.obj: $(srcdir)\/hsfc\/hsfc_box_assign.c$/;"	t
hsfc_hilbert.o	zoltan/Makefile.in	/^hsfc_hilbert.o: $(srcdir)\/hsfc\/hsfc_hilbert.c$/;"	t
hsfc_hilbert.obj	zoltan/Makefile.in	/^hsfc_hilbert.obj: $(srcdir)\/hsfc\/hsfc_hilbert.c$/;"	t
hsfc_point_assign.o	zoltan/Makefile.in	/^hsfc_point_assign.o: $(srcdir)\/hsfc\/hsfc_point_assign.c$/;"	t
hsfc_point_assign.obj	zoltan/Makefile.in	/^hsfc_point_assign.obj: $(srcdir)\/hsfc\/hsfc_point_assign.c$/;"	t
ht	zoltan/phg/phg_lookup.h	/^  struct Hash_Node **ht;$/;"	m	struct:_GID_lookup	typeref:struct:Hash_Node **
htTop	zoltan/phg/phg_lookup.h	/^  struct Hash_Node *htTop;$/;"	m	struct:_GID_lookup	typeref:struct:Hash_Node *
html	zoltan/Makefile.in	/^html: html-recursive$/;"	t
html	zoltan/driver/Makefile.in	/^html: html-am$/;"	t
html	zoltan/fdriver/Makefile.in	/^html: html-am$/;"	t
html-am	zoltan/Makefile.in	/^html-am:$/;"	t
html-am	zoltan/driver/Makefile.in	/^html-am:$/;"	t
html-am	zoltan/fdriver/Makefile.in	/^html-am:$/;"	t
htmldir	zoltan/Makefile.in	/^htmldir = @htmldir@$/;"	m
htmldir	zoltan/driver/Makefile.in	/^htmldir = @htmldir@$/;"	m
htmldir	zoltan/fdriver/Makefile.in	/^htmldir = @htmldir@$/;"	m
hvertex	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE *hvertex;      \/* row storage: global number for each pin$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE *
hvertex	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT), pointer :: hvertex(/;"	k	type:MESH_INFO
hvertex	zoltan/phg/phg_hypergraph.h	/^  int *hvertex;     \/* length nPins array containing associated vertices *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
hvertex_proc	zoltan/driver/dr_const.h	/^  int    *hvertex_proc;         \/* row storage: array listing the processor $/;"	m	struct:Mesh_Description	typeref:typename:int *
hybrid_keep_factor	zoltan/phg/phg.h	/^  float hybrid_keep_factor; \/* h-ipm only: keep matches with i.p. values$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
i	zoltan/driver/dr_mm_readfile.c	/^  int i, j;$/;"	m	struct:ijv	typeref:typename:int	file:
i	zoltan/fdriver/fdr_main.f90	/^  in/;"	v	program:fdriver
id	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   ZOLTAN_ID_TYPE id[1];   \/* allocated as max(Num_GID, Num_LID)    *\/$/;"	m	struct:__anonc14baf7a0208	typeref:typename:ZOLTAN_ID_TYPE[1]
idata2d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const int idata2d[] =  \/* 2 dimension to nkey conversion *\/$/;"	v	typeref:typename:unsigned const int[]
idata3d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const idata3d [] = {   \/* 3 dimension to nkey conversion *\/$/;"	v	typeref:typename:unsigned const[]
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_FIRST_BORDER_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,int nbor_proc,ZOLTAN_ID_PTR first_global_id,ZOLTAN_ID_PTR first_local_id,int wdim,float * first_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_FIRST_BORDER_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * nbor_proc,ZOLTAN_ID_PTR first_global_id,ZOLTAN_ID_PTR first_local_id,int * wdim,float * first_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_FIRST_COARSE_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,int * in_order,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_FIRST_COARSE_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,int * in_order,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_FIRST_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR first_global_id,ZOLTAN_ID_PTR first_local_id,int wdim,float * first_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_FIRST_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR first_global_id,ZOLTAN_ID_PTR first_local_id,int * wdim,float * first_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_HG_CS_FORT_FN (void * data,int * num_gid_entries,int * nvtxedge,int * npins,int * format,ZOLTAN_ID_PTR vtxedge_GID,int * vtxedge_ptr,ZOLTAN_ID_PTR pin_GID,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_HIER_NUM_LEVELS_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_HIER_NUM_LEVELS_FORT_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_HIER_PART_FN (void * data,int level,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_HIER_PART_FORT_FN (void * data,int * level,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NEXT_BORDER_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int nbor_proc,ZOLTAN_ID_PTR next_global_id,ZOLTAN_ID_PTR next_local_id,int wdim,float * next_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NEXT_BORDER_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * nbor_proc,ZOLTAN_ID_PTR next_global_id,ZOLTAN_ID_PTR next_local_id,int * wdim,float * next_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NEXT_COARSE_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,ZOLTAN_ID_PTR next_global_id,ZOLTAN_ID_PTR next_local_id,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NEXT_COARSE_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,ZOLTAN_ID_PTR next_global_id,ZOLTAN_ID_PTR next_local_id,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NEXT_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,ZOLTAN_ID_PTR next_global_id,ZOLTAN_ID_PTR next_local_id,int wdim,float * next_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NEXT_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,ZOLTAN_ID_PTR next_global_id,ZOLTAN_ID_PTR next_local_id,int * wdim,float * next_obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_BORDER_OBJ_FN (void * data,int nbor_proc,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_BORDER_OBJ_FORT_FN (void * data,int * nbor_proc,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_CHILD_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_CHILD_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_COARSE_OBJ_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_COARSE_OBJ_FORT_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_EDGES_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_EDGES_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_FIXED_OBJ_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_FIXED_OBJ_FORT_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_GEOM_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_GEOM_FORT_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_OBJ_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_NUM_OBJ_FORT_FN (void * data,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_OBJ_SIZE_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_OBJ_SIZE_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_PART_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:int ZOLTAN_PART_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_BORDER_OBJ_LIST_FN (void * data,int num_gid_entries,int num_lid_entries,int nbor_proc,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int wdim,float * objwgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_BORDER_OBJ_LIST_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * nbor_proc,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * wdim,float * objwgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_CHILD_LIST_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR parent_gid,ZOLTAN_ID_PTR parent_lid,ZOLTAN_ID_PTR child_gids,ZOLTAN_ID_PTR child_lids,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,ZOLTAN_REF_TYPE * ref_type,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_CHILD_LIST_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR parent_gid,ZOLTAN_ID_PTR parent_lid,ZOLTAN_ID_PTR child_gids,ZOLTAN_ID_PTR child_lids,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,ZOLTAN_REF_TYPE * ref_type,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_CHILD_WEIGHT_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int wgt_dim,float * obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_CHILD_WEIGHT_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * wgt_dim,float * obj_wgt,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_COARSE_OBJ_LIST_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,int * in_order,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_COARSE_OBJ_LIST_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * assigned,int * num_vert,ZOLTAN_ID_PTR vertices,int * in_order,ZOLTAN_ID_PTR in_vertex,ZOLTAN_ID_PTR out_vertex,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_EDGE_LIST_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,ZOLTAN_ID_PTR nbor_global_id,int * nbor_procs,int wdim,float * nbor_ewgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_EDGE_LIST_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,ZOLTAN_ID_PTR nbor_global_id,int * nbor_procs,int * wdim,float * nbor_ewgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_EDGE_LIST_MULTI_FN (void * data,int num_gid_entries,int num_lid_entries,int num_obj,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * num_edges,ZOLTAN_ID_PTR nbor_global_id,int * nbor_procs,int wdim,float * nbor_ewgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_EDGE_LIST_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_obj,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * num_edges,ZOLTAN_ID_PTR nbor_global_id,int * nbor_procs,int * wdim,float * nbor_ewgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_FIXED_OBJ_LIST_FN (void * data,int num_fixed_obj,int num_gid_entries,ZOLTAN_ID_PTR fixed_gids,int * fixed_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_FIXED_OBJ_LIST_FORT_FN (void * data,int * num_fixed_obj,int * num_gid_entries,ZOLTAN_ID_PTR fixed_gids,int * fixed_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_GEOM_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,double * geom_vec,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_GEOM_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,double * geom_vec,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_GEOM_MULTI_FN (void * data,int num_gid_entries,int num_lid_entries,int num_obj,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int num_dim,double * geom_vec,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_GEOM_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_obj,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * num_dim,double * geom_vec,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_CS_FN (void * data,int num_gid_entries,int nvtxedge,int npins,int format,ZOLTAN_ID_PTR vtxedge_GID,int * vtxedge_ptr,ZOLTAN_ID_PTR pin_GID,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_EDGE_WTS_FN (void * data,int num_gid_entries,int num_lid_entries,int nedges,int edge_weight_dim,ZOLTAN_ID_PTR edge_GID,ZOLTAN_ID_PTR edge_LID,float * edge_weight,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_EDGE_WTS_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * nedges,int * edge_weight_dim,ZOLTAN_ID_PTR edge_GID,ZOLTAN_ID_PTR edge_LID,float * edge_weight,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_SIZE_CS_FN (void * data,int * num_lists,int * num_pins,int * format,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_SIZE_CS_FORT_FN (void * data,int * num_lists,int * num_pins,int * format,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_SIZE_EDGE_WTS_FN (void * data,int * num_edges,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HG_SIZE_EDGE_WTS_FORT_FN (void * data,int * num_edges,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HIER_METHOD_FN (void * data,int level,struct Zoltan_Struct * zz,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_HIER_METHOD_FORT_FN (void * data,int * level,int * zz,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_MID_MIGRATE_FN (void * data,int num_gid_entries,int num_lid_entries,int num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_MID_MIGRATE_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_MID_MIGRATE_PP_FN (void * data,int num_gid_entries,int num_lid_entries,int num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * import_to_part,int num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int * export_to_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_MID_MIGRATE_PP_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * import_to_part,int * num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int * export_to_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_NUM_EDGES_MULTI_FN (void * data,int num_gid_entries,int num_lid_entries,int num_obj,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * num_edges,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_NUM_EDGES_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_obj,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * num_edges,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_OBJ_LIST_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int wdim,float * objwgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_OBJ_LIST_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * wdim,float * objwgts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PACK_OBJ_FN (void * data,int num_gid_entries,int num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int dest_proc,int size,char * buf,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PACK_OBJ_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * dest_proc,int * size,char * buf,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PACK_OBJ_MULTI_FN (void * data,int num_gid_entries,int num_lid_entries,int num_ids,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * dest_proc,int * size,int * index,char * buffer,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PACK_OBJ_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_ids,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * dest_proc,int * size,int * index,char * buffer,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PART_MULTI_FN (void * data,int num_gid_entries,int num_lid_entries,int num_obj,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * parts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PART_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_obj,ZOLTAN_ID_PTR global_id,ZOLTAN_ID_PTR local_id,int * parts,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_POST_MIGRATE_FN (void * data,int num_gid_entries,int num_lid_entries,int num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_POST_MIGRATE_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_POST_MIGRATE_PP_FN (void * data,int num_gid_entries,int num_lid_entries,int num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * import_to_part,int num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int * export_to_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_POST_MIGRATE_PP_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * import_to_part,int * num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int * export_to_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PRE_MIGRATE_FN (void * data,int num_gid_entries,int num_lid_entries,int num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PRE_MIGRATE_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PRE_MIGRATE_PP_FN (void * data,int num_gid_entries,int num_lid_entries,int num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * import_to_part,int num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int * export_to_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PRE_MIGRATE_PP_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_import,ZOLTAN_ID_PTR import_global_ids,ZOLTAN_ID_PTR import_local_ids,int * import_procs,int * import_to_part,int * num_export,ZOLTAN_ID_PTR export_global_ids,ZOLTAN_ID_PTR export_local_ids,int * export_procs,int * export_to_part,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_PROC_NAME_FN (void * data,char * name,int * length,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_UNPACK_OBJ_FN (void * data,int num_gid_entries,ZOLTAN_ID_PTR global_id,int size,char * buf,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_UNPACK_OBJ_FORT_FN (void * data,int * num_gid_entries,ZOLTAN_ID_PTR global_id,int * size,char * buf,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_UNPACK_OBJ_MULTI_FN (void * data,int num_gid_entries,int num_ids,ZOLTAN_ID_PTR global_ids,int * size,int * index,char * buffer,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr$/;"	t	typeref:typename:void ZOLTAN_UNPACK_OBJ_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_ids,ZOLTAN_ID_PTR global_ids,int * size,int * index,char * buffer,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr);$/;"	t	typeref:typename:void ZOLTAN_OBJ_SIZE_MULTI_FN (void * data,int num_gid_entries,int num_lid_entries,int num_ids,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * num_bytes,int *)
ierr	zoltan/include/zoltan.h	/^  int *ierr);$/;"	t	typeref:typename:void ZOLTAN_OBJ_SIZE_MULTI_FORT_FN (void * data,int * num_gid_entries,int * num_lid_entries,int * num_ids,ZOLTAN_ID_PTR global_ids,ZOLTAN_ID_PTR local_ids,int * num_bytes,int *)
iget_strided_stats	zoltan/lb/lb_eval.c	/^static void iget_strided_stats(int *v, int stride, int offset, int len,$/;"	f	typeref:typename:void	file:
ijv	zoltan/driver/dr_mm_readfile.c	/^struct ijv$/;"	s	file:
imbalance	zoltan/include/zoltan_eval.h	/^  float imbalance;              \/* vertex weight imbalance *\/$/;"	m	struct:_eval_balance_struct	typeref:typename:float
imbalance	zoltan/include/zoltan_eval.h	/^  float imbalance;              \/* vertex weight imbalance *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float
imbalance	zoltan/include/zoltan_eval.h	/^  float imbalance;              \/* vertex weight imbalance *\/$/;"	m	struct:_eval_hg_struct	typeref:typename:float
imp_gids	zoltan/tpls/third_library.h	/^  ZOLTAN_ID_PTR* imp_gids;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:ZOLTAN_ID_PTR *
imp_lids	zoltan/tpls/third_library.h	/^  ZOLTAN_ID_PTR* imp_lids;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:ZOLTAN_ID_PTR *
imp_part	zoltan/tpls/third_library.h	/^  int **imp_part;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int **
imp_procs	zoltan/tpls/third_library.h	/^  int **imp_procs;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int **
in	zoltan/reftree/reftree_coarse_path.c	/^static int *prev, *next, *in, *out, *onpath;$/;"	v	typeref:typename:int ***	file:
in_list	zoltan/driver/dr_util.c	/^int in_list(const ZOLTAN_ID_TYPE value, const int count, ZOLTAN_ID_TYPE *vector)$/;"	f	typeref:typename:int
in_list	zoltan/fdriver/fdr_chaco_io.f90	/^integer(Zoltan_INT) function in_list(/;"	f	module:dr_chaco_io
in_list2	zoltan/driver/dr_util.c	/^int in_list2(const int value, const int count, int *vector)$/;"	f	typeref:typename:int
in_vertex	zoltan/reftree/reftree.h	/^   ZOLTAN_ID_PTR in_vertex; \/* starting vertex for determining the path$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:ZOLTAN_ID_PTR
include_HEADERS	zoltan/Makefile.am	/^include_HEADERS = $(INCLUDE_H) $/;"	m
include_HEADERS	zoltan/Makefile.in	/^include_HEADERS = $(INCLUDE_H) $(am__append_1)$/;"	m
includedir	zoltan/Makefile.in	/^includedir = @includedir@$/;"	m
includedir	zoltan/driver/Makefile.in	/^includedir = @includedir@$/;"	m
includedir	zoltan/fdriver/Makefile.in	/^includedir = @includedir@$/;"	m
index	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   int        index;       \/* to put things back in order afterward *\/$/;"	m	struct:__anonc14baf7a0208	typeref:typename:int
index	zoltan/Utilities/Memory/mem.c	/^    long index;  \/* Number of elements in the dimension  *\/$/;"	m	struct:Zoltan_Array_Alloc::dimension	typeref:typename:long	file:
index	zoltan/hsfc/hsfc.h	/^   int index;           \/* number of "owner" of data in interval *\/$/;"	m	struct:Partition	typeref:typename:int
index	zoltan/params/params_const.h	/^  int index;$/;"	m	struct:Param_List	typeref:typename:int
indextype	zoltan/tpls/third_library_const.h	/^    #define indextype /;"	d
indextype	zoltan/tpls/third_library_const.h	/^  #define indextype /;"	d
indices_from	zoltan/Utilities/Communication/comm.h	/^    int      *indices_from;     \/* indices for where to put arriving data *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
indices_from_ptr	zoltan/Utilities/Communication/comm.h	/^    int      *indices_from_ptr; \/* where to find items I recv *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
indices_to	zoltan/Utilities/Communication/comm.h	/^    int      *indices_to;       \/* indices of items I send in my msgs *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
indices_to_ptr	zoltan/Utilities/Communication/comm.h	/^    int      *indices_to_ptr;   \/* where to find items I send in my msgs *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
inertial1d.o	zoltan/Makefile.in	/^inertial1d.o: $(srcdir)\/rcb\/inertial1d.c$/;"	t
inertial1d.obj	zoltan/Makefile.in	/^inertial1d.obj: $(srcdir)\/rcb\/inertial1d.c$/;"	t
inertial2d.o	zoltan/Makefile.in	/^inertial2d.o: $(srcdir)\/rcb\/inertial2d.c$/;"	t
inertial2d.obj	zoltan/Makefile.in	/^inertial2d.obj: $(srcdir)\/rcb\/inertial2d.c$/;"	t
inertial3d.o	zoltan/Makefile.in	/^inertial3d.o: $(srcdir)\/rcb\/inertial3d.c$/;"	t
inertial3d.obj	zoltan/Makefile.in	/^inertial3d.obj: $(srcdir)\/rcb\/inertial3d.c$/;"	t
inertial_matrix2D	zoltan/zz/zz_coord.c	/^static void inertial_matrix2D(ZZ *zstruct, double *X, $/;"	f	typeref:typename:void	file:
inertial_matrix3D	zoltan/zz/zz_coord.c	/^static void inertial_matrix3D(ZZ *zstruct, double *X, $/;"	f	typeref:typename:void	file:
info	zoltan/Makefile.in	/^info: info-recursive$/;"	t
info	zoltan/driver/Makefile.in	/^info: info-am$/;"	t
info	zoltan/fdriver/Makefile.in	/^info: info-am$/;"	t
info	zoltan/phg/phg_hypergraph.h	/^  int info;             \/* depth of recursion in V-cycle; initially 0 *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
info-am	zoltan/Makefile.in	/^info-am:$/;"	t
info-am	zoltan/driver/Makefile.in	/^info-am:$/;"	t
info-am	zoltan/fdriver/Makefile.in	/^info-am:$/;"	t
infodir	zoltan/Makefile.in	/^infodir = @infodir@$/;"	m
infodir	zoltan/driver/Makefile.in	/^infodir = @infodir@$/;"	m
infodir	zoltan/fdriver/Makefile.in	/^infodir = @infodir@$/;"	m
init_dim	zoltan/driver/dr_input_const.h	/^  int     init_dim;            \/* For NO_FILE_* (random) input, the $/;"	m	struct:Parallel_IO	typeref:typename:int
init_dist_pins	zoltan/driver/dr_input_const.h	/^  int     init_dist_pins;      \/* For hypergraphs, how should pins be  $/;"	m	struct:Parallel_IO	typeref:typename:int
init_dist_pins	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: init_dist_pins$/;"	k	type:PARIO_INFO
init_dist_procs	zoltan/driver/dr_input_const.h	/^  int     init_dist_procs;     \/* How many procs to use in $/;"	m	struct:Parallel_IO	typeref:typename:int
init_dist_type	zoltan/driver/dr_input_const.h	/^  int     init_dist_type;      \/* Flag indicating how input objects$/;"	m	struct:Parallel_IO	typeref:typename:int
init_size	zoltan/driver/dr_input_const.h	/^  ZOLTAN_ID_TYPE  init_size;           \/* For NO_FILE_* (random) input, the $/;"	m	struct:Parallel_IO	typeref:typename:ZOLTAN_ID_TYPE
init_stack	zoltan/reftree/reftree_coarse_path.c	/^static int init_stack(ZZ *zz)$/;"	f	typeref:typename:int	file:
init_vwgt_dim	zoltan/driver/dr_input_const.h	/^  int     init_vwgt_dim;       \/* For NO_FILE_* (random) input, the $/;"	m	struct:Parallel_IO	typeref:typename:int
initial_cycle	zoltan/reftree/reftree_coarse_path.c	/^static int initial_cycle(ZZ *zz)$/;"	f	typeref:typename:int	file:
initialize_dot	zoltan/rcb/shared.c	/^static int initialize_dot($/;"	f	typeref:typename:int	file:
initialize_element	zoltan/driver/dr_elem_util.c	/^void initialize_element(ELEM_INFO *elem)$/;"	f	typeref:typename:void
initialize_element	zoltan/fdriver/fdr_chaco_io.f90	/^subroutine initialize_element(/;"	s	module:dr_chaco_io
initialize_mesh	zoltan/driver/dr_main.c	/^static void initialize_mesh(MESH_INFO_PTR mesh, int proc)$/;"	f	typeref:typename:void	file:
initialize_mesh	zoltan/driver/dr_mainCPP.cpp	/^static void initialize_mesh(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:void	file:
initialize_vertex_global_id_info	zoltan/driver/dr_random_io.c	/^static void initialize_vertex_global_id_info(ZOLTAN_ID_TYPE numMyGIDs, int numProc)$/;"	f	typeref:typename:void	file:
input_assign_inv	zoltan/ch/ch_input_assign.c	/^static int input_assign_inv($/;"	f	typeref:typename:int	file:
input_assign_normal	zoltan/ch/ch_input_assign.c	/^static int input_assign_normal($/;"	f	typeref:typename:int	file:
input_part	zoltan/tpls/third_library.h	/^  indextype *input_part;$/;"	m	struct:ZOLTAN_Third_Part_	typeref:typename:indextype *
input_part_sizes	zoltan/tpls/third_library.h	/^  realtype  *input_part_sizes;$/;"	m	struct:ZOLTAN_Third_Part_	typeref:typename:realtype *
insert_in_hash	zoltan/driver/dr_migrate.c	/^void insert_in_hash($/;"	f	typeref:typename:void
install	zoltan/Makefile.in	/^install: install-recursive$/;"	t
install	zoltan/driver/Makefile.in	/^install: install-am$/;"	t
install	zoltan/fdriver/Makefile.in	/^install: install-am$/;"	t
install-am	zoltan/Makefile.in	/^install-am: all-am$/;"	t
install-am	zoltan/driver/Makefile.in	/^install-am: all-am$/;"	t
install-am	zoltan/fdriver/Makefile.in	/^install-am: all-am$/;"	t
install-data	zoltan/Makefile.in	/^install-data: install-data-recursive$/;"	t
install-data	zoltan/driver/Makefile.in	/^install-data: install-data-am$/;"	t
install-data	zoltan/fdriver/Makefile.in	/^install-data: install-data-am$/;"	t
install-data-am	zoltan/Makefile.in	/^install-data-am: install-includeHEADERS$/;"	t
install-data-am	zoltan/driver/Makefile.in	/^install-data-am:$/;"	t
install-data-am	zoltan/fdriver/Makefile.in	/^install-data-am:$/;"	t
install-dvi	zoltan/Makefile.in	/^install-dvi: install-dvi-recursive$/;"	t
install-dvi	zoltan/driver/Makefile.in	/^install-dvi: install-dvi-am$/;"	t
install-dvi	zoltan/fdriver/Makefile.in	/^install-dvi: install-dvi-am$/;"	t
install-dvi-am	zoltan/Makefile.in	/^install-dvi-am:$/;"	t
install-dvi-am	zoltan/driver/Makefile.in	/^install-dvi-am:$/;"	t
install-dvi-am	zoltan/fdriver/Makefile.in	/^install-dvi-am:$/;"	t
install-exec	zoltan/Makefile.in	/^install-exec: install-exec-recursive$/;"	t
install-exec	zoltan/driver/Makefile.in	/^install-exec: install-exec-am$/;"	t
install-exec	zoltan/fdriver/Makefile.in	/^install-exec: install-exec-am$/;"	t
install-exec-am	zoltan/Makefile.in	/^install-exec-am: install-libLIBRARIES \\$/;"	t
install-exec-am	zoltan/driver/Makefile.in	/^install-exec-am:$/;"	t
install-exec-am	zoltan/fdriver/Makefile.in	/^install-exec-am:$/;"	t
install-html	zoltan/Makefile.in	/^install-html: install-html-recursive$/;"	t
install-html	zoltan/driver/Makefile.in	/^install-html: install-html-am$/;"	t
install-html	zoltan/fdriver/Makefile.in	/^install-html: install-html-am$/;"	t
install-html-am	zoltan/Makefile.in	/^install-html-am:$/;"	t
install-html-am	zoltan/driver/Makefile.in	/^install-html-am:$/;"	t
install-html-am	zoltan/fdriver/Makefile.in	/^install-html-am:$/;"	t
install-includeHEADERS	zoltan/Makefile.in	/^install-includeHEADERS: $(include_HEADERS)$/;"	t
install-info	zoltan/Makefile.in	/^install-info: install-info-recursive$/;"	t
install-info	zoltan/driver/Makefile.in	/^install-info: install-info-am$/;"	t
install-info	zoltan/fdriver/Makefile.in	/^install-info: install-info-am$/;"	t
install-info-am	zoltan/Makefile.in	/^install-info-am:$/;"	t
install-info-am	zoltan/driver/Makefile.in	/^install-info-am:$/;"	t
install-info-am	zoltan/fdriver/Makefile.in	/^install-info-am:$/;"	t
install-libLIBRARIES	zoltan/Makefile.in	/^install-libLIBRARIES: $(lib_LIBRARIES)$/;"	t
install-man	zoltan/Makefile.in	/^install-man:$/;"	t
install-man	zoltan/driver/Makefile.in	/^install-man:$/;"	t
install-man	zoltan/fdriver/Makefile.in	/^install-man:$/;"	t
install-nodist_execincludeHEADERS	zoltan/Makefile.in	/^install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)$/;"	t
install-pdf	zoltan/Makefile.in	/^install-pdf: install-pdf-recursive$/;"	t
install-pdf	zoltan/driver/Makefile.in	/^install-pdf: install-pdf-am$/;"	t
install-pdf	zoltan/fdriver/Makefile.in	/^install-pdf: install-pdf-am$/;"	t
install-pdf-am	zoltan/Makefile.in	/^install-pdf-am:$/;"	t
install-pdf-am	zoltan/driver/Makefile.in	/^install-pdf-am:$/;"	t
install-pdf-am	zoltan/fdriver/Makefile.in	/^install-pdf-am:$/;"	t
install-ps	zoltan/Makefile.in	/^install-ps: install-ps-recursive$/;"	t
install-ps	zoltan/driver/Makefile.in	/^install-ps: install-ps-am$/;"	t
install-ps	zoltan/fdriver/Makefile.in	/^install-ps: install-ps-am$/;"	t
install-ps-am	zoltan/Makefile.in	/^install-ps-am:$/;"	t
install-ps-am	zoltan/driver/Makefile.in	/^install-ps-am:$/;"	t
install-ps-am	zoltan/fdriver/Makefile.in	/^install-ps-am:$/;"	t
install-strip	zoltan/Makefile.in	/^install-strip:$/;"	t
install-strip	zoltan/driver/Makefile.in	/^install-strip:$/;"	t
install-strip	zoltan/fdriver/Makefile.in	/^install-strip:$/;"	t
install_sh	zoltan/Makefile.in	/^install_sh = @install_sh@$/;"	m
install_sh	zoltan/driver/Makefile.in	/^install_sh = @install_sh@$/;"	m
install_sh	zoltan/fdriver/Makefile.in	/^install_sh = @install_sh@$/;"	m
install_sh_DATA	zoltan/Makefile.in	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	zoltan/driver/Makefile.in	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	zoltan/fdriver/Makefile.in	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	zoltan/Makefile.in	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	zoltan/driver/Makefile.in	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	zoltan/fdriver/Makefile.in	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	zoltan/Makefile.in	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	zoltan/driver/Makefile.in	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	zoltan/fdriver/Makefile.in	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
installcheck	zoltan/Makefile.in	/^installcheck: installcheck-recursive$/;"	t
installcheck	zoltan/driver/Makefile.in	/^installcheck: installcheck-am$/;"	t
installcheck	zoltan/fdriver/Makefile.in	/^installcheck: installcheck-am$/;"	t
installcheck-am	zoltan/Makefile.in	/^installcheck-am:$/;"	t
installcheck-am	zoltan/driver/Makefile.in	/^installcheck-am:$/;"	t
installcheck-am	zoltan/fdriver/Makefile.in	/^installcheck-am:$/;"	t
installdirs	zoltan/Makefile.in	/^installdirs: installdirs-recursive$/;"	t
installdirs	zoltan/driver/Makefile.in	/^installdirs:$/;"	t
installdirs	zoltan/fdriver/Makefile.in	/^installdirs:$/;"	t
installdirs-am	zoltan/Makefile.in	/^installdirs-am:$/;"	t
int64_t	zoltan/include/zoltan_types.h	/^typedef INT64 int64_t;$/;"	t	typeref:typename:INT64
intptr_t	zoltan/include/zoltan_types.h	/^typedef INT_PTR intptr_t;$/;"	t	typeref:typename:INT_PTR
invalid_gno	zoltan/hier/hier.h	/^  ZOLTAN_GNO_TYPE invalid_gno;  \/* a value guaranteed not to be one of the gnos *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:ZOLTAN_GNO_TYPE
invperm_value	zoltan/driver/dr_const.h	/^  int      invperm_value;\/* Value for this element in inverse permutation vector$/;"	m	struct:Element_Description	typeref:typename:int
invperm_value	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: invperm_value /;"	k	type:ELEM_INFO
ip	zoltan/phg/phg_match.c	/^    float ip;           \/* total inner product between candidate and partner *\/$/;"	m	struct:triplet	typeref:typename:float	file:
iperm	zoltan/order/order_const.h	/^  int *iperm;$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
iperm	zoltan/tpls/third_library.h	/^  indextype *iperm;     \/* inverse permutation of rank *\/$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:indextype *
iperm	zoltan/tpls/third_library_const.h	/^  indextype *iperm;$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
isherm	zoltan/matlab/mmwrite.m	/^              isherm = 0;   $/;"	v
isherm	zoltan/matlab/mmwrite.m	/^            isherm = 0;$/;"	v
isherm	zoltan/matlab/mmwrite.m	/^        isherm = 1;$/;"	v
isskew	zoltan/matlab/mmwrite.m	/^            isskew = 0;   $/;"	v
isskew	zoltan/matlab/mmwrite.m	/^          isskew = 0;$/;"	v
isskew	zoltan/matlab/mmwrite.m	/^      isskew = 1;$/;"	v
issymm	zoltan/matlab/mmwrite.m	/^          issymm = 0;   $/;"	v
issymm	zoltan/matlab/mmwrite.m	/^        issymm = 0;$/;"	v
issymm	zoltan/matlab/mmwrite.m	/^    issymm = 0;$/;"	v
issymm	zoltan/matlab/mmwrite.m	/^    issymm = 1;$/;"	v
istate2d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const int istate2d[] = \/* 2 dimension to nkey state transitions *\/$/;"	v	typeref:typename:unsigned const int[]
istate3d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const istate3d [] ={ \/* 3 dimension to nkey state transitions *\/$/;"	v	typeref:typename:unsigned const[]
ival	zoltan/params/params_const.h	/^  int ival;$/;"	m	struct:Param_Utype	typeref:typename:int
j	zoltan/driver/dr_mm_readfile.c	/^  int i, j;$/;"	m	struct:ijv	typeref:typename:int	file:
keep_distribution	zoltan/matrix/zoltan_matrix.h	/^  int keep_distribution;       \/* Conserve the original distribution, cannot work with randomiz/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
keep_tree	zoltan/phg/phg.h	/^  int keep_tree;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
key	zoltan/zz/zz_util_const.h	/^  char *key;             \/* pointer to arbitrary length key *\/$/;"	m	struct:Zoltan_Map_Entry	typeref:typename:char *
key_match	zoltan/zz/zz_map.c	/^#define key_match(/;"	d	file:
key_params.o	zoltan/Makefile.in	/^key_params.o: $(srcdir)\/params\/key_params.c$/;"	t
key_params.obj	zoltan/Makefile.in	/^key_params.obj: $(srcdir)\/params\/key_params.c$/;"	t
key_size	zoltan/zz/zz_util_const.h	/^  int key_size;             \/* size in bytes of key *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
keys	zoltan/zz/zz_util_const.h	/^  char *keys;             \/* If copyKeys and !dynamicEntries, keys are here *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:char *
known_to_me	zoltan/reftree/reftree.h	/^   int known_to_me;      \/* for coarse grid objects, 1 if it is known to this$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:int
kway	zoltan/phg/phg.h	/^  int kway;                      \/* 1 -> direct kway, 0->recursive bisection *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
l	zoltan/hsfc/hsfc.h	/^   double l;            \/* leftmost boundary of partition interval  *\/$/;"	m	struct:Partition	typeref:typename:double
latency	zoltan/zz/zz_const.h	/^  int latency;           \/* specify the latency of the topology *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
lb_balance.o	zoltan/Makefile.in	/^lb_balance.o: $(srcdir)\/lb\/lb_balance.c$/;"	t
lb_balance.obj	zoltan/Makefile.in	/^lb_balance.obj: $(srcdir)\/lb\/lb_balance.c$/;"	t
lb_box_assign.o	zoltan/Makefile.in	/^lb_box_assign.o: $(srcdir)\/lb\/lb_box_assign.c$/;"	t
lb_box_assign.obj	zoltan/Makefile.in	/^lb_box_assign.obj: $(srcdir)\/lb\/lb_box_assign.c$/;"	t
lb_copy.o	zoltan/Makefile.in	/^lb_copy.o: $(srcdir)\/lb\/lb_copy.c$/;"	t
lb_copy.obj	zoltan/Makefile.in	/^lb_copy.obj: $(srcdir)\/lb\/lb_copy.c$/;"	t
lb_eval.o	zoltan/Makefile.in	/^lb_eval.o: $(srcdir)\/lb\/lb_eval.c$/;"	t
lb_eval.obj	zoltan/Makefile.in	/^lb_eval.obj: $(srcdir)\/lb\/lb_eval.c$/;"	t
lb_free.o	zoltan/Makefile.in	/^lb_free.o: $(srcdir)\/lb\/lb_free.c$/;"	t
lb_free.obj	zoltan/Makefile.in	/^lb_free.obj: $(srcdir)\/lb\/lb_free.c$/;"	t
lb_init.o	zoltan/Makefile.in	/^lb_init.o: $(srcdir)\/lb\/lb_init.c$/;"	t
lb_init.obj	zoltan/Makefile.in	/^lb_init.obj: $(srcdir)\/lb\/lb_init.c$/;"	t
lb_invert.o	zoltan/Makefile.in	/^lb_invert.o: $(srcdir)\/lb\/lb_invert.c$/;"	t
lb_invert.obj	zoltan/Makefile.in	/^lb_invert.obj: $(srcdir)\/lb\/lb_invert.c$/;"	t
lb_migrate.o	zoltan/Makefile.in	/^lb_migrate.o: $(srcdir)\/lb\/lb_migrate.c$/;"	t
lb_migrate.obj	zoltan/Makefile.in	/^lb_migrate.obj: $(srcdir)\/lb\/lb_migrate.c$/;"	t
lb_part2proc.o	zoltan/Makefile.in	/^lb_part2proc.o: $(srcdir)\/lb\/lb_part2proc.c$/;"	t
lb_part2proc.obj	zoltan/Makefile.in	/^lb_part2proc.obj: $(srcdir)\/lb\/lb_part2proc.c$/;"	t
lb_point_assign.o	zoltan/Makefile.in	/^lb_point_assign.o: $(srcdir)\/lb\/lb_point_assign.c$/;"	t
lb_point_assign.obj	zoltan/Makefile.in	/^lb_point_assign.obj: $(srcdir)\/lb\/lb_point_assign.c$/;"	t
lb_remap.o	zoltan/Makefile.in	/^lb_remap.o: $(srcdir)\/lb\/lb_remap.c$/;"	t
lb_remap.obj	zoltan/Makefile.in	/^lb_remap.obj: $(srcdir)\/lb\/lb_remap.c$/;"	t
lb_set_fn.o	zoltan/Makefile.in	/^lb_set_fn.o: $(srcdir)\/lb\/lb_set_fn.c$/;"	t
lb_set_fn.obj	zoltan/Makefile.in	/^lb_set_fn.obj: $(srcdir)\/lb\/lb_set_fn.c$/;"	t
lb_set_method.o	zoltan/Makefile.in	/^lb_set_method.o: $(srcdir)\/lb\/lb_set_method.c$/;"	t
lb_set_method.obj	zoltan/Makefile.in	/^lb_set_method.obj: $(srcdir)\/lb\/lb_set_method.c$/;"	t
lb_set_part_sizes.o	zoltan/Makefile.in	/^lb_set_part_sizes.o: $(srcdir)\/lb\/lb_set_part_sizes.c$/;"	t
lb_set_part_sizes.obj	zoltan/Makefile.in	/^lb_set_part_sizes.obj: $(srcdir)\/lb\/lb_set_part_sizes.c$/;"	t
leaves	zoltan/order/order_const.h	/^  int *leaves;                  \/* Out: list of all leaves *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
leaves	zoltan/tpls/third_library_const.h	/^  indextype *leaves;                  \/* Out: list of all leaves *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
left_leaf	zoltan/rcb/rcb.h	/^  int       left_leaf;          \/* left child of this node in cut tree *\/$/;"	m	struct:rcb_tree	typeref:typename:int
left_leaf	zoltan/rcb/rib.h	/^    int       left_leaf;        \/* left child of this node in cut tree *\/$/;"	m	struct:rib_tree	typeref:typename:int
lenGID	zoltan/phg/phg_lookup.h	/^  int lenGID;$/;"	m	struct:_GID_lookup	typeref:typename:int
length	zoltan/params/params_const.h	/^  int length;			\/* length of vector; 0 if scalar *\/$/;"	m	struct:Param_Vars	typeref:typename:int
lengths_from	zoltan/Utilities/Communication/comm.h	/^    int      *lengths_from;     \/* # items I recv in my messages *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
lengths_to	zoltan/Utilities/Communication/comm.h	/^    int      *lengths_to;       \/* # items I send in my messages *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
level	zoltan/driver/dr_err_const.h	/^  int   level;$/;"	m	struct:error_message	typeref:typename:int
level	zoltan/hier/hier.h	/^  int level;                         \/* level currently being processed *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
levelCount	zoltan/par/par_median_randomized.c	/^static int levelCount[DEPTHMAX+1];$/;"	v	typeref:typename:int[]	file:
levelValues	zoltan/par/par_median_randomized.c	/^static int levelValues[DEPTHMAX][MAXLENGTH];$/;"	v	typeref:typename:int[][]	file:
lib_LIBRARIES	zoltan/Makefile.am	/^lib_LIBRARIES = $(ZOLTAN_LIB)$/;"	m
lib_LIBRARIES	zoltan/Makefile.in	/^lib_LIBRARIES = $(ZOLTAN_LIB)$/;"	m
libdir	zoltan/Makefile.in	/^libdir = @libdir@$/;"	m
libdir	zoltan/driver/Makefile.in	/^libdir = @libdir@$/;"	m
libdir	zoltan/fdriver/Makefile.in	/^libdir = @libdir@$/;"	m
libexecdir	zoltan/Makefile.in	/^libexecdir = @libexecdir@$/;"	m
libexecdir	zoltan/driver/Makefile.in	/^libexecdir = @libexecdir@$/;"	m
libexecdir	zoltan/fdriver/Makefile.in	/^libexecdir = @libexecdir@$/;"	m
libzoltan.a	zoltan/Makefile.in	/^libzoltan.a: $(libzoltan_a_OBJECTS) $(libzoltan_a_DEPENDENCIES) $(EXTRA_libzoltan_a_DEPENDENCIES/;"	t
libzoltan_a_AR	zoltan/Makefile.am	/^libzoltan_a_AR = $(ALTERNATE_AR)$/;"	m
libzoltan_a_AR	zoltan/Makefile.am	/^libzoltan_a_AR = $(AR) cru$/;"	m
libzoltan_a_DEPENDENCIES	zoltan/Makefile.in	/^libzoltan_a_DEPENDENCIES =$/;"	m
libzoltan_a_LIBADD	zoltan/Makefile.am	/^libzoltan_a_LIBADD = $(XTRALDADD)$/;"	m
libzoltan_a_LIBADD	zoltan/Makefile.in	/^libzoltan_a_LIBADD = $(XTRALDADD)$/;"	m
libzoltan_a_OBJECTS	zoltan/Makefile.in	/^libzoltan_a_OBJECTS = $(am_libzoltan_a_OBJECTS)$/;"	m
libzoltan_a_SOURCES	zoltan/Makefile.am	/^libzoltan_a_SOURCES = \\$/;"	m
libzoltan_a_SOURCES	zoltan/Makefile.in	/^libzoltan_a_SOURCES = \\$/;"	m
lid	zoltan/reftree/reftree.h	/^  int lid;                      \/* integer corresponding to the gid *\/$/;"	m	struct:Zoltan_Reftree_inthash_node	typeref:typename:int
lid_flag	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   char lid_flag;          \/* indicates if LID data are present            *\/$/;"	m	struct:__anonc14baf7a0108	typeref:typename:char
lid_length	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int lid_length;         \/* = zz->Num_LID -- avoid needing Zoltan_Struct *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
lids	zoltan/order/order_const.h	/^  ZOLTAN_ID_PTR lids;           \/* ptr to list of local ids *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:ZOLTAN_ID_PTR
lids	zoltan/tpls/third_library_const.h	/^  ZOLTAN_ID_PTR lids;           \/* ptr to list of local ids *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:ZOLTAN_ID_PTR
line	zoltan/Utilities/Memory/mem.c	/^  int       line;                       \/* line number *\/$/;"	m	struct:malloc_debug_data	typeref:typename:int	file:
line	zoltan/ch/ch_input_read.c	/^static char line[LINE_LENGTH];	\/* space to hold values *\/$/;"	v	typeref:typename:char[]	file:
line	zoltan/driver/dr_input_const.h	/^  char line[UNDEFINED_LIST_MAX][UNDEFINED_LENGTH_MAX];$/;"	m	struct:ParameterList	typeref:typename:char[][]
line_no	zoltan/driver/dr_err_const.h	/^  int   line_no;$/;"	m	struct:error_message	typeref:typename:int
list_size	zoltan/driver/dr_input_const.h	/^  int list_size;$/;"	m	struct:ParameterList	typeref:typename:int
lno	zoltan/coloring/g2l_hash.h	/^    int lno;           \/* Mapped id of gno*\/$/;"	m	struct:G2L_Hash_Node	typeref:typename:int
lo	zoltan/rcb/rcb.h	/^  double    lo[3], hi[3];	\/* xyz lo\/hi bounds *\/$/;"	m	struct:rcb_box	typeref:typename:double[3]
loc	zoltan/phg/phg_build_calls.c	/^  int loc; \/* Will be used as counter for #vertices in an edge and later as$/;"	m	struct:Convert_To_CSR::_hash_node	typeref:typename:int	file:
local	zoltan/matrix/zoltan_matrix.h	/^  int local;                   \/* If only local edges have to be kept *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
localID	zoltan/driver/dr_migrate.c	/^  int localID;$/;"	m	struct:New_Elem_Hash_Node	typeref:typename:int	file:
local_HEs_from_export_lists	zoltan/lb/lb_remap.c	/^static int local_HEs_from_export_lists($/;"	f	typeref:typename:int	file:
local_HEs_from_import_lists	zoltan/lb/lb_remap.c	/^static int local_HEs_from_import_lists($/;"	f	typeref:typename:int	file:
local_coarse_partitioner	zoltan/phg/phg_serialpartition.c	/^static int local_coarse_partitioner($/;"	f	typeref:typename:int	file:
local_id	zoltan/reftree/reftree.h	/^   ZOLTAN_ID_PTR local_id;   \/* local ID of the corresponding element *\/$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:ZOLTAN_ID_PTR
local_to_global_id_map	zoltan/driver/dr_random_io.c	/^static ZOLTAN_ID_TYPE local_to_global_id_map(int local_id, int rank)$/;"	f	typeref:typename:ZOLTAN_ID_TYPE	file:
localedir	zoltan/Makefile.in	/^localedir = @localedir@$/;"	m
localedir	zoltan/driver/Makefile.in	/^localedir = @localedir@$/;"	m
localedir	zoltan/fdriver/Makefile.in	/^localedir = @localedir@$/;"	m
localstatedir	zoltan/Makefile.in	/^localstatedir = @localstatedir@$/;"	m
localstatedir	zoltan/driver/Makefile.in	/^localstatedir = @localstatedir@$/;"	m
localstatedir	zoltan/fdriver/Makefile.in	/^localstatedir = @localstatedir@$/;"	m
low	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^   int low;$/;"	m	struct:__anon50a459380108	typeref:typename:int	file:
low_limit	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^  int low_limit;$/;"	m	struct:dd_nh2_struct	typeref:typename:int	file:
lowerc	zoltan/fdriver/mmio.f	/^      subroutine lowerc(/;"	s
lowercase	zoltan/fdriver/fdr_input.f90	/^function lowercase(/;"	f	module:dr_input
lval	zoltan/params/params_const.h	/^  long lval;$/;"	m	struct:Param_Utype	typeref:typename:long
main	zoltan/driver/dr_main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	zoltan/driver/dr_mainCPP.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
maintainer-clean	zoltan/Makefile.in	/^maintainer-clean: maintainer-clean-recursive$/;"	t
maintainer-clean	zoltan/driver/Makefile.in	/^maintainer-clean: maintainer-clean-am$/;"	t
maintainer-clean	zoltan/fdriver/Makefile.in	/^maintainer-clean: maintainer-clean-am$/;"	t
maintainer-clean-am	zoltan/Makefile.in	/^maintainer-clean-am: distclean-am maintainer-clean-generic$/;"	t
maintainer-clean-am	zoltan/driver/Makefile.in	/^maintainer-clean-am: distclean-am maintainer-clean-generic$/;"	t
maintainer-clean-am	zoltan/fdriver/Makefile.in	/^maintainer-clean-am: distclean-am maintainer-clean-generic$/;"	t
maintainer-clean-generic	zoltan/Makefile.in	/^maintainer-clean-generic:$/;"	t
maintainer-clean-generic	zoltan/driver/Makefile.in	/^maintainer-clean-generic:$/;"	t
maintainer-clean-generic	zoltan/fdriver/Makefile.in	/^maintainer-clean-generic:$/;"	t
make_platform_name_string	zoltan/hier/hier.c	/^static char *make_platform_name_string()$/;"	f	typeref:typename:char *	file:
make_string	zoltan/driver/dr_hg_io.c	/^static void make_string(char *buf, char *str)$/;"	f	typeref:typename:void	file:
malloc_HEinfo	zoltan/lb/lb_remap.c	/^static int malloc_HEinfo($/;"	f	typeref:typename:int	file:
malloc_debug_data	zoltan/Utilities/Memory/mem.c	/^static struct malloc_debug_data {$/;"	s	file:
mandir	zoltan/Makefile.in	/^mandir = @mandir@$/;"	m
mandir	zoltan/driver/Makefile.in	/^mandir = @mandir@$/;"	m
mandir	zoltan/fdriver/Makefile.in	/^mandir = @mandir@$/;"	m
map	zoltan/matrix/matrix_distribute.c	/^  ZOLTAN_MAP* map;$/;"	m	struct:ZOLTAN_DIST_PART_	typeref:typename:ZOLTAN_MAP *	file:
map_alloc_size	zoltan/driver/dr_maps.c	/^  int map_alloc_size;$/;"	m	struct:map_list_head	typeref:typename:int	file:
map_alloc_size	zoltan/driver/dr_mapsCPP.cpp	/^  int map_alloc_size;$/;"	m	struct:map_list_head	typeref:typename:int	file:
map_alloc_size	zoltan/fdriver/fdr_chaco_io.f90	/^  integer(Zoltan_INT) :: map_alloc_size$/;"	k	type:map_list_head
map_list_head	zoltan/driver/dr_maps.c	/^struct map_list_head {$/;"	s	file:
map_list_head	zoltan/driver/dr_mapsCPP.cpp	/^struct map_list_head {$/;"	s	file:
map_list_head	zoltan/fdriver/fdr_chaco_io.f90	/^type map_list_head$/;"	t	function:build_elem_comm_maps
mark_lo_and_hi	zoltan/par/par_median_randomized.c	/^static void mark_lo_and_hi(double loBound, double hiBound,$/;"	f	typeref:typename:void	file:
mark_median	zoltan/par/par_median_randomized.c	/^static int mark_median(int *dotlist, int *dotmark, $/;"	f	typeref:typename:int	file:
match	zoltan/phg/phg_tree.h	/^  int match;   \/* Matching time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
match_array_type	zoltan/phg/phg.h	/^  int  match_array_type;         \/* interpretation of match array:$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
matching	zoltan/phg/phg.h	/^  ZOLTAN_PHG_MATCHING_FN *matching;    \/* Pointers to Matching function *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:ZOLTAN_PHG_MATCHING_FN *
matching_ipm	zoltan/phg/phg_match.c	/^static int matching_ipm(ZZ *zz, HGraph *hg, PHGPartParams *hgp,$/;"	f	typeref:typename:int	file:
matching_pgm	zoltan/lb/lb_remap.c	/^static int matching_pgm (ZZ *zz, HGraph *hg, int *match, int *limit)$/;"	f	typeref:typename:int	file:
matchstage	zoltan/phg/phg_tree.h	/^  int matchstage[7];  \/* Matching stages *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int[7]
matrix_build.o	zoltan/Makefile.in	/^matrix_build.o: $(srcdir)\/matrix\/matrix_build.c$/;"	t
matrix_build.obj	zoltan/Makefile.in	/^matrix_build.obj: $(srcdir)\/matrix\/matrix_build.c$/;"	t
matrix_distribute.o	zoltan/Makefile.in	/^matrix_distribute.o: $(srcdir)\/matrix\/matrix_distribute.c$/;"	t
matrix_distribute.obj	zoltan/Makefile.in	/^matrix_distribute.obj: $(srcdir)\/matrix\/matrix_distribute.c$/;"	t
matrix_get_edges	zoltan/matrix/matrix_build.c	/^matrix_get_edges(ZZ *zz, Zoltan_matrix *matrix, ZOLTAN_ID_PTR *yGID, ZOLTAN_ID_PTR *pinID, int n/;"	f	typeref:typename:int	file:
matrix_obj	zoltan/driver/dr_input_const.h	/^  int     matrix_obj;          \/* What are the objects to be balanced$/;"	m	struct:Parallel_IO	typeref:typename:int
matrix_operations.o	zoltan/Makefile.in	/^matrix_operations.o: $(srcdir)\/matrix\/matrix_operations.c$/;"	t
matrix_operations.obj	zoltan/Makefile.in	/^matrix_operations.obj: $(srcdir)\/matrix\/matrix_operations.c$/;"	t
matrix_sym.o	zoltan/Makefile.in	/^matrix_sym.o: $(srcdir)\/matrix\/matrix_sym.c$/;"	t
matrix_sym.obj	zoltan/Makefile.in	/^matrix_sym.obj: $(srcdir)\/matrix\/matrix_sym.c$/;"	t
matrix_utils.o	zoltan/Makefile.in	/^matrix_utils.o: $(srcdir)\/matrix\/matrix_utils.c$/;"	t
matrix_utils.obj	zoltan/Makefile.in	/^matrix_utils.obj: $(srcdir)\/matrix\/matrix_utils.c$/;"	t
mattype	zoltan/matlab/mmwrite.m	/^    mattype = 'complex';$/;"	v
mattype	zoltan/matlab/mmwrite.m	/^    mattype = 'real'; $/;"	v
mattype	zoltan/matlab/mmwrite.m	/^    mattype = 'real';$/;"	v
mattype	zoltan/matlab/mmwrite.m	/^  mattype = 'real'; % placeholder, will check after FIND-ing A$/;"	v
mattype	zoltan/matlab/mmwrite.m	/^  mattype = field;$/;"	v
max	zoltan/rcb/inertial2d.c	/^#define max(/;"	d	file:
max	zoltan/rcb/inertial3d.c	/^#define max(/;"	d	file:
max_alloc	zoltan/Utilities/Memory/mem.c	/^static size_t max_alloc = 0;	\/* Largest single allocation *\/$/;"	v	typeref:typename:size_t	file:
max_entries	zoltan/zz/zz_util_const.h	/^  int max_entries;      \/* size of top array, or 0 if dynamicEntries == 1 *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
max_gid	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn1.c	/^ int max_gid ;$/;"	m	struct:dd_nh1_struct	typeref:typename:int	file:
max_id_length	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int max_id_length;      \/* max(gid_length, lid_length)           *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
max_index	zoltan/zz/zz_util_const.h	/^  int max_index;        \/* hash number range *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
max_send_size	zoltan/Utilities/Communication/comm.h	/^    int       max_send_size;	\/* size of longest message I send (w\/o self) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
max_value	zoltan/coloring/bucket.h	/^    int            max_value;$/;"	m	struct:arg	typeref:typename:int
maxed_recvs	zoltan/Utilities/Communication/comm.h	/^    int       maxed_recvs;      \/* do I have to many receives to post all$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
maxsize	zoltan/coloring/g2l_hash.h	/^    int   maxsize;$/;"	m	struct:G2L_Hash	typeref:typename:int
measure_stays	zoltan/lb/lb_remap.c	/^static float measure_stays($/;"	f	typeref:typename:float	file:
med3	zoltan/par/par_median_randomized.c	/^static int med3(double *v, int a, int b, int c)$/;"	f	typeref:typename:int	file:
median	zoltan/par/par_median.c	/^struct median {          \/* median cut info *\/$/;"	s	file:
mem.o	zoltan/Makefile.in	/^mem.o: $(srcdir)\/Utilities\/Memory\/mem.c$/;"	t
mem.obj	zoltan/Makefile.in	/^mem.obj: $(srcdir)\/Utilities\/Memory\/mem.c$/;"	t
mem_wgt	zoltan/driver/dr_const.h	/^  float    mem_wgt;	\/* the memory weight associated with the elem *\/$/;"	m	struct:Element_Description	typeref:typename:float
mem_wgt	zoltan/fdriver/fdr_const.f90	/^  real(Zoltan_FLOAT)  :: mem_wgt /;"	k	type:ELEM_INFO
meminfo_signal_handler	zoltan/driver/dr_main.c	/^void meminfo_signal_handler(int sig)$/;"	f	typeref:typename:void
memory	zoltan/zz/zz_const.h	/^  int memory;            \/* if (nnodes == 1) specify memory of the processor *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
merge_gids	zoltan/zz/zz_gen_files.c	/^static ZOLTAN_GNO_TYPE merge_gids(ZZ *zz, ZOLTAN_ID_PTR *merged_egids, ZOLTAN_GNO_TYPE size_merg/;"	f	typeref:typename:ZOLTAN_GNO_TYPE	file:
message	zoltan/matlab/mmread.m	/^       message = ...$/;"	v
message_receive	zoltan/lb/low_mem_lb_migrate.c	/^static int message_receive(MPI_Comm comm, int src, char *buf, int len)$/;"	f	typeref:typename:int	file:
message_send	zoltan/lb/low_mem_lb_migrate.c	/^static int message_send(MPI_Comm comm, int dest, char *buf, int len)$/;"	f	typeref:typename:int	file:
message_wait	zoltan/lb/low_mem_lb_migrate.c	/^static int message_wait(int len)$/;"	f	typeref:typename:int	file:
method	zoltan/driver/dr_const.h	/^  char   method[32];                 \/* this is the method string that will$/;"	m	struct:Problem_Description	typeref:typename:char[32]
method	zoltan/fdriver/fdr_const.f90	/^  character(len=32) :: method /;"	k	type:PROB_INFO
method	zoltan/matlab/zoltan.m	/^  method = 'hypergraph';$/;"	v
method	zoltan/order/order_const.h	/^  char method[MAX_PARAM_STRING_LEN];	   \/* In: Ordering method. *\/$/;"	m	struct:Zoltan_Order_Options	typeref:typename:char[]
method	zoltan/order/order_const.h	/^  char method[MAX_PARAM_STRING_LEN]; \/* Ordering method used *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:char[]
method	zoltan/tpls/third_library_const.h	/^  char method[MAX_PARAM_STRING_LEN]; \/* Ordering method used *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:char[]
migrate_elem_size	zoltan/driver/dr_migrate.c	/^int migrate_elem_size(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
migrate_elem_size	zoltan/driver/dr_migrateCPP.cpp	/^int migrate_elem_size(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:int
migrate_elem_size	zoltan/fdriver/fdr_migrate.f90	/^integer(Zoltan_INT) function migrate_elem_size(/;"	f	module:dr_migrate
migrate_elem_size_multi	zoltan/driver/dr_migrate.c	/^void migrate_elem_size_multi($/;"	f	typeref:typename:void
migrate_elem_size_multi	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_elem_size_multi($/;"	f	typeref:typename:void
migrate_elem_size_multi	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_elem_size_multi(/;"	s	module:dr_migrate
migrate_elements	zoltan/driver/dr_migrate.c	/^int migrate_elements($/;"	f	typeref:typename:int
migrate_elements	zoltan/driver/dr_migrateCPP.cpp	/^int migrate_elements($/;"	f	typeref:typename:int
migrate_elements	zoltan/fdriver/fdr_migrate.f90	/^logical function migrate_elements(/;"	f	module:dr_migrate
migrate_pack_elem	zoltan/driver/dr_migrate.c	/^ZOLTAN_PACK_OBJ_FN migrate_pack_elem;$/;"	v	typeref:typename:ZOLTAN_PACK_OBJ_FN
migrate_pack_elem	zoltan/driver/dr_migrate.c	/^void migrate_pack_elem(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
migrate_pack_elem	zoltan/driver/dr_migrateCPP.cpp	/^ZOLTAN_PACK_OBJ_FN migrate_pack_elem;$/;"	v	typeref:typename:ZOLTAN_PACK_OBJ_FN
migrate_pack_elem	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_pack_elem(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
migrate_pack_elem	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_pack_elem(/;"	s	module:dr_migrate
migrate_pack_elem_multi	zoltan/driver/dr_migrate.c	/^ZOLTAN_PACK_OBJ_MULTI_FN migrate_pack_elem_multi;$/;"	v	typeref:typename:ZOLTAN_PACK_OBJ_MULTI_FN
migrate_pack_elem_multi	zoltan/driver/dr_migrate.c	/^void migrate_pack_elem_multi($/;"	f	typeref:typename:void
migrate_pack_elem_multi	zoltan/driver/dr_migrateCPP.cpp	/^ZOLTAN_PACK_OBJ_MULTI_FN migrate_pack_elem_multi;$/;"	v	typeref:typename:ZOLTAN_PACK_OBJ_MULTI_FN
migrate_pack_elem_multi	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_pack_elem_multi($/;"	f	typeref:typename:void
migrate_pack_elem_multi	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_pack_elem_multi(/;"	s	module:dr_migrate
migrate_post_process	zoltan/driver/dr_migrate.c	/^ZOLTAN_POST_MIGRATE_PP_FN migrate_post_process;$/;"	v	typeref:typename:ZOLTAN_POST_MIGRATE_PP_FN
migrate_post_process	zoltan/driver/dr_migrate.c	/^void migrate_post_process(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
migrate_post_process	zoltan/driver/dr_migrateCPP.cpp	/^ZOLTAN_POST_MIGRATE_PP_FN migrate_post_process;$/;"	v	typeref:typename:ZOLTAN_POST_MIGRATE_PP_FN
migrate_post_process	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_post_process(void *data, int num_gid_entries, int num_lid_entries,$/;"	f	typeref:typename:void
migrate_post_process	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_post_process(/;"	s	module:dr_migrate
migrate_pre_process	zoltan/driver/dr_migrate.c	/^ZOLTAN_PRE_MIGRATE_PP_FN migrate_pre_process;$/;"	v	typeref:typename:ZOLTAN_PRE_MIGRATE_PP_FN
migrate_pre_process	zoltan/driver/dr_migrate.c	/^void migrate_pre_process(void *data, int num_gid_entries, int num_lid_entries, $/;"	f	typeref:typename:void
migrate_pre_process	zoltan/driver/dr_migrateCPP.cpp	/^ZOLTAN_PRE_MIGRATE_PP_FN migrate_pre_process;$/;"	v	typeref:typename:ZOLTAN_PRE_MIGRATE_PP_FN
migrate_pre_process	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_pre_process(void *data, int num_gid_entries, int num_lid_entries, $/;"	f	typeref:typename:void
migrate_pre_process	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_pre_process(/;"	s	module:dr_migrate
migrate_to_next_subgroups	zoltan/hier/hier.c	/^static int migrate_to_next_subgroups(HierPartParams *hpp, int num_export,$/;"	f	typeref:typename:int	file:
migrate_unpack_elem	zoltan/driver/dr_migrate.c	/^ZOLTAN_UNPACK_OBJ_FN migrate_unpack_elem;$/;"	v	typeref:typename:ZOLTAN_UNPACK_OBJ_FN
migrate_unpack_elem	zoltan/driver/dr_migrate.c	/^void migrate_unpack_elem(void *data, int num_gid_entries, ZOLTAN_ID_PTR elem_gid, $/;"	f	typeref:typename:void
migrate_unpack_elem	zoltan/driver/dr_migrateCPP.cpp	/^ZOLTAN_UNPACK_OBJ_FN migrate_unpack_elem;$/;"	v	typeref:typename:ZOLTAN_UNPACK_OBJ_FN
migrate_unpack_elem	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_unpack_elem(void *data, int num_gid_entries, ZOLTAN_ID_PTR elem_gid, $/;"	f	typeref:typename:void
migrate_unpack_elem	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_unpack_elem(/;"	s	module:dr_migrate
migrate_unpack_elem_multi	zoltan/driver/dr_migrate.c	/^ZOLTAN_UNPACK_OBJ_MULTI_FN migrate_unpack_elem_multi;$/;"	v	typeref:typename:ZOLTAN_UNPACK_OBJ_MULTI_FN
migrate_unpack_elem_multi	zoltan/driver/dr_migrate.c	/^void migrate_unpack_elem_multi($/;"	f	typeref:typename:void
migrate_unpack_elem_multi	zoltan/driver/dr_migrateCPP.cpp	/^ZOLTAN_UNPACK_OBJ_MULTI_FN migrate_unpack_elem_multi;$/;"	v	typeref:typename:ZOLTAN_UNPACK_OBJ_MULTI_FN
migrate_unpack_elem_multi	zoltan/driver/dr_migrateCPP.cpp	/^void migrate_unpack_elem_multi($/;"	f	typeref:typename:void
migrate_unpack_elem_multi	zoltan/fdriver/fdr_migrate.f90	/^subroutine migrate_unpack_elem_multi(/;"	s	module:dr_migrate
min	zoltan/rcb/inertial2d.c	/^#define min(/;"	d	file:
min	zoltan/rcb/inertial3d.c	/^#define min(/;"	d	file:
minVersion	zoltan/ha/ha_ovis.h	/^  double minVersion;$/;"	m	struct:OVIS_parameters	typeref:typename:double
mkdir_p	zoltan/Makefile.in	/^mkdir_p = @mkdir_p@$/;"	m
mkdir_p	zoltan/driver/Makefile.in	/^mkdir_p = @mkdir_p@$/;"	m
mkdir_p	zoltan/fdriver/Makefile.in	/^mkdir_p = @mkdir_p@$/;"	m
mkinstalldirs	zoltan/Makefile.in	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	zoltan/driver/Makefile.in	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	zoltan/fdriver/Makefile.in	/^mkinstalldirs = $(install_sh) -d$/;"	m
mm_cleanup	zoltan/driver/dr_hg_io.c	/^void mm_cleanup(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:void
mm_clear_typecode	zoltan/driver/dr_mmio.h	/^#define mm_clear_typecode(/;"	d
mm_initialize_typecode	zoltan/driver/dr_mmio.h	/^#define mm_initialize_typecode(/;"	d
mm_is_array	zoltan/driver/dr_mmio.h	/^#define mm_is_array(/;"	d
mm_is_complex	zoltan/driver/dr_mmio.h	/^#define mm_is_complex(/;"	d
mm_is_coordinate	zoltan/driver/dr_mmio.h	/^#define mm_is_coordinate(/;"	d
mm_is_dense	zoltan/driver/dr_mmio.h	/^#define mm_is_dense(/;"	d
mm_is_general	zoltan/driver/dr_mmio.h	/^#define mm_is_general(/;"	d
mm_is_hermitian	zoltan/driver/dr_mmio.h	/^#define mm_is_hermitian(/;"	d
mm_is_integer	zoltan/driver/dr_mmio.h	/^#define mm_is_integer(/;"	d
mm_is_matrix	zoltan/driver/dr_mmio.h	/^#define mm_is_matrix(/;"	d
mm_is_pattern	zoltan/driver/dr_mmio.h	/^#define mm_is_pattern(/;"	d
mm_is_real	zoltan/driver/dr_mmio.h	/^#define mm_is_real(/;"	d
mm_is_skew	zoltan/driver/dr_mmio.h	/^#define mm_is_skew(/;"	d
mm_is_sparse	zoltan/driver/dr_mmio.h	/^#define mm_is_sparse(/;"	d
mm_is_symmetric	zoltan/driver/dr_mmio.h	/^#define mm_is_symmetric(/;"	d
mm_is_valid	zoltan/driver/dr_mmio.c	/^int mm_is_valid(MM_typecode matcode)$/;"	f	typeref:typename:int
mm_read_banner	zoltan/driver/dr_mmio.c	/^int mm_read_banner(ZOLTAN_FILE* f, MM_typecode *matcode)$/;"	f	typeref:typename:int
mm_read_mtx_array_size	zoltan/driver/dr_mmio.c	/^int mm_read_mtx_array_size(ZOLTAN_FILE* f, int *M, int *N)$/;"	f	typeref:typename:int
mm_read_mtx_crd	zoltan/driver/dr_mmio.c	/^int mm_read_mtx_crd(char *fname, int *M, int *N, int *nz, int **I, int **J,$/;"	f	typeref:typename:int
mm_read_mtx_crd_data	zoltan/driver/dr_mmio.c	/^int mm_read_mtx_crd_data(ZOLTAN_FILE* f, int M, int N, int nz, int I[], int J[],$/;"	f	typeref:typename:int
mm_read_mtx_crd_entry	zoltan/driver/dr_mmio.c	/^int mm_read_mtx_crd_entry(ZOLTAN_FILE* f, int *I, int *J,$/;"	f	typeref:typename:int
mm_read_mtx_crd_size	zoltan/driver/dr_mmio.c	/^int mm_read_mtx_crd_size(ZOLTAN_FILE* f, int *M, int *N, int *nz )$/;"	f	typeref:typename:int
mm_read_unsymmetric_sparse	zoltan/driver/dr_mmio.c	/^int mm_read_unsymmetric_sparse(const char *fname, int *M_, int *N_, int *nz_,$/;"	f	typeref:typename:int
mm_set_array	zoltan/driver/dr_mmio.h	/^#define mm_set_array(/;"	d
mm_set_complex	zoltan/driver/dr_mmio.h	/^#define mm_set_complex(/;"	d
mm_set_coordinate	zoltan/driver/dr_mmio.h	/^#define mm_set_coordinate(/;"	d
mm_set_dense	zoltan/driver/dr_mmio.h	/^#define mm_set_dense(/;"	d
mm_set_general	zoltan/driver/dr_mmio.h	/^#define mm_set_general(/;"	d
mm_set_hermitian	zoltan/driver/dr_mmio.h	/^#define mm_set_hermitian(/;"	d
mm_set_integer	zoltan/driver/dr_mmio.h	/^#define mm_set_integer(/;"	d
mm_set_matrix	zoltan/driver/dr_mmio.h	/^#define mm_set_matrix(/;"	d
mm_set_pattern	zoltan/driver/dr_mmio.h	/^#define mm_set_pattern(/;"	d
mm_set_real	zoltan/driver/dr_mmio.h	/^#define mm_set_real(/;"	d
mm_set_skew	zoltan/driver/dr_mmio.h	/^#define mm_set_skew(/;"	d
mm_set_sparse	zoltan/driver/dr_mmio.h	/^#define mm_set_sparse(/;"	d
mm_set_symmetric	zoltan/driver/dr_mmio.h	/^#define mm_set_symmetric(/;"	d
mm_typecode_to_str	zoltan/driver/dr_mmio.c	/^char  *mm_typecode_to_str(MM_typecode matcode)$/;"	f	typeref:typename:char *
mm_write_banner	zoltan/driver/dr_mmio.c	/^int mm_write_banner(FILE *f, MM_typecode matcode)$/;"	f	typeref:typename:int
mm_write_mtx_array_size	zoltan/driver/dr_mmio.c	/^int mm_write_mtx_array_size(FILE *f, int M, int N)$/;"	f	typeref:typename:int
mm_write_mtx_crd	zoltan/driver/dr_mmio.c	/^int mm_write_mtx_crd(char fname[], int M, int N, int nz, int I[], int J[],$/;"	f	typeref:typename:int
mm_write_mtx_crd_size	zoltan/driver/dr_mmio.c	/^int mm_write_mtx_crd_size(FILE *f, int M, int N, int nz)$/;"	f	typeref:typename:int
mmfile	zoltan/matlab/mmread.m	/^mmfile = fopen(filename,'r');$/;"	v
mmfile	zoltan/matlab/mmwrite.m	/^mmfile = fopen([filename],'w');$/;"	v
mminfo	zoltan/fdriver/mmio.f	/^      subroutine mminfo(/;"	s
mmio.o	zoltan/fdriver/Makefile.in	/^mmio.o: $(srcdir)\/mmio.f$/;"	t
mmio.obj	zoltan/fdriver/Makefile.in	/^mmio.obj: $(srcdir)\/mmio.f$/;"	t
mmread	zoltan/fdriver/mmio.f	/^      subroutine mmread(/;"	s
mmread	zoltan/matlab/mmread.m	/^function  [A,rows,cols,entries,rep,field,symm] = mmread(filename)$/;"	f
mmwrite	zoltan/fdriver/mmio.f	/^      subroutine mmwrite(/;"	s
mmwrite	zoltan/matlab/mmwrite.m	/^function [ err ] = mmwrite(filename,A,comment,field,precision)$/;"	f
mostlyclean	zoltan/Makefile.in	/^mostlyclean: mostlyclean-recursive$/;"	t
mostlyclean	zoltan/driver/Makefile.in	/^mostlyclean: mostlyclean-am$/;"	t
mostlyclean	zoltan/fdriver/Makefile.in	/^mostlyclean: mostlyclean-am$/;"	t
mostlyclean-am	zoltan/Makefile.in	/^mostlyclean-am: mostlyclean-compile mostlyclean-generic$/;"	t
mostlyclean-am	zoltan/driver/Makefile.in	/^mostlyclean-am: mostlyclean-compile mostlyclean-generic$/;"	t
mostlyclean-am	zoltan/fdriver/Makefile.in	/^mostlyclean-am: mostlyclean-compile mostlyclean-generic$/;"	t
mostlyclean-compile	zoltan/Makefile.in	/^mostlyclean-compile:$/;"	t
mostlyclean-compile	zoltan/driver/Makefile.in	/^mostlyclean-compile:$/;"	t
mostlyclean-compile	zoltan/fdriver/Makefile.in	/^mostlyclean-compile:$/;"	t
mostlyclean-generic	zoltan/Makefile.in	/^mostlyclean-generic:$/;"	t
mostlyclean-generic	zoltan/driver/Makefile.in	/^mostlyclean-generic:$/;"	t
mostlyclean-generic	zoltan/fdriver/Makefile.in	/^mostlyclean-generic:$/;"	t
move_all_p	zoltan/par/par_median_randomized.c	/^static int move_all_p(double *vals, int len, double p, int *idxList)$/;"	f	typeref:typename:int	file:
mpi_h	zoltan/fdriver/mpi_h.f	/^      module mpi_h$/;"	m
mpi_h.o	zoltan/fdriver/Makefile.in	/^mpi_h.o: $(srcdir)\/mpi_h.f$/;"	t
mpi_h.obj	zoltan/fdriver/Makefile.in	/^mpi_h.obj: $(srcdir)\/mpi_h.f$/;"	t
mpir_getarg	zoltan/fdriver/farg_nagf95.f	/^      subroutine mpir_getarg(/;"	s
mpir_getarg	zoltan/fdriver/farg_typical.f	/^      subroutine mpir_getarg(/;"	s
mpir_iargc	zoltan/fdriver/farg_nagf95.f	/^      integer function mpir_iargc(/;"	f
mpir_iargc	zoltan/fdriver/farg_typical.f	/^      integer function mpir_iargc(/;"	f
msgBuf	zoltan/par/par_median_randomized.c	/^static double *msgBuf=NULL;$/;"	v	typeref:typename:double *	file:
mtx	zoltan/graph/graph.h	/^  Zoltan_matrix_2d mtx;$/;"	m	struct:ZG_	typeref:typename:Zoltan_matrix_2d
mtx	zoltan/matrix/zoltan_matrix.h	/^  Zoltan_matrix   mtx;          \/* The "matrix" *\/$/;"	m	struct:Zoltan_matrix_2d_	typeref:typename:Zoltan_matrix
murmur3.o	zoltan/Makefile.in	/^murmur3.o: $(srcdir)\/zz\/murmur3.c$/;"	t
murmur3.obj	zoltan/Makefile.in	/^murmur3.obj: $(srcdir)\/zz\/murmur3.c$/;"	t
myProc	zoltan/phg/phg_comm.h	/^  int myProc;     \/* my processor's rank within Communicator. *\/$/;"	m	struct:PHGCommStruct	typeref:typename:int
myProc_x	zoltan/phg/phg_comm.h	/^  int myProc_x;   \/* my processor's row block number in [0,nProc_x-1] *\/$/;"	m	struct:PHGCommStruct	typeref:typename:int
myProc_y	zoltan/phg/phg_comm.h	/^  int myProc_y;   \/* my processor's column block number in [0,nProc_y-1] *\/$/;"	m	struct:PHGCommStruct	typeref:typename:int
my_gid	zoltan/tpls/third_library_tools.h	/^  ZOLTAN_ID_PTR my_gid;  \/* Pointer to the Global id of local vtx *\/$/;"	m	struct:Edge_Info	typeref:typename:ZOLTAN_ID_PTR
my_gno	zoltan/tpls/third_library_tools.h	/^  int my_gno;        \/* Global number of local vtx *\/$/;"	m	struct:Edge_Info	typeref:typename:int
my_part	zoltan/driver/dr_const.h	/^  int      my_part;     \/* Partition to which the element is assigned; $/;"	m	struct:Element_Description	typeref:typename:int
my_part	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: my_part /;"	k	type:ELEM_INFO
my_part	zoltan/hier/hier.h	/^  int my_part[ZOLTAN_PLATFORM_MAX_LEVELS];$/;"	m	struct:_spec	typeref:typename:int[]
my_pin	zoltan/driver/dr_hg_io.c	/^static int my_pin(ZOLTAN_ID_TYPE eid, ZOLTAN_ID_TYPE vid, int proc,$/;"	f	typeref:typename:int	file:
my_proc	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int my_proc;            \/* My identity in MPI Comm                *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
my_rank	zoltan/driver/dr_main.c	/^int my_rank=-1;$/;"	v	typeref:typename:int
my_sum_weight	zoltan/reftree/reftree.h	/^   float *my_sum_weight; \/* sum of weights of nodes assigned to this proc *\/$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:float *
my_vtx	zoltan/driver/dr_hg_io.c	/^static int my_vtx(int proc, $/;"	f	typeref:typename:int	file:
mylog2	zoltan/tpls/parmetis_interface.c	/^static int mylog2(int x)$/;"	f	typeref:typename:int	file:
myread	zoltan/fdriver/fdr_param_file.f90	/^subroutine myread(/;"	s	module:dr_param_file
n	zoltan/zz/zz_heap.h	/^   int    n;$/;"	m	struct:__anon5ef29df60108	typeref:typename:int
nCand	zoltan/phg/phg.h	/^  int nCand;                     \/* Maximum number of candidates per round;$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
nDim	zoltan/phg/phg_hypergraph.h	/^  int nDim;         \/* number of coordinate dimensions for a vertex *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
nEdge	zoltan/phg/phg_hypergraph.h	/^  int nEdge;            \/* number of hyperedges on this processor *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
nHedges	zoltan/phg/phg_hypergraph.h	/^  int nHedges;              \/* # of hyperedges *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
nHedges	zoltan/phg/phg_lookup.h	/^  int           nHedges;    \/* number of (partial) hyperedges *\/$/;"	m	struct:_myPin	typeref:typename:int
nObj	zoltan/phg/phg_hypergraph.h	/^  int nObj;                 \/* Number of on-processor objects. *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
nPart	zoltan/matrix/matrix_distribute.c	/^  int nPart;$/;"	m	struct:ZOLTAN_DIST_PART_	typeref:typename:int	file:
nPins	zoltan/matrix/zoltan_matrix.h	/^  int           nPins;         \/* Local number of Pins *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
nPins	zoltan/phg/phg_hypergraph.h	/^  int nPins;                \/* total number of pins in listed edges *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
nPins	zoltan/phg/phg_hypergraph.h	/^  int nPins;            \/* number of pins (nonzeros) on this processor *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
nProc	zoltan/matrix/matrix_distribute.c	/^  int nProc;$/;"	m	struct:ZOLTAN_DIST_PART_	typeref:typename:int	file:
nProc	zoltan/phg/phg_comm.h	/^  int nProc;      \/* number of proc in Communicator.$/;"	m	struct:PHGCommStruct	typeref:typename:int
nProc_x	zoltan/phg/phg_comm.h	/^  int nProc_x;    \/* number of processors in x-direction of 2D data distrib.  *\/$/;"	m	struct:PHGCommStruct	typeref:typename:int
nProc_x_req	zoltan/phg/phg.h	/^  int nProc_x_req;  \/* user's request for nProc_x (PHG_NPROC_X)$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
nProc_y	zoltan/phg/phg_comm.h	/^  int nProc_y;    \/* number of processors in y-direction of 2D data distrib.  *\/$/;"	m	struct:PHGCommStruct	typeref:typename:int
nProc_y_req	zoltan/phg/phg.h	/^  int nProc_y_req;  \/* user's request for nProc_y (PHG_NPROC_Y)$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
nRecv_GNOs	zoltan/phg/phg_hypergraph.h	/^  int nRecv_GNOs;              \/* Number of GNOs in Recv_GNOs. *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
nRepartEdge	zoltan/phg/phg_hypergraph.h	/^  int nRepartEdge;      \/* number of repartition edges added $/;"	m	struct:__anon371c30e80108	typeref:typename:int
nRepartPin	zoltan/phg/phg_hypergraph.h	/^  int nRepartPin;       \/* number of repartition pins added $/;"	m	struct:__anon371c30e80108	typeref:typename:int
nRepartVtx	zoltan/phg/phg_hypergraph.h	/^  int nRepartVtx;       \/* number of repartition vertices added $/;"	m	struct:__anon371c30e80108	typeref:typename:int
nVtx	zoltan/phg/phg_hypergraph.h	/^  int nVtx;             \/* number of vertices on this processor *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
nWeights	zoltan/rcb/shared.h	/^  int nWeights;                  \/* number of weights per dot in Weight array *\/$/;"	m	struct:Dot_Struct	typeref:typename:int
nY	zoltan/matrix/zoltan_matrix.h	/^  int           nY;            \/* Local number in Y dimension *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
nY_ori	zoltan/matrix/zoltan_matrix.h	/^  int           nY_ori;        \/* nY in the initial (user ?) distribution *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
nadj	zoltan/driver/dr_const.h	/^  int      nadj;	\/* number of entries in adj *\/$/;"	m	struct:Element_Description	typeref:typename:int
nadj	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: nadj /;"	k	type:ELEM_INFO
name	zoltan/params/params_const.h	/^  char *name;			\/* Parameter variable name (all CAPS) *\/$/;"	m	struct:Param_Vars	typeref:typename:char *
name	zoltan/params/params_const.h	/^  char *name;$/;"	m	struct:Param_List	typeref:typename:char *
namelen	zoltan/fdriver/fdr_main.f90	/^  integer(Zoltan_INT) :: namelen$/;"	v	program:fdriver
nb_elements	zoltan/coloring/bucket.h	/^    int          nb_elements; $/;"	m	struct:arg	typeref:typename:int
nbor_proc	zoltan/tpls/third_library_tools.h	/^  int nbor_proc;     \/* Proc id for the neighboring proc *\/$/;"	m	struct:Edge_Info	typeref:typename:int
nbr_blocks	zoltan/order/order_const.h	/^  int nbr_blocks;               \/* Out: number of ordering blocks *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int
nbr_blocks	zoltan/tpls/third_library_const.h	/^  indextype nbr_blocks;               \/* Out: number of ordering blocks *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype
nbr_leaves	zoltan/order/order_const.h	/^  int nbr_leaves;               \/* Number of leaves *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int
nbr_leaves	zoltan/tpls/third_library_const.h	/^  indextype nbr_leaves;               \/* Number of leaves *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype
nbr_objects	zoltan/order/order_const.h	/^  int nbr_objects;              \/* # of objects (local) *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int
nbr_objects	zoltan/tpls/third_library_const.h	/^  indextype nbr_objects;              \/* # of objects (local) *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype
ndimension	zoltan/hsfc/hsfc.h	/^   int        ndimension;        \/* number of dimensions in problem (2 or 3) *\/$/;"	m	struct:HSFC_Data	typeref:typename:int
ndims	zoltan/hier/hier.h	/^  int ndims;                         \/* number of dimensions for geom data *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
ndims	zoltan/tpls/third_library.h	/^  int ndims;                            \/* Number of dimensions *\/$/;"	m	struct:ZOLTAN_Third_Geom_	typeref:typename:int
ndims	zoltan/zz/zz_const.h	/^  int ndims;           \/* Number of dimensions of the mesh *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
necmap	zoltan/driver/dr_const.h	/^  int     necmap;               \/* number of elemental communication maps.   *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
necmap	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: necmap /;"	k	type:MESH_INFO
needfree	zoltan/order/order_const.h	/^  int needfree;$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int
needfree	zoltan/tpls/third_library_const.h	/^  indextype needfree;$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype
neigh	zoltan/reftree/reftree_coarse_path.c	/^static int ***neigh;$/;"	v	typeref:typename:int ***	file:
neigh_dim	zoltan/reftree/reftree_coarse_path.c	/^static int **neigh_dim;$/;"	v	typeref:typename:int **	file:
neigh_id	zoltan/driver/dr_maps.c	/^  ZOLTAN_ID_TYPE *neigh_id;$/;"	m	struct:map_list_head	typeref:typename:ZOLTAN_ID_TYPE *	file:
neigh_id	zoltan/driver/dr_mapsCPP.cpp	/^  ZOLTAN_ID_TYPE *neigh_id;$/;"	m	struct:map_list_head	typeref:typename:ZOLTAN_ID_TYPE *	file:
neigh_id	zoltan/fdriver/fdr_chaco_io.f90	/^  integer(Zoltan_INT), pointer :: neigh_id(/;"	k	type:map_list_head
newVCycle	zoltan/phg/phg_Vcycle.c	/^static VCycle *newVCycle(ZZ *zz, HGraph *hg, Partition part, VCycle *finer,$/;"	f	typeref:typename:VCycle *	file:
new_val	zoltan/params/params_const.h	/^  char *new_val;$/;"	m	struct:Param_List	typeref:typename:char *
next	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_NodeIdx       next;       \/* index in nodelist of next DD_Node in $/;"	m	struct:DD_Node	typeref:typename:DD_NodeIdx
next	zoltan/Utilities/Memory/mem.c	/^  struct malloc_debug_data *next;	\/* pointer to next element *\/$/;"	m	struct:malloc_debug_data	typeref:struct:malloc_debug_data *	file:
next	zoltan/coloring/bucket.h	/^  struct S* next;$/;"	m	struct:S	typeref:struct:S *
next	zoltan/coloring/g2l_hash.h	/^    struct G2L_Hash_Node * next;$/;"	m	struct:G2L_Hash_Node	typeref:struct:G2L_Hash_Node *
next	zoltan/driver/dr_migrate.c	/^  int next;$/;"	m	struct:New_Elem_Hash_Node	typeref:typename:int	file:
next	zoltan/driver/dr_param_file.c	/^  struct zoltanParams_list_entry *next;$/;"	m	struct:zoltanParams_list_entry	typeref:struct:zoltanParams_list_entry *	file:
next	zoltan/driver/dr_param_fileCPP.cpp	/^  struct zoltanParams_list_entry *next;$/;"	m	struct:zoltanParams_list_entry	typeref:struct:zoltanParams_list_entry *	file:
next	zoltan/fdriver/fdr_param_file.f90	/^   type (ztnPrm_list_entry), pointer :: next$/;"	k	type:ztnPrm_list_entry
next	zoltan/lb/lb_balance.c	/^  struct Hash_Node * next;$/;"	m	struct:Hash_Node	typeref:struct:Hash_Node *	file:
next	zoltan/params/params_const.h	/^  struct Param_List *next;$/;"	m	struct:Param_List	typeref:struct:Param_List *
next	zoltan/phg/phg_build_calls.c	/^  struct _hash_node *next;$/;"	m	struct:Convert_To_CSR::_hash_node	typeref:struct:_hash_node *	file:
next	zoltan/reftree/reftree.h	/^  struct Zoltan_Reftree_hash_node *next;$/;"	m	struct:Zoltan_Reftree_hash_node	typeref:struct:Zoltan_Reftree_hash_node *
next	zoltan/reftree/reftree.h	/^  struct Zoltan_Reftree_inthash_node *next;$/;"	m	struct:Zoltan_Reftree_inthash_node	typeref:struct:Zoltan_Reftree_inthash_node *
next	zoltan/reftree/reftree_coarse_path.c	/^static int *prev, *next, *in, *out, *onpath;$/;"	v	typeref:typename:int **	file:
next	zoltan/tpls/third_library_tools.h	/^  struct Hash_Node * next;$/;"	m	struct:Hash_Node	typeref:struct:Hash_Node *
next	zoltan/zz/zz_gen_files.c	/^  struct _gidht *next;$/;"	m	struct:augment_search_structure::_gidht	typeref:struct:_gidht *	file:
next	zoltan/zz/zz_gen_files.c	/^  struct _gidht *next;$/;"	m	struct:fan_in_edge_global_ids::_gidht	typeref:struct:_gidht *	file:
next	zoltan/zz/zz_gen_files.c	/^  struct _gidht *next;$/;"	m	struct:merge_gids::_gidht	typeref:struct:_gidht *	file:
next	zoltan/zz/zz_util_const.h	/^  struct Zoltan_Map_Entry *next;$/;"	m	struct:Zoltan_Map_Entry	typeref:struct:Zoltan_Map_Entry *
next_line	zoltan/driver/dr_hg_io.c	/^static char *next_line(char *buf, size_t max)$/;"	f	typeref:typename:char *	file:
next_line_of_comment	zoltan/driver/dr_hg_io.c	/^static char *next_line_of_comment(char *buf, size_t max, char *str)$/;"	f	typeref:typename:char *	file:
next_line_of_data	zoltan/driver/dr_hg_io.c	/^static char *next_line_of_data(char *buf, size_t max, char *str)$/;"	f	typeref:typename:char *	file:
next_query_2d	zoltan/hsfc/hsfc_box_assign.c	/^static double next_query_2d (ZZ *zz, double *lquerybox, double *hquerybox,$/;"	f	typeref:typename:double	file:
next_query_3d	zoltan/hsfc/hsfc_box_assign.c	/^static double next_query_3d (ZZ *zz, double *lquerybox, double *hquerybox,$/;"	f	typeref:typename:double	file:
nextfreenode	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_NodeIdx nextfreenode;\/* Index of first free node in nodelist; $/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_NodeIdx
nextstr	zoltan/driver/dr_hg_readfile.c	/^static int nextstr (ZOLTAN_FILE* f, char *string)$/;"	f	typeref:typename:int	file:
nfree	zoltan/Utilities/Memory/mem.c	/^static int nfree = 0;           \/* number of calls to free *\/$/;"	v	typeref:typename:int	file:
nhedges	zoltan/driver/dr_const.h	/^  int     nhedges;              \/* # local edges (if cols: # pin vertices) *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
nhedges	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: nhedges /;"	k	type:MESH_INFO
nindices_from	zoltan/Utilities/Communication/comm.h	/^    int       nindices_from;$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
nindices_to	zoltan/Utilities/Communication/comm.h	/^    int       nindices_to;$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
nlvtx	zoltan/coloring/g2l_hash.h	/^    int   nlvtx;         \/* it is #localy owened vertices: simply equal to "baseend-base+1" *\/$/;"	m	struct:G2L_Hash	typeref:typename:int
nmalloc	zoltan/Utilities/Memory/mem.c	/^static int nmalloc = 0;         \/* number of calls to malloc *\/$/;"	v	typeref:typename:int	file:
nnborparts	zoltan/include/zoltan_eval.h	/^  float nnborparts[EVAL_SIZE];  \/* The number of neighboring partitions *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
nnodes	zoltan/zz/zz_const.h	/^  int nnodes;           \/* the number of subnodes *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
nobj	zoltan/include/zoltan_eval.h	/^  float nobj[EVAL_SIZE];        \/* number of partition vertices *\/$/;"	m	struct:_eval_balance_struct	typeref:typename:float[]
nobj	zoltan/include/zoltan_eval.h	/^  float nobj[EVAL_SIZE];        \/* number of partition vertices *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
nobj	zoltan/include/zoltan_eval.h	/^  float nobj[EVAL_SIZE];        \/* number of partition vertices *\/$/;"	m	struct:_eval_hg_struct	typeref:typename:float[]
nodecnt	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_NodeIdx nodecnt;     \/* Number of nodes used in nodelist      *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_NodeIdx
nodedata	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  char *nodedata;         \/* Memory for storing all data in the directory  *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:char *
nodedata_size	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  size_t nodedata_size;   \/* Malloc for GID & LID & user storage    *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:size_t
nodelist	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_Node *nodelist;      \/* Memory for storing all nodes in the directory *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_Node *
nodelistlen	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_NodeIdx nodelistlen; \/* Length of the nodelist. *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_NodeIdx
nodes	zoltan/coloring/g2l_hash.h	/^    G2LHashNode *nodes;$/;"	m	struct:G2L_Hash	typeref:typename:G2LHashNode *
nodist_execinclude_HEADERS	zoltan/Makefile.am	/^nodist_execinclude_HEADERS = include\/Zoltan_config.h$/;"	m
nodist_execinclude_HEADERS	zoltan/Makefile.in	/^nodist_execinclude_HEADERS = include\/Zoltan_config.h$/;"	m
noinst_PROGRAMS	zoltan/driver/Makefile.am	/^noinst_PROGRAMS = zdrive $(ZOLTAN_CPP_TEST_DRIVER)$/;"	m
noinst_PROGRAMS	zoltan/driver/Makefile.in	/^noinst_PROGRAMS = zdrive$(EXEEXT) $(am__EXEEXT_1)$/;"	m
noinst_PROGRAMS	zoltan/fdriver/Makefile.am	/^noinst_PROGRAMS = zfdrive$/;"	m
noinst_PROGRAMS	zoltan/fdriver/Makefile.in	/^noinst_PROGRAMS = zfdrive$(EXEEXT)$/;"	m
nproc	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^  int nproc;$/;"	m	struct:dd_nh2_struct	typeref:typename:int	file:
nproc	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int nproc;              \/* Number of processors in MPI Comm       *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
nrecvs	zoltan/Utilities/Communication/comm.h	/^    int       nrecvs;		\/* number of msgs I'll recv (w\/o self_msg) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
nsends	zoltan/Utilities/Communication/comm.h	/^    int       nsends;		\/* number of msgs I'll send (w\/o self_msg) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
ntypes	zoltan/zz/zz_const.h	/^  int ntypes;           \/* the number of different types of subnodes *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
numGIDs	zoltan/phg/phg_lookup.h	/^  int numGIDs;$/;"	m	struct:_GID_lookup	typeref:typename:int
numHEdges	zoltan/phg/phg_hypergraph.h	/^  int *numHEdges;           \/* number of hyperedges containing object *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int *
numLevels	zoltan/hier/hier.h	/^  int numLevels;$/;"	m	struct:_spec	typeref:typename:int
numParts	zoltan/phg/phg_tree.h	/^  int numParts;$/;"	m	struct:Zoltan_PHG_LB_Data_	typeref:typename:int
numPins	zoltan/phg/phg_lookup.h	/^  int           numPins;    \/* sum of esizes array *\/$/;"	m	struct:_myPin	typeref:typename:int
num_boundary	zoltan/include/zoltan_eval.h	/^  float num_boundary[EVAL_SIZE];\/* the number of objects with a remote neighbor *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
num_child	zoltan/reftree/reftree.h	/^   int num_child;        \/* number of children *\/$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:int
num_coarse_iter	zoltan/phg/phg.h	/^  int num_coarse_iter;  \/* Number of coarse partitions to try on each proc. *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
num_dims	zoltan/driver/dr_const.h	/^  int     num_dims;		\/* number of dimensions for the mesh         *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
num_dims	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_dims /;"	k	type:MESH_INFO
num_dsk_ctrlrs	zoltan/driver/dr_input_const.h	/^  int     num_dsk_ctrlrs;            \/* The number of disk controllers.     *\/$/;"	m	struct:Parallel_IO	typeref:typename:int
num_dsk_ctrlrs	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: num_dsk_ctrlrs /;"	k	type:PARIO_INFO
num_edges	zoltan/tpls/third_library.h	/^  int num_edges;                        \/* Local number of edges *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
num_el_blks	zoltan/driver/dr_const.h	/^  int     num_el_blks;		\/* number of element blocks in the mesh      *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
num_el_blks	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_el_blks /;"	k	type:MESH_INFO
num_elem	zoltan/reftree/reftree_coarse_path.c	/^static int *num_elem;$/;"	v	typeref:typename:int *	file:
num_elems	zoltan/driver/dr_const.h	/^  int     num_elems;		\/* number of elements on this processor.     *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
num_elems	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_elems /;"	k	type:MESH_INFO
num_exp	zoltan/tpls/third_library.h	/^  int  num_exp;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int
num_gid_entries	zoltan/coloring/g2l_hash.h	/^    int   num_gid_entries;   \/* multiple of ZOLTAN_ID_TYPEs in a key *\/$/;"	m	struct:G2L_Hash	typeref:typename:int
num_imp	zoltan/tpls/third_library.h	/^  int  num_imp;$/;"	m	struct:ZOLTAN_Output_Part_	typeref:typename:int
num_levels	zoltan/driver/dr_param_file.c	/^static int num_levels = 0;$/;"	v	typeref:typename:int	file:
num_levels	zoltan/driver/dr_param_fileCPP.cpp	/^static int num_levels = 0;$/;"	v	typeref:typename:int	file:
num_levels	zoltan/fdriver/fdr_param_file.f90	/^integer :: num_levels /;"	v	module:dr_param_file
num_levels	zoltan/hier/hier.h	/^  int num_levels;                    \/* number of levels I do *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
num_neigh	zoltan/reftree/reftree_coarse_path.c	/^static int **num_neigh;$/;"	v	typeref:typename:int **	file:
num_node_sets	zoltan/driver/dr_const.h	/^  int     num_node_sets;	\/* number of node sets in the mesh           *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
num_node_sets	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_node_sets /;"	k	type:MESH_INFO
num_nodes	zoltan/driver/dr_const.h	/^  int     num_nodes;		\/* number of nodes on this processor.        *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
num_nodes	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_nodes /;"	k	type:MESH_INFO
num_obj	zoltan/hier/hier.h	/^  int num_obj;                       \/* number of local objects at start *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
num_obj	zoltan/reftree/reftree_coarse_path.c	/^static int num_obj, path_length;$/;"	v	typeref:typename:int	file:
num_obj	zoltan/tpls/third_library.h	/^  int num_obj;                          \/* Local number of vertices *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
num_obj_orig	zoltan/tpls/third_library.h	/^  int num_obj_orig;                     \/* Local number of vertices in original graph *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
num_params	zoltan/driver/dr_const.h	/^  int num_params;                    \/* number of parameters read.           *\/$/;"	m	struct:Problem_Description	typeref:typename:int
num_params	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_params /;"	k	type:PROB_INFO
num_part	zoltan/tpls/third_library.h	/^  int num_part;$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:int
num_parts	zoltan/hier/hier.h	/^  int num_parts;                     \/* number of parts to compute *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
num_procs	zoltan/par/par_median_randomized.c	/^  int num_procs;$/;"	m	struct:_commStruct	typeref:typename:int	file:
num_separators	zoltan/order/order_const.h	/^  int  num_separators;          \/* Optional: # of separators. *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int
num_separators	zoltan/tpls/third_library_const.h	/^  indextype  num_separators;          \/* Optional: # of separators. *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype
num_siblings	zoltan/hier/hier.h	/^  int num_siblings[ZOLTAN_PLATFORM_MAX_LEVELS];$/;"	m	struct:_spec	typeref:typename:int[]
num_side_sets	zoltan/driver/dr_const.h	/^  int     num_side_sets;	\/* number of side sets in the mesh           *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
num_side_sets	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: num_side_sets /;"	k	type:MESH_INFO
num_vertex	zoltan/reftree/reftree.h	/^   int num_vertex;       \/* the number of vertices in the corresponding$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:int
num_zoltan_id_types	zoltan/zz/zz_util_const.h	/^  int num_zoltan_id_types;  \/* number of ZOLTAN_ID_TYPES required to hold key *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
numerote	zoltan/phg/phg_tree.c	/^numerote(Zoltan_PHG_Tree *tree, int node, int part, int *partnumber)$/;"	f	typeref:typename:int	file:
nvals	zoltan/Utilities/Communication/comm.h	/^    int       nvals;		\/* number of values I own to start *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
nvals_recv	zoltan/Utilities/Communication/comm.h	/^    int       nvals_recv;	\/* number of values I own after remapping *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
nwgts	zoltan/par/par_bisect.c	/^  int       nwgts;              \/* number of weights (per dot) *\/$/;"	m	struct:bisector	typeref:typename:int	file:
objGID	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_ID_PTR objGID;     \/* user's object global ID *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_ID_PTR
objGNO	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *objGNO;   \/* object global number *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE *
objLID	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_ID_PTR objLID;     \/* user's object local ID *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_ID_PTR
objWeight	zoltan/phg/phg_hypergraph.h	/^  float *objWeight;         \/* weight *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:float *
objWeightDim	zoltan/phg/phg_hypergraph.h	/^  int objWeightDim;         \/* Number of weights per object (incl ADD_OBJ_WEIGHT) *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
obj_imbalance	zoltan/include/zoltan_eval.h	/^  float obj_imbalance;          \/* vertex number imbalance *\/$/;"	m	struct:_eval_balance_struct	typeref:typename:float
obj_imbalance	zoltan/include/zoltan_eval.h	/^  float obj_imbalance;          \/* vertex number imbalance *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float
obj_imbalance	zoltan/include/zoltan_eval.h	/^  float obj_imbalance;          \/* vertex number imbalance *\/$/;"	m	struct:_eval_hg_struct	typeref:typename:float
obj_wgt	zoltan/include/zoltan_eval.h	/^  float obj_wgt[EVAL_SIZE];     \/* partition vertex weights *\/$/;"	m	struct:_eval_balance_struct	typeref:typename:float[]
obj_wgt	zoltan/include/zoltan_eval.h	/^  float obj_wgt[EVAL_SIZE];     \/* partition vertex weights *\/$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
obj_wgt	zoltan/include/zoltan_eval.h	/^  float obj_wgt[EVAL_SIZE];     \/* partition vertex weights *\/$/;"	m	struct:_eval_hg_struct	typeref:typename:float[]
obj_wgt_dim	zoltan/hier/hier.h	/^  int obj_wgt_dim, edge_wgt_dim;     \/* object and edge weight dimensions *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
obj_wgt_dim	zoltan/tpls/third_library.h	/^  int obj_wgt_dim;                      \/* Number of weights by vertex *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
object_metrics	zoltan/lb/lb_eval.c	/^object_metrics(ZZ *zz, int num_obj, int *parts, float *part_sizes, int req_nparts, $/;"	f	typeref:typename:int	file:
objects_by_part	zoltan/lb/lb_eval.c	/^objects_by_part(ZZ *zz, int num_obj, int *part, int *nparts, int *nonempty)$/;"	f	typeref:typename:int *	file:
off	zoltan/Utilities/Memory/mem.c	/^    long off;    \/* offset from beginning of array       *\/$/;"	m	struct:Zoltan_Array_Alloc::dimension	typeref:typename:long	file:
offset	zoltan/ch/ch_input_read.c	/^static int offset = 0;		\/* offset into line for next data *\/$/;"	v	typeref:typename:int	file:
oldincludedir	zoltan/Makefile.in	/^oldincludedir = @oldincludedir@$/;"	m
oldincludedir	zoltan/driver/Makefile.in	/^oldincludedir = @oldincludedir@$/;"	m
oldincludedir	zoltan/fdriver/Makefile.in	/^oldincludedir = @oldincludedir@$/;"	m
onpath	zoltan/reftree/reftree_coarse_path.c	/^static int *prev, *next, *in, *out, *onpath;$/;"	v	typeref:typename:int *****	file:
operator =	zoltan/include/zoltan_comm_cpp.h	/^  Zoltan_Comm & operator= (const Zoltan_Comm &plan) \/\/ Copy operator$/;"	f	class:Zoltan_Comm	typeref:typename:Zoltan_Comm &
operator =	zoltan/include/zoltan_cpp.h	/^  Zoltan & operator= (const Zoltan &zz)$/;"	f	class:Zoltan	typeref:typename:Zoltan &
operator =	zoltan/include/zoltan_dd_cpp.h	/^  Zoltan_DD & operator= (const Zoltan_DD &dd) \/\/ Copy operator$/;"	f	class:Zoltan_DD	typeref:typename:Zoltan_DD &
operator =	zoltan/include/zoltan_timer_cpp.h	/^  Zoltan_Timer_Object & operator= (const Zoltan_Timer_Object &zt)$/;"	f	class:Zoltan_Timer_Object	typeref:typename:Zoltan_Timer_Object &
opt	zoltan/matlab/zoltan.m	/^  opt = [];$/;"	v
opts	zoltan/matrix/zoltan_matrix.h	/^  Zoltan_matrix_options opts;  \/* How to build the matrix *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:Zoltan_matrix_options
order	zoltan/Utilities/Memory/mem.c	/^  int       order;			\/* which malloc call is it? *\/$/;"	m	struct:malloc_debug_data	typeref:typename:int	file:
order.o	zoltan/Makefile.in	/^order.o: $(srcdir)\/order\/order.c$/;"	t
order.obj	zoltan/Makefile.in	/^order.obj: $(srcdir)\/order\/order.c$/;"	t
order_decreasing	zoltan/zz/zz_coord.c	/^static void order_decreasing(double *d, int *order)$/;"	f	typeref:typename:void	file:
order_hex3d_oct	zoltan/reftree/reftree_build.c	/^static int order_hex3d_oct(ZZ *zz, int *vert1, int *order,$/;"	f	typeref:typename:int	file:
order_info	zoltan/tpls/third_library.h	/^  ZTPL_OS *order_info;	\/* ordering info *\/$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:ZTPL_OS *
order_opt	zoltan/tpls/third_library.h	/^  ZOOS *order_opt;	\/* ordering options *\/$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:ZOOS *
order_other_ref	zoltan/reftree/reftree_build.c	/^static int order_other_ref(ZZ *zz, ZOLTAN_REFTREE *parent, int num_child, $/;"	f	typeref:typename:int	file:
order_other_ref_recur	zoltan/reftree/reftree_build.c	/^static void order_other_ref_recur(int new_entry, int level, int *order, $/;"	f	typeref:typename:void	file:
order_quad_quad	zoltan/reftree/reftree_build.c	/^static int order_quad_quad(ZZ *zz, int *vert1, int *order,$/;"	f	typeref:typename:int	file:
order_struct.o	zoltan/Makefile.in	/^order_struct.o: $(srcdir)\/order\/order_struct.c$/;"	t
order_struct.obj	zoltan/Makefile.in	/^order_struct.obj: $(srcdir)\/order\/order_struct.c$/;"	t
order_tools.o	zoltan/Makefile.in	/^order_tools.o: $(srcdir)\/order\/order_tools.c$/;"	t
order_tools.obj	zoltan/Makefile.in	/^order_tools.obj: $(srcdir)\/order\/order_tools.c$/;"	t
order_tri_bisect	zoltan/reftree/reftree_build.c	/^static int order_tri_bisect(ZZ *zz, int *vert1, int *order, $/;"	f	typeref:typename:int	file:
order_type	zoltan/order/order_const.h	/^  char order_type[MAX_PARAM_STRING_LEN]; \/* Ordering method used *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:char[]
order_type	zoltan/tpls/third_library_const.h	/^  char order_type[MAX_PARAM_STRING_LEN]; \/* Ordering method used *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:char[]
origzz	zoltan/hier/hier.h	/^  ZZ *origzz;                        \/* Zoltan struct passed into top level *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:ZZ *
out	zoltan/reftree/reftree_coarse_path.c	/^static int *prev, *next, *in, *out, *onpath;$/;"	v	typeref:typename:int ****	file:
out_vertex	zoltan/reftree/reftree.h	/^   ZOLTAN_ID_PTR out_vertex; \/* ending vertex for determining the path$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:ZOLTAN_ID_PTR
outputLevel	zoltan/ha/ha_ovis.h	/^  int outputLevel;$/;"	m	struct:OVIS_parameters	typeref:typename:int
output_gnu	zoltan/driver/dr_gnuplot.c	/^int output_gnu(const char *cmd_file,$/;"	f	typeref:typename:int
output_level	zoltan/hier/hier.h	/^  int output_level;                  \/* amount of debugging info *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
output_level	zoltan/phg/phg.h	/^  int output_level;     \/* Flag indicating amount of output from HG algorithms.$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
output_results	zoltan/driver/dr_output.c	/^int output_results(const char *cmd_file,$/;"	f	typeref:typename:int
output_results	zoltan/fdriver/fdr_main.f90	/^logical function output_results(/;"	f
owner	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   int        owner;       \/* range [0, nproc-1] or -1             *\/$/;"	m	struct:__anonc14baf7a0308	typeref:typename:int
owner	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   int owner;              \/* range [0, nproc-1] or -1                     *\/$/;"	m	struct:__anonc14baf7a0108	typeref:typename:int
owner	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int              owner;      \/* processor hosting global ID object    *\/$/;"	m	struct:DD_Node	typeref:typename:int
p	zoltan/matlab/zoltan.m	/^  p = 2;$/;"	v
pack_message_for_proc	zoltan/lb/low_mem_lb_migrate.c	/^static int pack_message_for_proc(ZZ *zz, int dest_proc, int num,$/;"	f	typeref:typename:int	file:
par_average.o	zoltan/Makefile.in	/^par_average.o: $(srcdir)\/par\/par_average.c$/;"	t
par_average.obj	zoltan/Makefile.in	/^par_average.obj: $(srcdir)\/par\/par_average.c$/;"	t
par_bisect.o	zoltan/Makefile.in	/^par_bisect.o: $(srcdir)\/par\/par_bisect.c$/;"	t
par_bisect.obj	zoltan/Makefile.in	/^par_bisect.obj: $(srcdir)\/par\/par_bisect.c$/;"	t
par_median.o	zoltan/Makefile.in	/^par_median.o: $(srcdir)\/par\/par_median.c$/;"	t
par_median.obj	zoltan/Makefile.in	/^par_median.obj: $(srcdir)\/par\/par_median.c$/;"	t
par_median_accumulate_counts	zoltan/par/par_median_randomized.c	/^void par_median_accumulate_counts(int nprocs,      \/* number processes in application *\/$/;"	f	typeref:typename:void
par_median_print_counts	zoltan/par/par_median_randomized.c	/^void par_median_print_counts(MPI_Comm comm, int print_proc)$/;"	f	typeref:typename:void
par_median_randomized.o	zoltan/Makefile.in	/^par_median_randomized.o: $(srcdir)\/par\/par_median_randomized.c$/;"	t
par_median_randomized.obj	zoltan/Makefile.in	/^par_median_randomized.obj: $(srcdir)\/par\/par_median_randomized.c$/;"	t
par_stats.o	zoltan/Makefile.in	/^par_stats.o: $(srcdir)\/par\/par_stats.c$/;"	t
par_stats.obj	zoltan/Makefile.in	/^par_stats.obj: $(srcdir)\/par\/par_stats.c$/;"	t
par_sync.o	zoltan/Makefile.in	/^par_sync.o: $(srcdir)\/par\/par_sync.c$/;"	t
par_sync.obj	zoltan/Makefile.in	/^par_sync.obj: $(srcdir)\/par\/par_sync.c$/;"	t
par_tflops_special.o	zoltan/Makefile.in	/^par_tflops_special.o: $(srcdir)\/par\/par_tflops_special.c$/;"	t
par_tflops_special.obj	zoltan/Makefile.in	/^par_tflops_special.obj: $(srcdir)\/par\/par_tflops_special.c$/;"	t
parallelIterations	zoltan/par/par_median_randomized.c	/^static int parallelIterations=0;$/;"	v	typeref:typename:int	file:
param	zoltan/driver/dr_param_file.c	/^  char param[MAX_PARAM_STRING_LEN];$/;"	m	struct:zoltanParams_list_entry	typeref:typename:char[]	file:
param	zoltan/driver/dr_param_fileCPP.cpp	/^  char *param;$/;"	m	struct:zoltanParams_list_entry	typeref:typename:char *	file:
param	zoltan/fdriver/fdr_param_file.f90	/^   character(len=MAX_CHAR_LEN) :: param$/;"	k	type:ztnPrm_list_entry
params	zoltan/driver/dr_const.h	/^  Parameter_Pair *params;            \/* parameter array to be passed to$/;"	m	struct:Problem_Description	typeref:typename:Parameter_Pair *
params	zoltan/fdriver/fdr_const.f90	/^  type(Parameter_Pair), pointer :: params(/;"	k	type:PROB_INFO
parent	zoltan/rcb/rcb.h	/^  int       parent;             \/* parent of this node in cut tree *\/$/;"	m	struct:rcb_tree	typeref:typename:int
parent	zoltan/rcb/rib.h	/^    int       parent;           \/* parent of this node in cut tree *\/$/;"	m	struct:rib_tree	typeref:typename:int
parkway	zoltan/phg/phg_tree.h	/^  int parkway;  \/* ParKway time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
parkway_serpart	zoltan/phg/phg.h	/^  char parkway_serpart[MAX_PARAM_STRING_LEN];  \/* SerialPartitioner for parKway. *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
parmetis_interface.o	zoltan/Makefile.in	/^parmetis_interface.o: $(srcdir)\/tpls\/parmetis_interface.c$/;"	t
parmetis_interface.obj	zoltan/Makefile.in	/^parmetis_interface.obj: $(srcdir)\/tpls\/parmetis_interface.c$/;"	t
part	zoltan/hsfc/hsfc.h	/^   int   part;          \/* partition to which dot is assigned     *\/$/;"	m	struct:Dots	typeref:typename:int
part	zoltan/matlab/zoltPartSpy.m	/^  part = zeros(size(P(1,:)));$/;"	v
part	zoltan/matlab/zoltan.m	/^part = zeros(size(P(1,:)));$/;"	v
part	zoltan/tpls/third_library.h	/^  indextype *part;                      \/* Current partition *\/$/;"	m	struct:ZOLTAN_Third_Part_	typeref:typename:indextype *
partSpyZolt1DC	zoltan/matlab/zoltPartSpy.m	/^function partSpyZolt1DC(matFilename,part)$/;"	f
partSpyZolt1DR	zoltan/matlab/zoltPartSpy.m	/^function partSpyZolt1DR(matFilename,part)$/;"	f
partSpyZolt1_5DC	zoltan/matlab/zoltPartSpy.m	/^function partSpyZolt1_5DC(matFilename,part)$/;"	f
partSpyZolt1_5DR	zoltan/matlab/zoltPartSpy.m	/^function partSpyZolt1_5DR(matFilename,part)$/;"	f
partSpyZoltan	zoltan/matlab/zoltPartSpy.m	/^function partSpyZoltan(matFilename,partFilename,partType)$/;"	f
partTree	zoltan/phg/phg_tree.h	/^  int * partTree; \/* Not used yet *\/$/;"	m	struct:Zoltan_PHG_LB_Data_	typeref:typename:int *
part_orig	zoltan/tpls/third_library.h	/^  indextype *part_orig;$/;"	m	struct:ZOLTAN_Third_Part_	typeref:typename:indextype *
part_sizes	zoltan/phg/phg.h	/^  float *part_sizes;             \/* Pointer to part_sizes array passed to$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float *
part_sizes	zoltan/tpls/third_library.h	/^  realtype  *part_sizes;$/;"	m	struct:ZOLTAN_Third_Part_	typeref:typename:realtype *
part_to_compute	zoltan/hier/hier.h	/^  int part_to_compute;               \/* part to compute at each level *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
part_y	zoltan/matrix/zoltan_matrix.h	/^    int part_y;$/;"	m	struct:Zoltan_Arc_	typeref:typename:int
partition	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   int        partition;$/;"	m	struct:__anonc14baf7a0208	typeref:typename:int
partition	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   int partition;$/;"	m	struct:__anonc14baf7a0108	typeref:typename:int
partition	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int              partition;  \/* Optional data                         *\/$/;"	m	struct:DD_Node	typeref:typename:int
partition	zoltan/driver/dr_param_file.c	/^  int partition;$/;"	m	struct:zoltanParams_hier_struct	typeref:typename:int	file:
partition	zoltan/driver/dr_param_fileCPP.cpp	/^  int partition;$/;"	m	struct:zoltanParams_hier_struct	typeref:typename:int	file:
partition	zoltan/fdriver/fdr_param_file.f90	/^   integer :: partition$/;"	k	type:ztnPrm_hier_struct
partition	zoltan/reftree/reftree.h	/^   int partition;        \/* partition to which this node is assigned;$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:int
partition_flag	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   char partition_flag;    \/* indicates if optional partition data present *\/$/;"	m	struct:__anonc14baf7a0108	typeref:typename:char
partition_stats	zoltan/hsfc/hsfc.c	/^static int partition_stats(ZZ *zz, int ndots,$/;"	f	typeref:typename:int	file:
partner	zoltan/phg/phg_match.c	/^    ZOLTAN_GNO_TYPE partner;        \/* gno of best match found so far *\/$/;"	m	struct:triplet	typeref:typename:ZOLTAN_GNO_TYPE	file:
path_length	zoltan/reftree/reftree_coarse_path.c	/^static int num_obj, path_length;$/;"	v	typeref:typename:int	file:
patoh	zoltan/phg/phg_tree.h	/^  int patoh;  \/* PaToH time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
patoh_alloc_pool0	zoltan/phg/phg.h	/^  int patoh_alloc_pool0,   \/* to adjust patoh's memory pre-allocation amount *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
patoh_alloc_pool1	zoltan/phg/phg.h	/^      patoh_alloc_pool1;    $/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
pdf	zoltan/Makefile.in	/^pdf: pdf-recursive$/;"	t
pdf	zoltan/driver/Makefile.in	/^pdf: pdf-am$/;"	t
pdf	zoltan/fdriver/Makefile.in	/^pdf: pdf-am$/;"	t
pdf-am	zoltan/Makefile.in	/^pdf-am:$/;"	t
pdf-am	zoltan/driver/Makefile.in	/^pdf-am:$/;"	t
pdf-am	zoltan/fdriver/Makefile.in	/^pdf-am:$/;"	t
pdfdir	zoltan/Makefile.in	/^pdfdir = @pdfdir@$/;"	m
pdfdir	zoltan/driver/Makefile.in	/^pdfdir = @pdfdir@$/;"	m
pdfdir	zoltan/fdriver/Makefile.in	/^pdfdir = @pdfdir@$/;"	m
pdsk_add_fact	zoltan/driver/dr_input_const.h	/^  int     pdsk_add_fact;             \/* The offset from zero used by the    *\/$/;"	m	struct:Parallel_IO	typeref:typename:int
pdsk_add_fact	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: pdsk_add_fact /;"	k	type:PARIO_INFO
pdsk_root	zoltan/driver/dr_input_const.h	/^  char    pdsk_root[FILENAME_MAX+1];$/;"	m	struct:Parallel_IO	typeref:typename:char[]
pdsk_root	zoltan/fdriver/fdr_input.f90	/^  character(len=FILENAME_MAX+1) :: pdsk_root$/;"	k	type:PARIO_INFO
pdsk_subdir	zoltan/driver/dr_input_const.h	/^  char    pdsk_subdir[FILENAME_MAX+1];$/;"	m	struct:Parallel_IO	typeref:typename:char[]
pdsk_subdir	zoltan/fdriver/fdr_input.f90	/^  character(len=FILENAME_MAX+1) :: pdsk_subdir$/;"	k	type:PARIO_INFO
perm	zoltan/matlab/zoltan.m	/^  perm = [perm, find(part==i)];$/;"	v
perm	zoltan/matlab/zoltan.m	/^perm = [];$/;"	v
perm.o	zoltan/Makefile.in	/^perm.o: $(srcdir)\/order\/perm.c$/;"	t
perm.obj	zoltan/Makefile.in	/^perm.obj: $(srcdir)\/order\/perm.c$/;"	t
perm_value	zoltan/driver/dr_const.h	/^  int      perm_value;  \/* Value for this element in permutation vector $/;"	m	struct:Element_Description	typeref:typename:int
perm_value	zoltan/fdriver/fdr_const.f90	/^  integer(Zoltan_INT) :: perm_value /;"	k	type:ELEM_INFO
pexo_fname	zoltan/driver/dr_input_const.h	/^  char    pexo_fname[FILENAME_MAX+1];$/;"	m	struct:Parallel_IO	typeref:typename:char[]
pexo_fname	zoltan/fdriver/fdr_input.f90	/^  character(len=FILENAME_MAX+1) :: pexo_fname$/;"	k	type:PARIO_INFO
phasethreereduce	zoltan/phg/phg_match.c	/^static void phasethreereduce ($/;"	f	typeref:typename:void	file:
phg.o	zoltan/Makefile.in	/^phg.o: $(srcdir)\/phg\/phg.c$/;"	t
phg.obj	zoltan/Makefile.in	/^phg.obj: $(srcdir)\/phg\/phg.c$/;"	t
phg_GID_lookup	zoltan/phg/phg_lookup.h	/^}phg_GID_lookup;$/;"	t	typeref:struct:_GID_lookup
phg_Vcycle.o	zoltan/Makefile.in	/^phg_Vcycle.o: $(srcdir)\/phg\/phg_Vcycle.c$/;"	t
phg_Vcycle.obj	zoltan/Makefile.in	/^phg_Vcycle.obj: $(srcdir)\/phg\/phg_Vcycle.c$/;"	t
phg_build.o	zoltan/Makefile.in	/^phg_build.o: $(srcdir)\/phg\/phg_build.c$/;"	t
phg_build.obj	zoltan/Makefile.in	/^phg_build.obj: $(srcdir)\/phg\/phg_build.c$/;"	t
phg_build_calls.o	zoltan/Makefile.in	/^phg_build_calls.o: $(srcdir)\/phg\/phg_build_calls.c$/;"	t
phg_build_calls.obj	zoltan/Makefile.in	/^phg_build_calls.obj: $(srcdir)\/phg\/phg_build_calls.c$/;"	t
phg_coarse.o	zoltan/Makefile.in	/^phg_coarse.o: $(srcdir)\/phg\/phg_coarse.c$/;"	t
phg_coarse.obj	zoltan/Makefile.in	/^phg_coarse.obj: $(srcdir)\/phg\/phg_coarse.c$/;"	t
phg_comm.o	zoltan/Makefile.in	/^phg_comm.o: $(srcdir)\/phg\/phg_comm.c$/;"	t
phg_comm.obj	zoltan/Makefile.in	/^phg_comm.obj: $(srcdir)\/phg\/phg_comm.c$/;"	t
phg_create_GID_lookup_table	zoltan/phg/phg_lookup.c	/^phg_GID_lookup *phg_create_GID_lookup_table(ZOLTAN_ID_PTR gids, int size, int lenGID)$/;"	f	typeref:typename:phg_GID_lookup *
phg_create_GID_lookup_table2	zoltan/phg/phg_lookup.c	/^phg_GID_lookup *phg_create_GID_lookup_table2(ZOLTAN_ID_PTR gids, int ngids, int lenGID)$/;"	f	typeref:typename:phg_GID_lookup *
phg_distrib.o	zoltan/Makefile.in	/^phg_distrib.o: $(srcdir)\/phg\/phg_distrib.c$/;"	t
phg_distrib.obj	zoltan/Makefile.in	/^phg_distrib.obj: $(srcdir)\/phg\/phg_distrib.c$/;"	t
phg_free_GID_lookup_table	zoltan/phg/phg_lookup.c	/^void phg_free_GID_lookup_table(phg_GID_lookup **lu)$/;"	f	typeref:typename:void
phg_free_ews	zoltan/phg/phg_lookup.c	/^void phg_free_ews(zoltan_ews *zew)$/;"	f	typeref:typename:void
phg_free_objects	zoltan/phg/phg_lookup.c	/^void phg_free_objects(zoltan_objects *zo)$/;"	f	typeref:typename:void
phg_free_pins	zoltan/phg/phg_lookup.c	/^void phg_free_pins(zoltan_pins *zp)$/;"	f	typeref:typename:void
phg_free_temp_edges	zoltan/phg/phg_lookup.c	/^void phg_free_temp_edges(zoltan_temp_edges *zte)$/;"	f	typeref:typename:void
phg_free_temp_vertices	zoltan/phg/phg_lookup.c	/^void phg_free_temp_vertices(zoltan_temp_vertices *ztv)$/;"	f	typeref:typename:void
phg_gather.o	zoltan/Makefile.in	/^phg_gather.o: $(srcdir)\/phg\/phg_gather.c$/;"	t
phg_gather.obj	zoltan/Makefile.in	/^phg_gather.obj: $(srcdir)\/phg\/phg_gather.c$/;"	t
phg_hypergraph.o	zoltan/Makefile.in	/^phg_hypergraph.o: $(srcdir)\/phg\/phg_hypergraph.c$/;"	t
phg_hypergraph.obj	zoltan/Makefile.in	/^phg_hypergraph.obj: $(srcdir)\/phg\/phg_hypergraph.c$/;"	t
phg_lookup.o	zoltan/Makefile.in	/^phg_lookup.o: $(srcdir)\/phg\/phg_lookup.c$/;"	t
phg_lookup.obj	zoltan/Makefile.in	/^phg_lookup.obj: $(srcdir)\/phg\/phg_lookup.c$/;"	t
phg_lookup_GID	zoltan/phg/phg_lookup.c	/^int phg_lookup_GID(phg_GID_lookup *lu, ZOLTAN_ID_PTR gid)$/;"	f	typeref:typename:int
phg_map_GIDs_to_processes	zoltan/phg/phg_lookup.c	/^int phg_map_GIDs_to_processes(ZZ *zz, ZOLTAN_ID_PTR eid, int size, $/;"	f	typeref:typename:int
phg_match.o	zoltan/Makefile.in	/^phg_match.o: $(srcdir)\/phg\/phg_match.c$/;"	t
phg_match.obj	zoltan/Makefile.in	/^phg_match.obj: $(srcdir)\/phg\/phg_match.c$/;"	t
phg_order.o	zoltan/Makefile.in	/^phg_order.o: $(srcdir)\/phg\/phg_order.c$/;"	t
phg_order.obj	zoltan/Makefile.in	/^phg_order.obj: $(srcdir)\/phg\/phg_order.c$/;"	t
phg_parkway.o	zoltan/Makefile.in	/^phg_parkway.o: $(srcdir)\/phg\/phg_parkway.c$/;"	t
phg_parkway.obj	zoltan/Makefile.in	/^phg_parkway.obj: $(srcdir)\/phg\/phg_parkway.c$/;"	t
phg_patoh.o	zoltan/Makefile.in	/^phg_patoh.o: $(srcdir)\/phg\/phg_patoh.c$/;"	t
phg_patoh.obj	zoltan/Makefile.in	/^phg_patoh.obj: $(srcdir)\/phg\/phg_patoh.c$/;"	t
phg_plot.o	zoltan/Makefile.in	/^phg_plot.o: $(srcdir)\/phg\/phg_plot.c$/;"	t
phg_plot.obj	zoltan/Makefile.in	/^phg_plot.obj: $(srcdir)\/phg\/phg_plot.c$/;"	t
phg_rdivide.o	zoltan/Makefile.in	/^phg_rdivide.o: $(srcdir)\/phg\/phg_rdivide.c$/;"	t
phg_rdivide.obj	zoltan/Makefile.in	/^phg_rdivide.obj: $(srcdir)\/phg\/phg_rdivide.c$/;"	t
phg_refinement.o	zoltan/Makefile.in	/^phg_refinement.o: $(srcdir)\/phg\/phg_refinement.c$/;"	t
phg_refinement.obj	zoltan/Makefile.in	/^phg_refinement.obj: $(srcdir)\/phg\/phg_refinement.c$/;"	t
phg_scale.o	zoltan/Makefile.in	/^phg_scale.o: $(srcdir)\/phg\/phg_scale.c$/;"	t
phg_scale.obj	zoltan/Makefile.in	/^phg_scale.obj: $(srcdir)\/phg\/phg_scale.c$/;"	t
phg_serialpartition.o	zoltan/Makefile.in	/^phg_serialpartition.o: $(srcdir)\/phg\/phg_serialpartition.c$/;"	t
phg_serialpartition.obj	zoltan/Makefile.in	/^phg_serialpartition.obj: $(srcdir)\/phg\/phg_serialpartition.c$/;"	t
phg_timer_indices	zoltan/phg/phg_tree.h	/^struct phg_timer_indices {$/;"	s
phg_tree.o	zoltan/Makefile.in	/^phg_tree.o: $(srcdir)\/phg\/phg_tree.c$/;"	t
phg_tree.obj	zoltan/Makefile.in	/^phg_tree.obj: $(srcdir)\/phg\/phg_tree.c$/;"	t
phg_util.o	zoltan/Makefile.in	/^phg_util.o: $(srcdir)\/phg\/phg_util.c$/;"	t
phg_util.obj	zoltan/Makefile.in	/^phg_util.obj: $(srcdir)\/phg\/phg_util.c$/;"	t
phg_verbose.o	zoltan/Makefile.in	/^phg_verbose.o: $(srcdir)\/phg\/phg_verbose.c$/;"	t
phg_verbose.obj	zoltan/Makefile.in	/^phg_verbose.obj: $(srcdir)\/phg\/phg_verbose.c$/;"	t
pick_best	zoltan/phg/phg_serialpartition.c	/^static int pick_best($/;"	f	typeref:typename:int	file:
pinGID	zoltan/phg/phg_lookup.h	/^  ZOLTAN_ID_PTR pinGID;     \/* global ID of pin vertex *\/$/;"	m	struct:_myPin	typeref:typename:ZOLTAN_ID_PTR
pinGID	zoltan/phg/phg_lookup.h	/^  ZOLTAN_ID_PTR pinGID;     \/* vertex ID of each pin*\/$/;"	m	struct:_hshEdge	typeref:typename:ZOLTAN_ID_PTR
pinGNO	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_GNO_TYPE  *pinGNO;     \/* array of gno of other extremtiy *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:ZOLTAN_GNO_TYPE *
pinGNO	zoltan/phg/phg_hypergraph.h	/^  ZOLTAN_GNO_TYPE *pinGNO;        \/* pin global number NEW *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:ZOLTAN_GNO_TYPE *
pinHash	zoltan/phg/phg_lookup.h	/^  int           *pinHash;   \/* process to which pin vertex is hashed *\/$/;"	m	struct:_hshEdge	typeref:typename:int *
pinwgt	zoltan/matrix/zoltan_matrix.h	/^  float        *pinwgt;        \/* Wgt for pins *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:float *
pinwgt	zoltan/matrix/zoltan_matrix.h	/^  int pinwgt;                  \/* Do we want pinwgt ? *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
pinwgtdim	zoltan/matrix/zoltan_matrix.h	/^  int           pinwgtdim;     \/* Wgt dimensions for pins *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
pinwgtop	zoltan/matrix/zoltan_matrix.h	/^  WgtOp pinwgtop;              \/* How to deal with duplicate arcs *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:WgtOp
pio_info	zoltan/fdriver/fdr_main.f90	/^  type(PARIO_INFO) :: pio_info$/;"	v	program:fdriver
pkgdatadir	zoltan/Makefile.in	/^pkgdatadir = $(datadir)\/@PACKAGE@$/;"	m
pkgdatadir	zoltan/driver/Makefile.in	/^pkgdatadir = $(datadir)\/@PACKAGE@$/;"	m
pkgdatadir	zoltan/fdriver/Makefile.in	/^pkgdatadir = $(datadir)\/@PACKAGE@$/;"	m
pkgincludedir	zoltan/Makefile.in	/^pkgincludedir = $(includedir)\/@PACKAGE@$/;"	m
pkgincludedir	zoltan/driver/Makefile.in	/^pkgincludedir = $(includedir)\/@PACKAGE@$/;"	m
pkgincludedir	zoltan/fdriver/Makefile.in	/^pkgincludedir = $(includedir)\/@PACKAGE@$/;"	m
pkglibdir	zoltan/Makefile.in	/^pkglibdir = $(libdir)\/@PACKAGE@$/;"	m
pkglibdir	zoltan/driver/Makefile.in	/^pkglibdir = $(libdir)\/@PACKAGE@$/;"	m
pkglibdir	zoltan/fdriver/Makefile.in	/^pkglibdir = $(libdir)\/@PACKAGE@$/;"	m
pkglibexecdir	zoltan/Makefile.in	/^pkglibexecdir = $(libexecdir)\/@PACKAGE@$/;"	m
pkglibexecdir	zoltan/driver/Makefile.in	/^pkglibexecdir = $(libexecdir)\/@PACKAGE@$/;"	m
pkglibexecdir	zoltan/fdriver/Makefile.in	/^pkglibexecdir = $(libexecdir)\/@PACKAGE@$/;"	m
plan_reverse	zoltan/Utilities/Communication/comm.h	/^    ZOLTAN_COMM_OBJ* plan_reverse;   \/* to support POST & WAIT *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:ZOLTAN_COMM_OBJ *
platform_name	zoltan/hier/hier.h	/^  char *platform_name;$/;"	m	struct:_spec	typeref:typename:char *
plotcolors	zoltan/matlab/plotcolors.m	/^function [colorV,symb] = plotcolors(cindex,numcolors)$/;"	f
pmatching_agg_ipm	zoltan/phg/phg_match.c	/^static ZOLTAN_PHG_MATCHING_FN pmatching_agg_ipm;     \/* agglomerative IPM *\/$/;"	v	typeref:typename:ZOLTAN_PHG_MATCHING_FN	file:
pmatching_agg_ipm	zoltan/phg/phg_match.c	/^static int pmatching_agg_ipm (ZZ *zz,$/;"	f	typeref:typename:int	file:
pmatching_alt_ipm	zoltan/phg/phg_match.c	/^static ZOLTAN_PHG_MATCHING_FN pmatching_alt_ipm;     \/* alternating ipm *\/$/;"	v	typeref:typename:ZOLTAN_PHG_MATCHING_FN	file:
pmatching_alt_ipm	zoltan/phg/phg_match.c	/^static int pmatching_alt_ipm($/;"	f	typeref:typename:int	file:
pmatching_geom	zoltan/phg/phg_match.c	/^static ZOLTAN_PHG_MATCHING_FN pmatching_geom;        \/* geometric matching *\/$/;"	v	typeref:typename:ZOLTAN_PHG_MATCHING_FN	file:
pmatching_geom	zoltan/phg/phg_match.c	/^static int pmatching_geom (ZZ *zz,$/;"	f	typeref:typename:int	file:
pmatching_hybrid_ipm	zoltan/phg/phg_match.c	/^static ZOLTAN_PHG_MATCHING_FN pmatching_hybrid_ipm;  \/* hybrid ipm *\/$/;"	v	typeref:typename:ZOLTAN_PHG_MATCHING_FN	file:
pmatching_hybrid_ipm	zoltan/phg/phg_match.c	/^static int pmatching_hybrid_ipm($/;"	f	typeref:typename:int	file:
pmatching_ipm	zoltan/phg/phg_match.c	/^static ZOLTAN_PHG_MATCHING_FN pmatching_ipm;         \/* inner product matching *\/$/;"	v	typeref:typename:ZOLTAN_PHG_MATCHING_FN	file:
pmatching_ipm	zoltan/phg/phg_match.c	/^static int pmatching_ipm (ZZ *zz,$/;"	f	typeref:typename:int	file:
pmatching_local_ipm	zoltan/phg/phg_match.c	/^static ZOLTAN_PHG_MATCHING_FN pmatching_local_ipm;   \/* local ipm *\/$/;"	v	typeref:typename:ZOLTAN_PHG_MATCHING_FN	file:
pmatching_local_ipm	zoltan/phg/phg_match.c	/^static int pmatching_local_ipm($/;"	f	typeref:typename:int	file:
pmv3method	zoltan/tpls/parmetis_interface.c	/^static int pmv3method( char *alg)$/;"	f	typeref:typename:int	file:
point_assign.o	zoltan/Makefile.in	/^point_assign.o: $(srcdir)\/rcb\/point_assign.c$/;"	t
point_assign.obj	zoltan/Makefile.in	/^point_assign.obj: $(srcdir)\/rcb\/point_assign.c$/;"	t
pop	zoltan/reftree/reftree_coarse_path.c	/^static int pop(int list)$/;"	f	typeref:typename:int	file:
pos	zoltan/driver/dr_compress_const.h	/^  ssize_t pos;   \/* they need to be signed (pos is initialized to -1).   *\/$/;"	m	struct:ZOLTAN_FILE_	typeref:typename:ssize_t
pos	zoltan/zz/zz_heap.h	/^   int   *pos;$/;"	m	struct:__anon5ef29df60108	typeref:typename:int *
postprocessing.o	zoltan/Makefile.in	/^postprocessing.o: $(srcdir)\/tpls\/postprocessing.c$/;"	t
postprocessing.obj	zoltan/Makefile.in	/^postprocessing.obj: $(srcdir)\/tpls\/postprocessing.c$/;"	t
power	zoltan/zz/zz_const.h	/^  int power;             \/* if (nnodes == 1) specify power of the processor *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
precision	zoltan/matlab/mmwrite.m	/^  precision = 16;$/;"	v
pref_part	zoltan/phg/phg_hypergraph.h	/^  int *pref_part;   \/* parallel to fixed array with size of |V| containing the$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
prefix	zoltan/Makefile.in	/^prefix = @prefix@$/;"	m
prefix	zoltan/driver/Makefile.in	/^prefix = @prefix@$/;"	m
prefix	zoltan/fdriver/Makefile.in	/^prefix = @prefix@$/;"	m
preprocessing.o	zoltan/Makefile.in	/^preprocessing.o: $(srcdir)\/tpls\/preprocessing.c$/;"	t
preprocessing.obj	zoltan/Makefile.in	/^preprocessing.obj: $(srcdir)\/tpls\/preprocessing.c$/;"	t
prev	zoltan/coloring/bucket.h	/^  struct S* prev;$/;"	m	struct:S	typeref:struct:S *
prev	zoltan/reftree/reftree_coarse_path.c	/^static int *prev, *next, *in, *out, *onpath;$/;"	v	typeref:typename:int *	file:
prev	zoltan/zz/zz_util_const.h	/^  ZOLTAN_ENTRY *prev;   \/* pointer to previous returned element *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:ZOLTAN_ENTRY *
prev_hash_index	zoltan/zz/zz_util_const.h	/^  int prev_hash_index;  \/* hash index of previous returned element *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
prev_index	zoltan/zz/zz_util_const.h	/^  int prev_index;       \/* index of top element returned in iterator *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
print_distributed_mesh	zoltan/driver/dr_output.c	/^void print_distributed_mesh($/;"	f	typeref:typename:void
print_hypergraph	zoltan/phg/phg_verbose.c	/^void print_hypergraph(ZZ *zz, ZHG *zhg, int sumWeight)$/;"	f	typeref:typename:void
print_input_info	zoltan/driver/dr_main.c	/^static void print_input_info(FILE *fp, int Num_Proc, PROB_INFO_PTR prob, $/;"	f	typeref:typename:void	file:
print_input_info	zoltan/driver/dr_mainCPP.cpp	/^static void print_input_info(ostream &os, int Num_Proc, PROB_INFO_PTR prob, $/;"	f	typeref:typename:void	file:
print_input_info	zoltan/fdriver/fdr_main.f90	/^subroutine print_input_info(/;"	s
print_mesh	zoltan/driver/dr_main.c	/^static void print_mesh(int proc, MESH_INFO_PTR m, int *tp, int *the, int *tv)$/;"	f	typeref:typename:void	file:
print_params.o	zoltan/Makefile.in	/^print_params.o: $(srcdir)\/params\/print_params.c$/;"	t
print_params.obj	zoltan/Makefile.in	/^print_params.obj: $(srcdir)\/params\/print_params.c$/;"	t
print_rcb_tree	zoltan/rcb/rcb.c	/^static void print_rcb_tree(ZZ *zz, int np, int fp, struct rcb_tree *treept_arr)$/;"	f	typeref:typename:void	file:
print_rib_tree	zoltan/rcb/rib.c	/^static void print_rib_tree(ZZ *zz, int np, int fp, struct rib_tree *treept_arr)$/;"	f	typeref:typename:void	file:
print_sync_end	zoltan/driver/dr_par_util.c	/^void print_sync_end(int proc, int nprocs, int do_print_line)$/;"	f	typeref:typename:void
print_sync_start	zoltan/driver/dr_par_util.c	/^void print_sync_start(int proc, int do_print_line)$/;"	f	typeref:typename:void
print_zoltan_pins	zoltan/phg/phg_verbose.c	/^void print_zoltan_pins(zoltan_pins *z, int me, int ewgt_dim)$/;"	f	typeref:typename:void
printcoord	zoltan/driver/dr_gnuplot.c	/^static void printcoord(FILE *fp, int ndims, char *str, ELEM_INFO *elem)$/;"	f	typeref:typename:void	file:
printobj	zoltan/lb/low_mem_lb_migrate.c	/^static void printobj(int me, int nprocs, $/;"	f	typeref:typename:void	file:
prob	zoltan/fdriver/fdr_main.f90	/^  type(PROB_INFO) :: prob$/;"	v	program:fdriver
proc	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^   int proc;$/;"	m	struct:__anon50a459380108	typeref:typename:int	file:
proc	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   int        proc;        \/* destination or location               *\/$/;"	m	struct:__anonc14baf7a0208	typeref:typename:int
proc	zoltan/driver/dr_const.h	/^  int    proc;        \/* my rank, want to know if adj elements are on my proc *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
proc	zoltan/par/par_median_randomized.c	/^  int proc;$/;"	m	struct:_commStruct	typeref:typename:int	file:
process_mtxp_file	zoltan/driver/dr_hg_io.c	/^static int process_mtxp_file(PARIO_INFO_PTR pio_info,$/;"	f	typeref:typename:int	file:
prochi	zoltan/par/par_bisect.c	/^  int       proclo, prochi;     \/* unique proc who owns a nearest dot *\/$/;"	m	struct:bisector	typeref:typename:int	file:
prochi	zoltan/par/par_median.c	/^  int       proclo, prochi;     \/* unique proc who owns a nearest dot *\/$/;"	m	struct:median	typeref:typename:int	file:
prochi	zoltan/rcb/rcb.h	/^  int       proclo, prochi;	\/* unique proc who owns a nearest dot *\/$/;"	m	struct:rcb_median	typeref:typename:int
proclo	zoltan/par/par_bisect.c	/^  int       proclo, prochi;     \/* unique proc who owns a nearest dot *\/$/;"	m	struct:bisector	typeref:typename:int	file:
proclo	zoltan/par/par_median.c	/^  int       proclo, prochi;     \/* unique proc who owns a nearest dot *\/$/;"	m	struct:median	typeref:typename:int	file:
proclo	zoltan/rcb/rcb.h	/^  int       proclo, prochi;	\/* unique proc who owns a nearest dot *\/$/;"	m	struct:rcb_median	typeref:typename:int
proclower	zoltan/par/par_median_randomized.c	/^  int proclower;$/;"	m	struct:_commStruct	typeref:typename:int	file:
procname	zoltan/fdriver/fdr_main.f90	/^  character(len=MPI_MAX_PROCESSOR_NAME) :: procname$/;"	v	program:fdriver
procred	zoltan/phg/phg_tree.h	/^  int procred;    \/* Processor reduction *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
procs_from	zoltan/Utilities/Communication/comm.h	/^    int      *procs_from;       \/* processors I'll receive from*\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
procs_to	zoltan/Utilities/Communication/comm.h	/^    int      *procs_to;         \/* processors I'll send to *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
program_transform_name	zoltan/Makefile.in	/^program_transform_name = @program_transform_name@$/;"	m
program_transform_name	zoltan/driver/Makefile.in	/^program_transform_name = @program_transform_name@$/;"	m
program_transform_name	zoltan/fdriver/Makefile.in	/^program_transform_name = @program_transform_name@$/;"	m
project	zoltan/phg/phg_tree.h	/^  int project;    \/* Project coarse-to-fine *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
projected_distances	zoltan/zz/zz_coord.c	/^static void projected_distances(ZZ *zz, double *coords, int num_obj,$/;"	f	typeref:typename:void	file:
ps	zoltan/Makefile.in	/^ps: ps-recursive$/;"	t
ps	zoltan/driver/Makefile.in	/^ps: ps-am$/;"	t
ps	zoltan/fdriver/Makefile.in	/^ps: ps-am$/;"	t
ps-am	zoltan/Makefile.in	/^ps-am:$/;"	t
ps-am	zoltan/driver/Makefile.in	/^ps-am:$/;"	t
ps-am	zoltan/fdriver/Makefile.in	/^ps-am:$/;"	t
psdir	zoltan/Makefile.in	/^psdir = @psdir@$/;"	m
psdir	zoltan/driver/Makefile.in	/^psdir = @psdir@$/;"	m
psdir	zoltan/fdriver/Makefile.in	/^psdir = @psdir@$/;"	m
ptr	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn2.c	/^  Range_Info *ptr;$/;"	m	struct:dd_nh2_struct	typeref:typename:Range_Info *	file:
ptr	zoltan/Utilities/Memory/mem.c	/^  double   *ptr;			\/* memory location returned *\/$/;"	m	struct:malloc_debug_data	typeref:typename:double *	file:
ptr	zoltan/params/params_const.h	/^  void *ptr;			\/* Pointer to parameter variable *\/$/;"	m	struct:Param_Vars	typeref:typename:void *
ptrcompare	zoltan/fort/ztypes.f90	/^function ptrcompare(/;"	f	module:zoltan_types
push	zoltan/reftree/reftree_coarse_path.c	/^static int push(int elem, int list, ZZ *zz)$/;"	f	typeref:typename:int	file:
quickpart_list_inc_gno	zoltan/zz/zz_sort.c	/^static void quickpart_list_inc_gno ($/;"	f	typeref:typename:void	file:
quickpart_list_inc_int	zoltan/zz/zz_sort.c	/^static void quickpart_list_inc_int ($/;"	f	typeref:typename:void	file:
quickpart_list_inc_long	zoltan/zz/zz_sort.c	/^static void quickpart_list_inc_long ($/;"	f	typeref:typename:void	file:
quickpart_list_inc_long_long	zoltan/zz/zz_sort.c	/^static void quickpart_list_inc_long_long ($/;"	f	typeref:typename:void	file:
quickpart_list_inc_one_int	zoltan/zz/zz_sort.c	/^static void quickpart_list_inc_one_int ($/;"	f	typeref:typename:void	file:
quickpart_list_inc_short	zoltan/zz/zz_sort.c	/^static void quickpart_list_inc_short($/;"	f	typeref:typename:void	file:
quickpart_pointer_dec_double	zoltan/zz/zz_sort.c	/^static void quickpart_pointer_dec_double ($/;"	f	typeref:typename:void	file:
quickpart_pointer_dec_float	zoltan/zz/zz_sort.c	/^static void quickpart_pointer_dec_float ($/;"	f	typeref:typename:void	file:
quickpart_pointer_dec_float_int	zoltan/zz/zz_sort.c	/^static void quickpart_pointer_dec_float_int ($/;"	f	typeref:typename:void	file:
quickpart_pointer_inc_gno_int	zoltan/zz/zz_sort.c	/^static void quickpart_pointer_inc_gno_int($/;"	f	typeref:typename:void	file:
quickpart_pointer_inc_id_id	zoltan/driver/dr_util.c	/^static void quickpart_pointer_inc_id_id ($/;"	f	typeref:typename:void	file:
quickpart_pointer_inc_int_int	zoltan/zz/zz_sort.c	/^static void quickpart_pointer_inc_int_int ($/;"	f	typeref:typename:void	file:
quicksort_pointer_inc_id_id	zoltan/driver/dr_util.c	/^void quicksort_pointer_inc_id_id($/;"	f	typeref:typename:void
r	zoltan/hsfc/hsfc.h	/^   double r;            \/* rightmost boundary of partition interval *\/$/;"	m	struct:Partition	typeref:typename:double
random.o	zoltan/Makefile.in	/^random.o: $(srcdir)\/simple\/random.c$/;"	t
random.obj	zoltan/Makefile.in	/^random.obj: $(srcdir)\/simple\/random.c$/;"	t
randomize	zoltan/matrix/zoltan_matrix.h	/^  int randomize;               \/* Do we have to randomize input ? *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
rank	zoltan/order/order_const.h	/^  int *rank;		\/* rank[i] is the rank of gids[i] *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
rank	zoltan/par/par_median_randomized.c	/^  int rank;$/;"	m	struct:_commStruct	typeref:typename:int	file:
rank	zoltan/phg/phg_serialpartition.c	/^  int rank;$/;"	m	struct:pick_best::__anon2e47d5030108	typeref:typename:int	file:
rank	zoltan/phg/phg_util.c	/^  int rank;$/;"	m	struct:Zoltan_PHG_Find_Root::__anon08db67e70108	typeref:typename:int	file:
rank	zoltan/tpls/third_library.h	/^  indextype *rank;      \/* rank[i] is the rank of gids[i] *\/$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:indextype *
rank	zoltan/tpls/third_library_const.h	/^  indextype *rank;            \/* rank[i] is the rank of gids[i] *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
ratio	zoltan/phg/phg_hypergraph.h	/^  double ratio;     \/* split when recursively dividing for p > 2 *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:double
rb_sort_doubles_increasing	zoltan/par/par_median_randomized.c	/^int rb_sort_doubles_increasing(const void *a, const void *b)$/;"	f	typeref:typename:int
rcb.o	zoltan/Makefile.in	/^rcb.o: $(srcdir)\/rcb\/rcb.c$/;"	t
rcb.obj	zoltan/Makefile.in	/^rcb.obj: $(srcdir)\/rcb\/rcb.c$/;"	t
rcb_box	zoltan/rcb/rcb.h	/^struct rcb_box {       	     \/* bounding box *\/$/;"	s
rcb_box.o	zoltan/Makefile.in	/^rcb_box.o: $(srcdir)\/rcb\/rcb_box.c$/;"	t
rcb_box.obj	zoltan/Makefile.in	/^rcb_box.obj: $(srcdir)\/rcb\/rcb_box.c$/;"	t
rcb_fn	zoltan/rcb/rcb.c	/^static int rcb_fn($/;"	f	typeref:typename:int	file:
rcb_median	zoltan/rcb/rcb.h	/^struct rcb_median {          \/* RCB cut info *\/$/;"	s
rcb_tree	zoltan/rcb/rcb.h	/^struct rcb_tree {	     \/* tree of RCB cuts *\/$/;"	s
rcb_util.o	zoltan/Makefile.in	/^rcb_util.o: $(srcdir)\/rcb\/rcb_util.c$/;"	t
rcb_util.obj	zoltan/Makefile.in	/^rcb_util.obj: $(srcdir)\/rcb\/rcb_util.c$/;"	t
rdafter	zoltan/phg/phg_tree.h	/^  int rdafter;    \/* Part of Rdivide *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rdbefore	zoltan/phg/phg_tree.h	/^  int rdbefore;   \/* Part of Rdivide *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rdisk	zoltan/driver/dr_input_const.h	/^  int     rdisk;$/;"	m	struct:Parallel_IO	typeref:typename:int
rdisk	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: rdisk$/;"	k	type:PARIO_INFO
rdivide_and_prepsend	zoltan/phg/phg_rdivide.c	/^static int rdivide_and_prepsend(int lo, int hi, Partition final, ZZ *zz,$/;"	f	typeref:typename:int	file:
rdrdivide	zoltan/phg/phg_tree.h	/^  int rdrdivide;  \/* Rdivide time. *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rdredist	zoltan/phg/phg_tree.h	/^  int rdredist;    \/* Part of Rdivide *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rdsend	zoltan/phg/phg_tree.h	/^  int rdsend;    \/* Part of Rdivide *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rdsplit	zoltan/phg/phg_tree.h	/^  int rdsplit;    \/* Part of Rdivide *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rdwait	zoltan/phg/phg_tree.h	/^  int rdwait;    \/* Part of Rdivide *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
read_chaco_file	zoltan/driver/dr_chaco_io.c	/^int read_chaco_file(int Proc,$/;"	f	typeref:typename:int
read_chaco_mesh	zoltan/fdriver/fdr_chaco_io.f90	/^logical function read_chaco_mesh(/;"	f	module:dr_chaco_io
read_cmd_file	zoltan/driver/dr_input.c	/^int read_cmd_file ($/;"	f	typeref:typename:int
read_cmd_file	zoltan/fdriver/fdr_input.f90	/^logical function read_cmd_file(/;"	f	module:dr_input
read_comm_map_info	zoltan/driver/dr_exoII_io.c	/^static int read_comm_map_info(int pexoid, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int	file:
read_comm_map_info	zoltan/driver/dr_exoII_ioCPP.cpp	/^static int read_comm_map_info(int pexoid, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int	file:
read_elem_info	zoltan/driver/dr_exoII_io.c	/^static int read_elem_info(int pexoid, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int	file:
read_elem_info	zoltan/driver/dr_exoII_ioCPP.cpp	/^static int read_elem_info(int pexoid, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int	file:
read_exoII_file	zoltan/driver/dr_exoII_io.c	/^int read_exoII_file(int Proc,$/;"	f	typeref:typename:int
read_exoII_file	zoltan/driver/dr_exoII_ioCPP.cpp	/^int read_exoII_file(int Proc,$/;"	f	typeref:typename:int
read_graph_line	zoltan/fdriver/fdr_chaco_io.f90	/^subroutine read_graph_line(/;"	s	module:dr_chaco_io
read_hypergraph_file	zoltan/driver/dr_hg_io.c	/^int read_hypergraph_file($/;"	f	typeref:typename:int
read_int	zoltan/ch/ch_input_read.c	/^int       read_int($/;"	f	typeref:typename:int
read_mesh	zoltan/driver/dr_main.c	/^static int read_mesh($/;"	f	typeref:typename:int	file:
read_mesh	zoltan/driver/dr_mainCPP.cpp	/^static int read_mesh($/;"	f	typeref:typename:int	file:
read_mesh	zoltan/fdriver/fdr_main.f90	/^logical function read_mesh(/;"	f
read_mm_file	zoltan/driver/dr_hg_io.c	/^int read_mm_file($/;"	f	typeref:typename:int
read_mm_file	zoltan/fdriver/fdr_mm_io.f90	/^logical function read_mm_file(/;"	f	module:dr_mm_io
read_mtxp_lines	zoltan/driver/dr_hg_io.c	/^int read_mtxp_lines(char *fname, int my_rank, int nprocs, char **mine, int *num)$/;"	f	typeref:typename:int
read_mtxplus_file	zoltan/driver/dr_hg_io.c	/^int read_mtxplus_file($/;"	f	typeref:typename:int
read_real_line	zoltan/fdriver/fdr_chaco_io.f90	/^subroutine read_real_line(/;"	s	module:dr_chaco_io
read_val	zoltan/ch/ch_input_read.c	/^double    read_val($/;"	f	typeref:typename:double
readfile	zoltan/driver/dr_hg_readfile.c	/^static int readfile ($/;"	f	typeref:typename:int	file:
realformat	zoltan/matlab/mmwrite.m	/^  realformat = sprintf('%% .%dg\\n', precision);$/;"	v
realformat	zoltan/matlab/mmwrite.m	/^  realformat = sprintf('%%d %%d %% .%dg\\n',precision);$/;"	v
realloc	zoltan/fdriver/fdr_chaco_io.f90	/^subroutine realloc(/;"	s	module:dr_chaco_io
reallocate_dot_structure	zoltan/rcb/shared.c	/^static int reallocate_dot_structure(struct Dot_Struct *dots, int newsize)$/;"	f	typeref:typename:int	file:
realtype	zoltan/tpls/third_library_const.h	/^    #define realtype /;"	d
realtype	zoltan/tpls/third_library_const.h	/^  #define realtype /;"	d
recv_buff	zoltan/Utilities/Communication/comm.h	/^    char*     recv_buff;  \/* To support POST & WAIT *\/    $/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:char *
redist	zoltan/matrix/zoltan_matrix.h	/^  int           redist;        \/* HG queries have been used or matrix distribution has changed*/;"	m	struct:Zoltan_matrix_	typeref:typename:int
redl	zoltan/phg/phg.h	/^  int redl;                      \/* Reduction limit (constant). *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
redl	zoltan/phg/phg_hypergraph.h	/^  int redl;         \/* working reduction limit *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int
redm_fast	zoltan/phg/phg.h	/^  char redm_fast[MAX_PARAM_STRING_LEN]; \/* Fast reduction method string. *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
redm_str	zoltan/phg/phg.h	/^  char redm_str[MAX_PARAM_STRING_LEN];  \/* Reduction method string. *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
redmo_str	zoltan/phg/phg.h	/^  char redmo_str[MAX_PARAM_STRING_LEN]; \/* Matching optimization string*\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
refine	zoltan/phg/phg_tree.h	/^  int refine; \/* Refinement time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
refine_fm2	zoltan/phg/phg_refinement.c	/^static ZOLTAN_PHG_REFINEMENT_FN refine_fm2;$/;"	v	typeref:typename:ZOLTAN_PHG_REFINEMENT_FN	file:
refine_fm2	zoltan/phg/phg_refinement.c	/^static int refine_fm2 (ZZ *zz,$/;"	f	typeref:typename:int	file:
refine_no	zoltan/phg/phg_refinement.c	/^static ZOLTAN_PHG_REFINEMENT_FN refine_no;$/;"	v	typeref:typename:ZOLTAN_PHG_REFINEMENT_FN	file:
refine_no	zoltan/phg/phg_refinement.c	/^static int refine_no (ZZ *zz,     \/* Zoltan data structure *\/$/;"	f	typeref:typename:int	file:
refinement_quality	zoltan/phg/phg.h	/^  float refinement_quality; \/* Adjustment to refinement parameter settings; $/;"	m	struct:PHGPartParamsStruct	typeref:typename:float
refinement_str	zoltan/phg/phg.h	/^  char refinement_str[MAX_PARAM_STRING_LEN]; \/* Refinement string and *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:char[]
reftree_build.o	zoltan/Makefile.in	/^reftree_build.o: $(srcdir)\/reftree\/reftree_build.c$/;"	t
reftree_build.obj	zoltan/Makefile.in	/^reftree_build.obj: $(srcdir)\/reftree\/reftree_build.c$/;"	t
reftree_coarse_path.o	zoltan/Makefile.in	/^reftree_coarse_path.o: $(srcdir)\/reftree\/reftree_coarse_path.c$/;"	t
reftree_coarse_path.obj	zoltan/Makefile.in	/^reftree_coarse_path.obj: $(srcdir)\/reftree\/reftree_coarse_path.c$/;"	t
reftree_hash.o	zoltan/Makefile.in	/^reftree_hash.o: $(srcdir)\/reftree\/reftree_hash.c$/;"	t
reftree_hash.obj	zoltan/Makefile.in	/^reftree_hash.obj: $(srcdir)\/reftree\/reftree_hash.c$/;"	t
reftree_node	zoltan/reftree/reftree.h	/^  ZOLTAN_REFTREE *reftree_node; \/* pointer to a node of the refinement tree *\/$/;"	m	struct:Zoltan_Reftree_hash_node	typeref:typename:ZOLTAN_REFTREE *
reftree_part.o	zoltan/Makefile.in	/^reftree_part.o: $(srcdir)\/reftree\/reftree_part.c$/;"	t
reftree_part.obj	zoltan/Makefile.in	/^reftree_part.obj: $(srcdir)\/reftree\/reftree_part.c$/;"	t
reftree_root	zoltan/reftree/reftree.h	/^  ZOLTAN_REFTREE *reftree_root;$/;"	m	struct:Zoltan_Reftree_data_struct	typeref:typename:ZOLTAN_REFTREE *
remainder	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^  int remainder;$/;"	m	struct:dd_nh3_struct	typeref:typename:int	file:
remove_dense_edges	zoltan/phg/phg_build.c	/^static int remove_dense_edges(ZZ *zz, $/;"	f	typeref:typename:int	file:
remove_from_hash	zoltan/driver/dr_migrate.c	/^void remove_from_hash($/;"	f	typeref:typename:void
remove_msg_size	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  size_t remove_msg_size; \/* Total allocation for DD_REMOVE_MSG     *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:size_t
remove_param	zoltan/params/set_param.c	/^static int remove_param($/;"	f	typeref:typename:int	file:
remove_random_vertices	zoltan/driver/dr_main.c	/^static void remove_random_vertices(MESH_INFO_PTR mesh, int iteration, $/;"	f	typeref:typename:void	file:
reorder_list	zoltan/par/par_median_randomized.c	/^static int reorder_list(double *vals, int len, int *pivotIdx, int *idxList)$/;"	f	typeref:typename:int	file:
rep	zoltan/matlab/mmread.m	/^rep   = lower(rep);$/;"	v
rep	zoltan/matlab/mmwrite.m	/^  rep = 'array';$/;"	v
rep	zoltan/matlab/mmwrite.m	/^  rep = 'coordinate';$/;"	v
request	zoltan/Utilities/Communication/comm.h	/^    MPI_Request *request;       \/* MPI requests for posted recvs *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:MPI_Request *
reset_arrays	zoltan/lb/low_mem_lb_migrate.c	/^static void reset_arrays()$/;"	f	typeref:typename:void	file:
ret	zoltan/all/all_allo_const.h	/^typedef void ZOLTAN_FORT_MALLOC_INT_FN(int *arg, int *size, int **ret);$/;"	t	typeref:typename:void ZOLTAN_FORT_MALLOC_INT_FN (int * arg,int * size,int **)
ret	zoltan/all/all_allo_const.h	/^typedef void ZOLTAN_FORT_MALLOC_SET_STRUCT_FN(int *arg, int **ret);$/;"	t	typeref:typename:void ZOLTAN_FORT_MALLOC_SET_STRUCT_FN (int * arg,int **)
retlist	zoltan/phg/phg_tree.h	/^  int retlist;  \/* Building return lists time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
return_args	zoltan/order/order_const.h	/^  int return_args;		\/* Out: What return arguments were computed? *\/$/;"	m	struct:Zoltan_Order_Options	typeref:typename:int
rfgain	zoltan/phg/phg_tree.h	/^  int rfgain;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfheap	zoltan/phg/phg_tree.h	/^  int rfheap;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfiso	zoltan/phg/phg_tree.h	/^  int rfiso;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfnonroot	zoltan/phg/phg_tree.h	/^  int rfnonroot;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfpass	zoltan/phg/phg_tree.h	/^  int rfpass;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfpins	zoltan/phg/phg_tree.h	/^  int rfpins;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfrefine	zoltan/phg/phg_tree.h	/^  int rfrefine;    \/* Refinement time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rfroll	zoltan/phg/phg_tree.h	/^  int rfroll;   \/* Part of Refinement *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
rib.o	zoltan/Makefile.in	/^rib.o: $(srcdir)\/rcb\/rib.c$/;"	t
rib.obj	zoltan/Makefile.in	/^rib.obj: $(srcdir)\/rcb\/rib.c$/;"	t
rib_fn	zoltan/rcb/rib.c	/^static int rib_fn($/;"	f	typeref:typename:int	file:
rib_tree	zoltan/rcb/rib.h	/^struct rib_tree {               \/* tree of rib method cuts *\/$/;"	s
rib_util.o	zoltan/Makefile.in	/^rib_util.o: $(srcdir)\/rcb\/rib_util.c$/;"	t
rib_util.obj	zoltan/Makefile.in	/^rib_util.obj: $(srcdir)\/rcb\/rib_util.c$/;"	t
right_leaf	zoltan/rcb/rcb.h	/^  int       right_leaf;         \/* right child of this node in cut tree *\/$/;"	m	struct:rcb_tree	typeref:typename:int
right_leaf	zoltan/rcb/rib.h	/^    int       right_leaf;       \/* right child of this node in cut tree *\/$/;"	m	struct:rib_tree	typeref:typename:int
row_comm	zoltan/phg/phg_comm.h	/^  MPI_Comm row_comm; \/* my processor's row communicator *\/$/;"	m	struct:PHGCommStruct	typeref:typename:MPI_Comm
rowloop	zoltan/matlab/mmwrite.m	/^     rowloop = '1';$/;"	v
rowloop	zoltan/matlab/mmwrite.m	/^     rowloop = 'j';$/;"	v
rows	zoltan/matlab/mmread.m	/^  rows = sizeinfo(1);$/;"	v
run_zoltan	zoltan/driver/dr_loadbal.c	/^int run_zoltan(struct Zoltan_Struct *zz, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int
run_zoltan	zoltan/driver/dr_loadbalCPP.cpp	/^int run_zoltan(Zoltan &zz, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int
run_zoltan	zoltan/fdriver/fdr_loadbal.f90	/^logical function run_zoltan(/;"	f	module:dr_loadbal
safe_free	zoltan/driver/dr_util.c	/^void safe_free(void **ptr) {$/;"	f	typeref:typename:void
sample_partition	zoltan/par/par_median_randomized.c	/^static void sample_partition(int numlist, int *dotlist, double *dots, $/;"	f	typeref:typename:void	file:
sassigned	zoltan/reftree/reftree_build.c	/^static int *sassigned;         \/* 1 if the element is assigned to this proc *\/$/;"	v	typeref:typename:int *	file:
save_pnt	zoltan/ch/ch_input_read.c	/^static int save_pnt;		\/* place in sequence to save *\/$/;"	v	typeref:typename:int	file:
sbindir	zoltan/Makefile.in	/^sbindir = @sbindir@$/;"	m
sbindir	zoltan/driver/Makefile.in	/^sbindir = @sbindir@$/;"	m
sbindir	zoltan/fdriver/Makefile.in	/^sbindir = @sbindir@$/;"	m
scale_round_weights	zoltan/phg/phg_parkway.c	/^static int scale_round_weights($/;"	f	typeref:typename:int	file:
scale_round_weights	zoltan/tpls/preprocessing.c	/^static int scale_round_weights(float *fwgts, weighttype *iwgts, int n, int dim,$/;"	f	typeref:typename:int	file:
scatter	zoltan/tpls/third_library.h	/^  int scatter;                          \/* Graph has been scattered *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
scatter_graph.o	zoltan/Makefile.in	/^scatter_graph.o: $(srcdir)\/tpls\/scatter_graph.c$/;"	t
scatter_graph.obj	zoltan/Makefile.in	/^scatter_graph.obj: $(srcdir)\/tpls\/scatter_graph.c$/;"	t
scatter_min	zoltan/tpls/third_library.h	/^  int scatter_min;                      \/* Minimum level of scatter *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
scotch_interface.o	zoltan/Makefile.in	/^scotch_interface.o: $(srcdir)\/tpls\/scotch_interface.c$/;"	t
scotch_interface.obj	zoltan/Makefile.in	/^scotch_interface.obj: $(srcdir)\/tpls\/scotch_interface.c$/;"	t
search_by_global_id	zoltan/driver/dr_loadbal.c	/^ELEM_INFO *search_by_global_id(MESH_INFO *mesh, ZOLTAN_ID_TYPE global_id, int *idx)$/;"	f	typeref:typename:ELEM_INFO *
search_by_global_id	zoltan/driver/dr_loadbalCPP.cpp	/^ELEM_INFO *search_by_global_id(MESH_INFO *mesh, ZOLTAN_ID_TYPE global_id, int *idx)$/;"	f	typeref:typename:ELEM_INFO *
search_by_global_id	zoltan/fdriver/fdr_migrate.f90	/^function search_by_global_id(/;"	f	module:dr_migrate
search_hash_table	zoltan/lb/lb_balance.c	/^static int search_hash_table(ZZ *zz, ZOLTAN_ID_PTR gid,$/;"	f	typeref:typename:int	file:
section_starts	zoltan/driver/dr_hg_io.c	/^static void section_starts(char *buf, char **pins, char **vwgts, char **ewgts)$/;"	f	typeref:typename:void	file:
self_msg	zoltan/Utilities/Communication/comm.h	/^    int       self_msg;		\/* do I have data for myself? *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
send_receive_doubles	zoltan/rcb/shared.c	/^static int send_receive_doubles(double *c, int outgoing, int total,$/;"	f	typeref:typename:int	file:
send_receive_ids	zoltan/rcb/shared.c	/^static int send_receive_ids(ZOLTAN_ID_TYPE *c, int num_ids, int outgoing, $/;"	f	typeref:typename:int	file:
send_receive_ints	zoltan/rcb/shared.c	/^static int send_receive_ints(int *c, int outgoing, int total, char *sendbuf,$/;"	f	typeref:typename:int	file:
send_receive_weights	zoltan/rcb/shared.c	/^static int send_receive_weights(double *c, int wgtdim, int outgoing, $/;"	f	typeref:typename:int	file:
sep_sizes	zoltan/order/order_const.h	/^  int *sep_sizes;               \/* Optional: Separator sizes. *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
sep_sizes	zoltan/tpls/third_library.h	/^  indextype *sep_sizes;$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:indextype *
sep_sizes	zoltan/tpls/third_library_const.h	/^  indextype *sep_sizes;               \/* Optional: Separator sizes. *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
seq_part	zoltan/phg/phg_serialpartition.c	/^static int seq_part ($/;"	f	typeref:typename:int	file:
serialIterations	zoltan/par/par_median_randomized.c	/^static int serialIterations=0;$/;"	v	typeref:typename:int	file:
serial_find_median2	zoltan/par/par_median_randomized.c	/^static double serial_find_median2(double *dots, double *wgts, int wgtflag, int *dotidx, int dotn/;"	f	typeref:typename:double	file:
serial_fm2	zoltan/phg/phg_refinement.c	/^static int serial_fm2 (ZZ *zz,$/;"	f	typeref:typename:int	file:
serial_rcb	zoltan/rcb/rcb.c	/^static int serial_rcb($/;"	f	typeref:typename:int	file:
serial_rib	zoltan/rcb/rib.c	/^static int serial_rib($/;"	f	typeref:typename:int	file:
set_hier_part_sizes	zoltan/hier/hier.c	/^static int set_hier_part_sizes(HierPartParams *hpp, float *part_sizes) {$/;"	f	typeref:typename:int	file:
set_neigh	zoltan/reftree/reftree_coarse_path.c	/^static int set_neigh(ZOLTAN_ID_PTR vertices, int *num_vert,$/;"	f	typeref:typename:int	file:
set_param.o	zoltan/Makefile.in	/^set_param.o: $(srcdir)\/params\/set_param.c$/;"	t
set_param.obj	zoltan/Makefile.in	/^set_param.obj: $(srcdir)\/params\/set_param.c$/;"	t
set_preset_dir	zoltan/rcb/rcb.c	/^static int set_preset_dir($/;"	f	typeref:typename:int	file:
set_remap_type	zoltan/lb/lb_remap.c	/^static int set_remap_type($/;"	f	typeref:typename:int	file:
setup_fixed_obj	zoltan/driver/dr_setfixed.c	/^void setup_fixed_obj(MESH_INFO_PTR mesh, int Num_Global_Parts)$/;"	f	typeref:typename:void
setup_mesh_struct	zoltan/driver/dr_random_io.c	/^static int setup_mesh_struct($/;"	f	typeref:typename:int	file:
setup_zoltan	zoltan/driver/dr_loadbal.c	/^int setup_zoltan(struct Zoltan_Struct *zz, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int
setup_zoltan	zoltan/driver/dr_loadbalCPP.cpp	/^int setup_zoltan(Zoltan &zz, int Proc, PROB_INFO_PTR prob,$/;"	f	typeref:typename:int
setupvmap	zoltan/phg/phg_tree.h	/^  int setupvmap;$/;"	m	struct:phg_timer_indices	typeref:typename:int
sfc_coarse_grid_path	zoltan/reftree/reftree_coarse_path.c	/^static int sfc_coarse_grid_path(int nobj, int *num_vert, ZOLTAN_ID_PTR vertices,$/;"	f	typeref:typename:int	file:
shared.o	zoltan/Makefile.in	/^shared.o: $(srcdir)\/rcb\/shared.c$/;"	t
shared.obj	zoltan/Makefile.in	/^shared.obj: $(srcdir)\/rcb\/shared.c$/;"	t
shared_vert	zoltan/reftree/reftree_coarse_path.c	/^static int ****shared_vert;$/;"	v	typeref:typename:int ****	file:
sharedstatedir	zoltan/Makefile.in	/^sharedstatedir = @sharedstatedir@$/;"	m
sharedstatedir	zoltan/driver/Makefile.in	/^sharedstatedir = @sharedstatedir@$/;"	m
sharedstatedir	zoltan/fdriver/Makefile.in	/^sharedstatedir = @sharedstatedir@$/;"	m
showMoveVol	zoltan/phg/phg_hypergraph.h	/^  int showMoveVol;          \/* compute and show move (migration) volume *\/$/;"	m	struct:Zoltan_HGraph	typeref:typename:int
showMoveVol	zoltan/tpls/third_library.h	/^  int showMoveVol;                      \/* How works the final output *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:int
show_edges	zoltan/phg/phg_verbose.c	/^void show_edges(char *s, ZZ *zz, int num_lists, int num_pins,$/;"	f	typeref:typename:void
side_id	zoltan/driver/dr_maps.c	/^  int      *side_id;$/;"	m	struct:map_list_head	typeref:typename:int *	file:
side_id	zoltan/driver/dr_mapsCPP.cpp	/^  int *side_id;$/;"	m	struct:map_list_head	typeref:typename:int *	file:
side_id	zoltan/fdriver/fdr_chaco_io.f90	/^  integer(Zoltan_INT), pointer :: side_id(/;"	k	type:map_list_head
sier2d	zoltan/reftree/reftree_coarse_path.c	/^static double sier2d(double x, double y, int state, int level, double addf,$/;"	f	typeref:typename:double	file:
sign	zoltan/rcb/inertial2d.c	/^#define sign(/;"	d	file:
sign	zoltan/rcb/inertial3d.c	/^#define sign(/;"	d	file:
sin_vertex	zoltan/reftree/reftree_build.c	/^static ZOLTAN_ID_PTR sin_vertex; \/* "in" vertex for each coarse element *\/$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
size	zoltan/Utilities/Memory/mem.c	/^    long size;   \/* Size of a single element in bytes    *\/$/;"	m	struct:Zoltan_Array_Alloc::dimension	typeref:typename:long	file:
size	zoltan/Utilities/Memory/mem.c	/^  size_t    size;			\/* size of malloc invocation *\/$/;"	m	struct:malloc_debug_data	typeref:typename:size_t	file:
size	zoltan/coloring/g2l_hash.h	/^    int   size;          \/* number of ids stored in the hash *\/$/;"	m	struct:G2L_Hash	typeref:typename:int
size	zoltan/driver/dr_compress_const.h	/^  ssize_t size;  \/* size & pos should be off_t, but because of their use *\/$/;"	m	struct:ZOLTAN_FILE_	typeref:typename:ssize_t
size	zoltan/phg/phg_lookup.h	/^  int           size;       \/* number of edges *\/$/;"	m	struct:_myEW	typeref:typename:int
size	zoltan/phg/phg_lookup.h	/^  int           size;      \/* number of vertices assigned to this process *\/$/;"	m	struct:_hshVtx	typeref:typename:int
size	zoltan/phg/phg_tree.h	/^  int size;$/;"	m	struct:Zoltan_PHG_Tree_	typeref:typename:int
sizeParts	zoltan/phg/phg_tree.h	/^  int *sizeParts;$/;"	m	struct:Zoltan_PHG_LB_Data_	typeref:typename:int *
sizeTag	zoltan/lb/low_mem_lb_migrate.c	/^static int ackTag = 10000, dataTag = 20000, sizeTag=30000;$/;"	v	typeref:typename:int	file:
sizes	zoltan/Utilities/Communication/comm.h	/^    int      *sizes;            \/* size of each item to send (if items vary) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
sizes_from	zoltan/Utilities/Communication/comm.h	/^    int      *sizes_from;       \/* size of each msg to recv (if items vary) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
sizes_to	zoltan/Utilities/Communication/comm.h	/^    int      *sizes_to;         \/* size of each msg to send (if items vary) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
slocal_gids	zoltan/reftree/reftree_build.c	/^static ZOLTAN_ID_PTR slocal_gids;  \/* coarse element Global IDs from user *\/$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
slocal_lids	zoltan/reftree/reftree_build.c	/^static ZOLTAN_ID_PTR slocal_lids;  \/* coarse element Local IDs from user *\/$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
snum_vert	zoltan/reftree/reftree_build.c	/^static int *snum_vert;         \/* number of vertices for each coarse element *\/$/;"	v	typeref:typename:int *	file:
sorder	zoltan/reftree/reftree_build.c	/^static int *sorder;            \/* order of the children *\/$/;"	v	typeref:typename:int *	file:
sort_and_compare_maps	zoltan/driver/dr_maps.c	/^static void sort_and_compare_maps($/;"	f	typeref:typename:void	file:
sort_and_compare_maps	zoltan/driver/dr_mapsCPP.cpp	/^static void sort_and_compare_maps($/;"	f	typeref:typename:void	file:
sout_vertex	zoltan/reftree/reftree_build.c	/^static ZOLTAN_ID_PTR sout_vertex; \/* "out" vertex for each coarse element *\/$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
space	zoltan/zz/zz_heap.h	/^   int    space;$/;"	m	struct:__anon5ef29df60108	typeref:typename:int
spec	zoltan/hier/hier.h	/^  zoltan_platform_specification *spec;   \/* levels based on network topology *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:zoltan_platform_specification *
speed	zoltan/matrix/zoltan_matrix.h	/^  SpeedOpt speed;$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:SpeedOpt
split_hypergraph	zoltan/phg/phg_rdivide.c	/^static int split_hypergraph (int *pins[2], HGraph *ohg, HGraph *nhg, $/;"	f	typeref:typename:int	file:
srcdir	zoltan/Makefile.in	/^srcdir = @srcdir@$/;"	m
srcdir	zoltan/driver/Makefile.in	/^srcdir = @srcdir@$/;"	m
srcdir	zoltan/fdriver/Makefile.in	/^srcdir = @srcdir@$/;"	m
ss_to_node_list	zoltan/driver/dr_elem.c	/^int ss_to_node_list(const E_Type etype, const ZOLTAN_ID_TYPE *connect, int side_num,$/;"	f	typeref:typename:int
ssize	zoltan/reftree/reftree_build.c	/^static int ssize;$/;"	v	typeref:typename:int	file:
ssize_t	zoltan/include/zoltan_types.h	/^typedef SSIZE_T ssize_t;$/;"	t	typeref:typename:SSIZE_T
start	zoltan/order/order_const.h	/^  int *start;                   \/* Out: start[i] is the first vertex of block i *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
start	zoltan/tpls/third_library_const.h	/^  indextype *start;                   \/* Out: start[i] is the first vertex of block i *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
start_index	zoltan/order/order_const.h	/^  int  start_index;$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int
start_index	zoltan/order/order_const.h	/^  int start_index;		\/* In: Permutations start at 0 or 1? *\/$/;"	m	struct:Zoltan_Order_Options	typeref:typename:int
start_index	zoltan/tpls/third_library.h	/^  indextype start_index;$/;"	m	struct:ZOLTAN_Output_Order_	typeref:typename:indextype
start_index	zoltan/tpls/third_library_const.h	/^  indextype  start_index;$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype
starts_from	zoltan/Utilities/Communication/comm.h	/^    int      *starts_from;	\/* where in item lists each recv starts *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
starts_from_ptr	zoltan/Utilities/Communication/comm.h	/^    int      *starts_from_ptr;	\/* where in dense each recv starts *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
starts_to	zoltan/Utilities/Communication/comm.h	/^    int      *starts_to;	\/* where in item lists each send starts *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
starts_to_ptr	zoltan/Utilities/Communication/comm.h	/^    int      *starts_to_ptr;	\/* where in dense array sends starts *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int *
state2d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const int state2d[] = \/* nkey to 2 dimension state transitions *\/$/;"	v	typeref:typename:unsigned const int[]
state3d	zoltan/hsfc/hsfc_hilbert_const.h	/^static unsigned const state3d [] = { \/* nkey to 3 dimension state transitions *\/$/;"	v	typeref:typename:unsigned const[]
status	zoltan/Utilities/Communication/comm.h	/^    MPI_Status *status;		\/* MPI status for those recvs *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:MPI_Status *
stderr	zoltan/fdriver/fdr_param_file.f90	/^integer, parameter :: stderr /;"	v	module:dr_param_file
stderr	zoltan/fort/fwrap.f90	/^integer, parameter :: stderr /;"	v	module:zoltan
stdout	zoltan/fdriver/fdr_param_file.f90	/^integer, parameter :: stderr = 0, stdout /;"	v	module:dr_param_file
str	zoltan/fdriver/fdr_const.f90	/^   character(len=MAX_PARAMETER_LEN) :: str(/;"	k	type:Parameter_Pair
strcasecmp	zoltan/Utilities/shared/zoltan_util.h	/^#define strcasecmp /;"	d
strcasecmp	zoltan/driver/dr_const.h	/^#define strcasecmp /;"	d
strcmp	zoltan/Utilities/shared/zoltan_util.h	/^#define strcmp /;"	d
strcmp	zoltan/driver/dr_const.h	/^#define strcmp /;"	d
string_to_lower	zoltan/driver/dr_util.c	/^void string_to_lower(char in_string[], const char cval)$/;"	f	typeref:typename:void
strip_string	zoltan/driver/dr_util.c	/^void strip_string(char inp_str[], const char *tokens)$/;"	f	typeref:typename:void
strm	zoltan/driver/dr_compress_const.h	/^  } strm ;$/;"	m	struct:ZOLTAN_FILE_	typeref:union:ZOLTAN_FILE_::__anon279889e4010a
strncasecmp	zoltan/Utilities/shared/zoltan_util.h	/^#define strncasecmp /;"	d
strncasecmp	zoltan/driver/dr_const.h	/^#define strncasecmp /;"	d
strncmp	zoltan/Utilities/shared/zoltan_util.h	/^#define strncmp /;"	d
strncmp	zoltan/driver/dr_const.h	/^#define strncmp /;"	d
subdir	zoltan/Makefile.in	/^subdir = src$/;"	m
subdir	zoltan/driver/Makefile.in	/^subdir = src\/driver$/;"	m
subdir	zoltan/fdriver/Makefile.in	/^subdir = src\/fdriver$/;"	m
summed_weight	zoltan/reftree/reftree.h	/^   float *summed_weight; \/* sum of the weights in the subtree rooted at$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:float *
sval	zoltan/params/params_const.h	/^  char sval[MAX_PARAM_STRING_LEN];$/;"	m	struct:Param_Utype	typeref:typename:char[]
svert1	zoltan/reftree/reftree_build.c	/^static int *svert1;        \/* array containing the first vertex for each child*\/$/;"	v	typeref:typename:int *	file:
svertices	zoltan/reftree/reftree_build.c	/^static ZOLTAN_ID_PTR svertices; \/* vertices for the coarse elements *\/$/;"	v	typeref:typename:ZOLTAN_ID_PTR	file:
symb	zoltan/matlab/plotcolors.m	/^       symb = '.';$/;"	v
symb	zoltan/matlab/plotcolors.m	/^       symb = 'o';$/;"	v
symb	zoltan/matlab/plotcolors.m	/^    symb = '.';$/;"	v
symm	zoltan/matlab/mmread.m	/^symm  = lower(symm);$/;"	v
symm	zoltan/matlab/mmwrite.m	/^          symm = 'general';$/;"	v
symm	zoltan/matlab/mmwrite.m	/^          symm = 'hermitian';$/;"	v
symm	zoltan/matlab/mmwrite.m	/^        symm = 'general';$/;"	v
symm	zoltan/matlab/mmwrite.m	/^        symm = 'skew-symmetric';$/;"	v
symm	zoltan/matlab/mmwrite.m	/^      symm = 'symmetric';$/;"	v
symm	zoltan/matlab/mmwrite.m	/^    symm = 'general';$/;"	v
symmetrize	zoltan/matrix/zoltan_matrix.h	/^  int symmetrize;              \/* What kind of symmetry we have to apply, not used yet *\/$/;"	m	struct:Zoltan_matrix_options_	typeref:typename:int
sysconfdir	zoltan/Makefile.in	/^sysconfdir = @sysconfdir@$/;"	m
sysconfdir	zoltan/driver/Makefile.in	/^sysconfdir = @sysconfdir@$/;"	m
sysconfdir	zoltan/fdriver/Makefile.in	/^sysconfdir = @sysconfdir@$/;"	m
table	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  DD_NodeIdx table[1];    \/* Hash table heads of the link lists     *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:DD_NodeIdx[1]
table	zoltan/coloring/g2l_hash.h	/^    G2LHashNode **table;$/;"	m	struct:G2L_Hash	typeref:typename:G2LHashNode **
table_length	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int table_length;       \/* # of heads of linked lists             *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
table_size	zoltan/phg/phg_lookup.h	/^  int table_size;$/;"	m	struct:_GID_lookup	typeref:typename:int
tagVCycle	zoltan/phg/phg_Vcycle.c	/^typedef struct tagVCycle {$/;"	s	file:
tags	zoltan/Makefile.in	/^tags: TAGS$/;"	t
tags	zoltan/driver/Makefile.in	/^tags: TAGS$/;"	t
tags	zoltan/fdriver/Makefile.in	/^tags: TAGS$/;"	t
tags-recursive	zoltan/Makefile.in	/^tags-recursive:$/;"	t
target	zoltan/Makefile.in	/^target = @target@$/;"	m
target	zoltan/driver/Makefile.in	/^target = @target@$/;"	m
target	zoltan/fdriver/Makefile.in	/^target = @target@$/;"	m
target_alias	zoltan/Makefile.in	/^target_alias = @target_alias@$/;"	m
target_alias	zoltan/driver/Makefile.in	/^target_alias = @target_alias@$/;"	m
target_alias	zoltan/fdriver/Makefile.in	/^target_alias = @target_alias@$/;"	m
target_cpu	zoltan/Makefile.in	/^target_cpu = @target_cpu@$/;"	m
target_cpu	zoltan/driver/Makefile.in	/^target_cpu = @target_cpu@$/;"	m
target_cpu	zoltan/fdriver/Makefile.in	/^target_cpu = @target_cpu@$/;"	m
target_os	zoltan/Makefile.in	/^target_os = @target_os@$/;"	m
target_os	zoltan/driver/Makefile.in	/^target_os = @target_os@$/;"	m
target_os	zoltan/fdriver/Makefile.in	/^target_os = @target_os@$/;"	m
target_triplet	zoltan/Makefile.in	/^target_triplet = @target@$/;"	m
target_triplet	zoltan/driver/Makefile.in	/^target_triplet = @target@$/;"	m
target_triplet	zoltan/fdriver/Makefile.in	/^target_triplet = @target@$/;"	m
target_vendor	zoltan/Makefile.in	/^target_vendor = @target_vendor@$/;"	m
target_vendor	zoltan/driver/Makefile.in	/^target_vendor = @target_vendor@$/;"	m
target_vendor	zoltan/fdriver/Makefile.in	/^target_vendor = @target_vendor@$/;"	m
tempInt	zoltan/par/par_median_randomized.c	/^static int tempInt;$/;"	v	typeref:typename:int	file:
tempVal	zoltan/par/par_median_randomized.c	/^static double tempVal;$/;"	v	typeref:typename:double	file:
test_box_drops	zoltan/driver/dr_loadbal.c	/^static void test_box_drops($/;"	f	typeref:typename:void	file:
test_box_drops	zoltan/driver/dr_loadbalCPP.cpp	/^static void test_box_drops($/;"	f	typeref:typename:void	file:
test_box_drops	zoltan/fdriver/fdr_loadbal.f90	/^subroutine test_box_drops(/;"	s	module:dr_loadbal
test_candidate	zoltan/par/par_median_randomized.c	/^static int test_candidate(int *numlist, int *dotlist, double *dots, int *dotmark, $/;"	f	typeref:typename:int	file:
test_drops	zoltan/driver/dr_loadbal.c	/^static void test_drops($/;"	f	typeref:typename:void	file:
test_drops	zoltan/driver/dr_loadbalCPP.cpp	/^static void test_drops($/;"	f	typeref:typename:void	file:
test_drops_rtn	zoltan/fdriver/fdr_loadbal.f90	/^subroutine test_drops_rtn(/;"	s	module:dr_loadbal
test_point_drops	zoltan/driver/dr_loadbal.c	/^static void test_point_drops($/;"	f	typeref:typename:void	file:
test_point_drops	zoltan/driver/dr_loadbalCPP.cpp	/^static void test_point_drops($/;"	f	typeref:typename:void	file:
test_point_drops	zoltan/fdriver/fdr_loadbal.f90	/^subroutine test_point_drops(/;"	s	module:dr_loadbal
third_library.o	zoltan/Makefile.in	/^third_library.o: $(srcdir)\/tpls\/third_library.c$/;"	t
third_library.obj	zoltan/Makefile.in	/^third_library.obj: $(srcdir)\/tpls\/third_library.c$/;"	t
timer	zoltan/phg/phg_Vcycle.c	/^    struct Zoltan_Timer *timer;   \/* timer for this level of the V-cycle *\/$/;"	m	struct:tagVCycle	typeref:struct:Zoltan_Timer *	file:
timer.o	zoltan/Makefile.in	/^timer.o: $(srcdir)\/Utilities\/Timer\/timer.c$/;"	t
timer.obj	zoltan/Makefile.in	/^timer.obj: $(srcdir)\/Utilities\/Timer\/timer.c$/;"	t
timer_coarse	zoltan/phg/phg_Vcycle.c	/^    int timer_coarse;             \/* Declared static so we can accumulate *\/$/;"	m	struct:tagVCycle	typeref:typename:int	file:
timer_match	zoltan/phg/phg_Vcycle.c	/^    int timer_match;              \/* Timers for various stages *\/$/;"	m	struct:tagVCycle	typeref:typename:int	file:
timer_params.o	zoltan/Makefile.in	/^timer_params.o: $(srcdir)\/timer\/timer_params.c$/;"	t
timer_params.obj	zoltan/Makefile.in	/^timer_params.obj: $(srcdir)\/timer\/timer_params.c$/;"	t
timer_project	zoltan/phg/phg_Vcycle.c	/^    int timer_project;$/;"	m	struct:tagVCycle	typeref:typename:int	file:
timer_refine	zoltan/phg/phg_Vcycle.c	/^    int timer_refine;             \/* times over calls to Zoltan_PHG_Partition *\/$/;"	m	struct:tagVCycle	typeref:typename:int	file:
timers	zoltan/phg/phg_tree.h	/^  struct phg_timer_indices * timers;$/;"	m	struct:Zoltan_PHG_LB_Data_	typeref:struct:phg_timer_indices *
tmpi	zoltan/matlab/mmread.m	/^      tmpi = fscanf(mmfile,'%f',1);$/;"	v
tmpi	zoltan/matlab/mmread.m	/^    tmpi = fscanf(mmfile,'%f',1);$/;"	v
tmpr	zoltan/matlab/mmread.m	/^      tmpr = fscanf(mmfile,'%f',1);$/;"	v
tmpr	zoltan/matlab/mmread.m	/^    tmpr = fscanf(mmfile,'%f',1);$/;"	v
to_add	zoltan/reftree/reftree_coarse_path.c	/^static int **to_add;$/;"	v	typeref:typename:int **	file:
to_add_dim	zoltan/reftree/reftree_coarse_path.c	/^static int *to_add_dim;$/;"	v	typeref:typename:int *	file:
to_add_ptr	zoltan/reftree/reftree_coarse_path.c	/^static int *to_add_ptr;$/;"	v	typeref:typename:int *	file:
token_compare	zoltan/driver/dr_util.c	/^int token_compare(char *token, const char *key)$/;"	f	typeref:typename:int
top	zoltan/Utilities/Memory/mem.c	/^} *top = NULL;$/;"	v	typeref:struct:malloc_debug_data *
top	zoltan/zz/zz_util_const.h	/^  ZOLTAN_ENTRY *top;      \/* if dynamicEntries==0, entries are here *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:ZOLTAN_ENTRY *
top_build_prefix	zoltan/Makefile.in	/^top_build_prefix = @top_build_prefix@$/;"	m
top_build_prefix	zoltan/driver/Makefile.in	/^top_build_prefix = @top_build_prefix@$/;"	m
top_build_prefix	zoltan/fdriver/Makefile.in	/^top_build_prefix = @top_build_prefix@$/;"	m
top_builddir	zoltan/Makefile.in	/^top_builddir = @top_builddir@$/;"	m
top_builddir	zoltan/driver/Makefile.in	/^top_builddir = @top_builddir@$/;"	m
top_builddir	zoltan/fdriver/Makefile.in	/^top_builddir = @top_builddir@$/;"	m
top_id	zoltan/zz/zz_const.h	/^  int top_id;          \/* See `topology types' defined below *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int
top_srcdir	zoltan/Makefile.in	/^top_srcdir = @top_srcdir@$/;"	m
top_srcdir	zoltan/driver/Makefile.in	/^top_srcdir = @top_srcdir@$/;"	m
top_srcdir	zoltan/fdriver/Makefile.in	/^top_srcdir = @top_srcdir@$/;"	m
total	zoltan/Utilities/Memory/mem.c	/^    long total;  \/* Total number of elements             *\/$/;"	m	struct:Zoltan_Array_Alloc::dimension	typeref:typename:long	file:
total_	zoltan/Utilities/DDirectory/DD_Set_Neighbor_Hash_Fn3.c	/^  int total_;};$/;"	m	struct:dd_nh3_struct	typeref:typename:int	file:
total_recv_size	zoltan/Utilities/Communication/comm.h	/^    int       total_recv_size;	\/* total amount of data I'll recv (w\/ self) *\/$/;"	m	struct:Zoltan_Comm_Obj	typeref:typename:int
totalhi	zoltan/par/par_bisect.c	/^  double  totalhi[MAX_BISECT_WGTS]; \/* weight in upper half of active partition *\/$/;"	m	struct:bisector	typeref:typename:double[]	file:
totalhi	zoltan/par/par_median.c	/^  double    totallo, totalhi;   \/* weight in each half of active partition *\/$/;"	m	struct:median	typeref:typename:double	file:
totalhi	zoltan/rcb/rcb.h	/^  double    totallo, totalhi;   \/* weight in each half of active partition *\/$/;"	m	struct:rcb_median	typeref:typename:double
totallo	zoltan/par/par_bisect.c	/^  double  totallo[MAX_BISECT_WGTS]; \/* weight in lower half of active partition *\/$/;"	m	struct:bisector	typeref:typename:double[]	file:
totallo	zoltan/par/par_median.c	/^  double    totallo, totalhi;   \/* weight in each half of active partition *\/$/;"	m	struct:median	typeref:typename:double	file:
totallo	zoltan/rcb/rcb.h	/^  double    totallo, totalhi;   \/* weight in each half of active partition *\/$/;"	m	struct:rcb_median	typeref:typename:double
trace	zoltan/zz/zz_back_trace.c	/^static char trace[TRACE_SIZE][TRACE_STRING_LENGTH];$/;"	v	typeref:typename:char[][]	file:
trace_base	zoltan/zz/zz_back_trace.c	/^static int trace_base=-1;$/;"	v	typeref:typename:int	file:
trace_top	zoltan/zz/zz_back_trace.c	/^static int trace_top=-1;$/;"	v	typeref:typename:int	file:
tran	zoltan/hsfc/hsfc.h	/^   ZZ_Transform tran;            \/* transformation for degenerate geometry *\/$/;"	m	struct:HSFC_Data	typeref:typename:ZZ_Transform
transform	zoltan/Makefile.in	/^transform = $(program_transform_name)$/;"	m
transform	zoltan/driver/Makefile.in	/^transform = $(program_transform_name)$/;"	m
transform	zoltan/fdriver/Makefile.in	/^transform = $(program_transform_name)$/;"	m
transform_coordinates	zoltan/zz/zz_coord.c	/^static void transform_coordinates(double *coords, int num_obj, int d,$/;"	f	typeref:typename:void	file:
tree	zoltan/phg/phg_tree.h	/^  Zoltan_PHG_Tree * tree;$/;"	m	struct:Zoltan_PHG_LB_Data_	typeref:typename:Zoltan_PHG_Tree *
triplet	zoltan/phg/phg_match.c	/^typedef struct triplet {$/;"	s	file:
try_adding_all	zoltan/reftree/reftree_coarse_path.c	/^static int try_adding_all(int *ierr, ZZ *zz)$/;"	f	typeref:typename:int	file:
turn_off_reduce_dimensions	zoltan/zz/zz_gen_files.c	/^static int turn_off_reduce_dimensions(ZZ *zz)$/;"	f	typeref:typename:int	file:
type	zoltan/driver/dr_compress_const.h	/^  ZOLTAN_FILETYPE type;$/;"	m	struct:ZOLTAN_FILE_	typeref:typename:ZOLTAN_FILETYPE
type	zoltan/params/params_const.h	/^  char *type;			\/* type of parameter: *\/$/;"	m	struct:Param_Vars	typeref:typename:char *
type	zoltan/zz/zz_const.h	/^  int *type;            \/* type[i] is the `node type pointer' of subnode i *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int *
uMe	zoltan/phg/phg_util.h	/^#define uMe /;"	d
uniformWeight	zoltan/rcb/shared.h	/^  double uniformWeight;      \/* if non-zero, then Weight is NULL and all weights are the same */;"	m	struct:Dot_Struct	typeref:typename:double
uninstall	zoltan/Makefile.in	/^uninstall: uninstall-recursive$/;"	t
uninstall	zoltan/driver/Makefile.in	/^uninstall: uninstall-am$/;"	t
uninstall	zoltan/fdriver/Makefile.in	/^uninstall: uninstall-am$/;"	t
uninstall-am	zoltan/Makefile.in	/^uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES \\$/;"	t
uninstall-am	zoltan/driver/Makefile.in	/^uninstall-am:$/;"	t
uninstall-am	zoltan/fdriver/Makefile.in	/^uninstall-am:$/;"	t
uninstall-includeHEADERS	zoltan/Makefile.in	/^uninstall-includeHEADERS:$/;"	t
uninstall-libLIBRARIES	zoltan/Makefile.in	/^uninstall-libLIBRARIES:$/;"	t
uninstall-nodist_execincludeHEADERS	zoltan/Makefile.in	/^uninstall-nodist_execincludeHEADERS:$/;"	t
update_elem_dd	zoltan/driver/dr_dd.c	/^int update_elem_dd(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:int
update_elem_dd	zoltan/driver/dr_ddCPP.cpp	/^int update_elem_dd(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:int
update_hvertex_proc	zoltan/driver/dr_dd.c	/^int update_hvertex_proc(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:int
update_hvertex_proc	zoltan/driver/dr_ddCPP.cpp	/^int update_hvertex_proc(MESH_INFO_PTR mesh)$/;"	f	typeref:typename:int
update_msg_size	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  size_t update_msg_size; \/* Total allocation for DD_UPDATE_MSG     *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:size_t
uprintf	zoltan/phg/phg_util.h	/^#define uprintf /;"	d
useMultilevel	zoltan/phg/phg.h	/^  int useMultilevel;             \/* Flag indicating whether to use multilevel$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
use_geom	zoltan/hier/hier.h	/^  int use_geom, use_graph;           \/* flags for whether methods to be$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
use_graph	zoltan/hier/hier.h	/^  int use_geom, use_graph;           \/* flags for whether methods to be$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
use_order_info	zoltan/order/order_const.h	/^  int use_order_info;		\/* In: Put order info into ZOS? *\/$/;"	m	struct:Zoltan_Order_Options	typeref:typename:int
use_timers	zoltan/hier/hier.h	/^  int use_timers;                    \/* control degree of timing done with hier*\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int
use_timers	zoltan/phg/phg.h	/^  int use_timers;       \/* Flag indicating whether to time the PHG code. *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
used	zoltan/zz/zz_util_const.h	/^  int used;             \/* 1 - this map is being used, 0 - it's free *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:int
user_data_length	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^  int user_data_length;   \/* Optional user data length in chars *\/$/;"	m	struct:Zoltan_DD_Struct	typeref:typename:int
user_flag	zoltan/Utilities/DDirectory/zoltan_dd_const.h	/^   char user_flag;         \/* indicates if USER data are present           *\/$/;"	m	struct:__anonc14baf7a0108	typeref:typename:char
v	zoltan/driver/dr_mm_readfile.c	/^  float v;$/;"	m	struct:ijv	typeref:typename:float	file:
val	zoltan/phg/phg_serialpartition.c	/^  float val;$/;"	m	struct:pick_best::__anon2e47d5030108	typeref:typename:float	file:
val	zoltan/phg/phg_util.c	/^  int val;$/;"	m	struct:Zoltan_PHG_Find_Root::__anon08db67e70108	typeref:typename:int	file:
value	zoltan/driver/dr_param_file.c	/^  char value[MAX_PARAM_STRING_LEN];$/;"	m	struct:zoltanParams_list_entry	typeref:typename:char[]	file:
value	zoltan/driver/dr_param_fileCPP.cpp	/^  char *value;$/;"	m	struct:zoltanParams_list_entry	typeref:typename:char *	file:
value	zoltan/fdriver/fdr_param_file.f90	/^   character(len=MAX_CHAR_LEN) :: value$/;"	k	type:ztnPrm_list_entry
value	zoltan/zz/zz_heap.h	/^   float *value;$/;"	m	struct:__anon5ef29df60108	typeref:typename:float *
valuehi	zoltan/par/par_bisect.c	/^  double    valuelo, valuehi;   \/* position of dot(s) nearest to cut *\/$/;"	m	struct:bisector	typeref:typename:double	file:
valuehi	zoltan/par/par_median.c	/^  double    valuelo, valuehi;   \/* position of dot(s) nearest to cut *\/$/;"	m	struct:median	typeref:typename:double	file:
valuehi	zoltan/rcb/rcb.h	/^  double    valuelo, valuehi;	\/* position of dot(s) nearest to cut *\/$/;"	m	struct:rcb_median	typeref:typename:double
valuelo	zoltan/par/par_bisect.c	/^  double    valuelo, valuehi;   \/* position of dot(s) nearest to cut *\/$/;"	m	struct:bisector	typeref:typename:double	file:
valuelo	zoltan/par/par_median.c	/^  double    valuelo, valuehi;   \/* position of dot(s) nearest to cut *\/$/;"	m	struct:median	typeref:typename:double	file:
valuelo	zoltan/rcb/rcb.h	/^  double    valuelo, valuehi;	\/* position of dot(s) nearest to cut *\/$/;"	m	struct:rcb_median	typeref:typename:double
values	zoltan/coloring/bucket.h	/^    int              *values; \/* needed for update, incase bucket head$/;"	m	struct:arg	typeref:typename:int *
vcycle	zoltan/phg/phg_tree.h	/^  int vcycle;    \/* Vcycle time *\/$/;"	m	struct:phg_timer_indices	typeref:typename:int
vdest	zoltan/phg/phg_Vcycle.c	/^    int              *vdest;      \/* necessary to unredistribute             *\/$/;"	m	struct:tagVCycle	typeref:typename:int *	file:
vedge	zoltan/phg/phg_hypergraph.h	/^  int *vedge;       \/* length nPins array containing associated hyperedges *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
verify_graph.o	zoltan/Makefile.in	/^verify_graph.o: $(srcdir)\/tpls\/verify_graph.c$/;"	t
verify_graph.obj	zoltan/Makefile.in	/^verify_graph.obj: $(srcdir)\/tpls\/verify_graph.c$/;"	t
version	zoltan/fdriver/fdr_main.f90	/^  real(Zoltan_FLOAT) :: version$/;"	v	program:fdriver
vertex_gid	zoltan/reftree/reftree_coarse_path.c	/^ZOLTAN_ID_PTR vertex_gid;$/;"	v	typeref:typename:ZOLTAN_ID_PTR
vertex_global_ids	zoltan/driver/dr_random_io.c	/^static ZOLTAN_ID_TYPE *vertex_global_ids=NULL;$/;"	v	typeref:typename:ZOLTAN_ID_TYPE *	file:
vertex_swap	zoltan/reftree/reftree_coarse_path.c	/^static int vertex_swap(int *ierr, ZZ *zz)$/;"	f	typeref:typename:int	file:
vertices	zoltan/reftree/reftree.h	/^   ZOLTAN_ID_PTR vertices; \/* the vertices of the corresponding element;$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:ZOLTAN_ID_PTR
view_hierarchy_specification	zoltan/hier/hier.c	/^static void view_hierarchy_specification($/;"	f	typeref:typename:void	file:
vindex	zoltan/phg/phg_hypergraph.h	/^  int *vindex;      \/* length nVtx+1 index into vedge, last is nPins *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
visible_nvtx	zoltan/driver/dr_const.h	/^  ZOLTAN_ID_TYPE  visible_nvtx;          \/* #vertices to use, may be < num_elems *\/$/;"	m	struct:Mesh_Description	typeref:typename:ZOLTAN_ID_TYPE
visit_order	zoltan/phg/phg.h	/^  int visit_order;      \/* Vertex visit order. *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
visited	zoltan/reftree/reftree_coarse_path.c	/^static int *visited;$/;"	v	typeref:typename:int *	file:
vlno	zoltan/phg/phg_Vcycle.c	/^    int              *vlno;       \/* vlno size = hg->nVtx $/;"	m	struct:tagVCycle	typeref:typename:int *	file:
vmap	zoltan/phg/phg_hypergraph.h	/^  int *vmap;        \/* used when recursively dividing for p > 2 *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:int *
vsize	zoltan/tpls/third_library.h	/^  indextype *vsize;$/;"	m	struct:ZOLTAN_Third_Vsize_	typeref:typename:indextype *
vsizeBACKUP	zoltan/tpls/third_library.h	/^  indextype *vsizeBACKUP;$/;"	m	struct:ZOLTAN_Third_Vsize_	typeref:typename:indextype *
vsize_malloc	zoltan/tpls/third_library.h	/^  int vsize_malloc;$/;"	m	struct:ZOLTAN_Third_Vsize_	typeref:typename:int
vt_handle	zoltan/Utilities/Timer/zoltan_timer.c	/^  int vt_handle;          \/* state handle for vampir traces *\/$/;"	m	struct:TimeStruct	typeref:typename:int	file:
vtxGID	zoltan/phg/phg_lookup.h	/^  ZOLTAN_ID_PTR vtxGID;    \/* vertex global IDs  *\/$/;"	m	struct:_hshVtx	typeref:typename:ZOLTAN_ID_PTR
vtxGNO	zoltan/phg/phg_lookup.h	/^  ZOLTAN_GNO_TYPE *vtxGNO;   \/* vertex global number *\/$/;"	m	struct:_hshVtx	typeref:typename:ZOLTAN_GNO_TYPE *
vtxHash	zoltan/phg/phg_lookup.h	/^  int    *vtxHash;      \/* Process to which GID hashes, temporary owner *\/$/;"	m	struct:_myObj	typeref:typename:int *
vtxOwner	zoltan/phg/phg_lookup.h	/^  int           *vtxOwner; \/* process that returned vtx in Get_Obj_List  *\/$/;"	m	struct:_hshVtx	typeref:typename:int *
vtx_scal	zoltan/phg/phg.h	/^  float *vtx_scal;                     \/* vtx scaling array *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:float *
vtx_scal_size	zoltan/phg/phg.h	/^  int vtx_scal_size;                   \/* size of vtx_scal array *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
vtx_scaling	zoltan/phg/phg.h	/^  int vtx_scaling;               \/* type of vertex scaling for inner product *\/$/;"	m	struct:PHGPartParamsStruct	typeref:typename:int
vtxdist	zoltan/order/order_const.h	/^  int *vtxdist;                 \/* How vertices are distributed accross processors *\/$/;"	m	struct:Zoltan_Order_Struct	typeref:typename:int *
vtxdist	zoltan/tpls/third_library.h	/^  indextype *vtxdist;                   \/* How vertices are distributed *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:indextype *
vtxdist	zoltan/tpls/third_library_const.h	/^  indextype *vtxdist;                 \/* How vertices are distributed accross processors *\/$/;"	m	struct:Zoltan_TPL_Order_Struct	typeref:typename:indextype *
vwgt	zoltan/hier/hier.h	/^  float *vwgt;                       \/* vector of vertex weights *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:float *
vwgt	zoltan/phg/phg_hypergraph.h	/^  float *vwgt;    \/* weights of vertices, nVtx long by VtxWeightDim *\/$/;"	m	struct:__anon371c30e80108	typeref:typename:float *
vwgt	zoltan/tpls/third_library.h	/^  weighttype * vwgt;                    \/* Array of vertex weights *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:weighttype *
vwgt_dim	zoltan/driver/dr_const.h	/^  int     vwgt_dim;             \/* number of weights per element.            *\/$/;"	m	struct:Mesh_Description	typeref:typename:int
weight	zoltan/hsfc/hsfc.h	/^   float weight;        \/* scalar computed from weight vector     *\/$/;"	m	struct:Dots	typeref:typename:float
weight	zoltan/reftree/reftree.h	/^   float *weight;        \/* weight of the node; dimension Obj_Weight_Dim *\/$/;"	m	struct:Zoltan_Reftree_Struct	typeref:typename:float *
weighttype	zoltan/tpls/third_library_const.h	/^    #define weighttype /;"	d
weighttype	zoltan/tpls/third_library_const.h	/^  #define weighttype /;"	d
wgt	zoltan/phg/phg_lookup.h	/^  float         *wgt;       \/* weights supplied by query function for edge *\/$/;"	m	struct:_myEW	typeref:typename:float *
wgtFctAdd	zoltan/matrix/matrix_operations.c	/^wgtFctAdd(float* current, float* new, int dim)$/;"	f	typeref:typename:int	file:
wgtFctCmp	zoltan/matrix/matrix_operations.c	/^wgtFctCmp(float* current, float* new, int dim)$/;"	f	typeref:typename:int	file:
wgtFctMax	zoltan/matrix/matrix_operations.c	/^wgtFctMax(float* current, float* new, int dim)$/;"	f	typeref:typename:int	file:
word	zoltan/matlab/zoltPartSpy.m	/^    word = fscanf(fp,'%s',1);$/;"	v
word	zoltan/matlab/zoltPartSpy.m	/^  word = 'abc';$/;"	v
word	zoltan/matlab/zoltan.m	/^  word = fscanf(fp,'%s',1);$/;"	v
word	zoltan/matlab/zoltan.m	/^word = 'abc';$/;"	v
wrap_around	zoltan/zz/zz_const.h	/^  int wrap_around[3];  \/* Wrap around in each dimension? (y\/n) *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int[3]
write_elem_vars	zoltan/driver/dr_exoII_io.c	/^int write_elem_vars($/;"	f	typeref:typename:int
write_elem_vars	zoltan/driver/dr_exoII_ioCPP.cpp	/^int write_elem_vars($/;"	f	typeref:typename:int
wthi	zoltan/par/par_bisect.c	/^  double  wthi[MAX_BISECT_WGTS];    \/* total weight of dot(s) on hi boundary *\/$/;"	m	struct:bisector	typeref:typename:double[]	file:
wthi	zoltan/par/par_median.c	/^  double    wtlo, wthi;         \/* total weight of dot(s) at that position *\/$/;"	m	struct:median	typeref:typename:double	file:
wthi	zoltan/rcb/rcb.h	/^  double    wtlo, wthi;         \/* total weight of dot(s) at that position *\/$/;"	m	struct:rcb_median	typeref:typename:double
wtlo	zoltan/par/par_bisect.c	/^  double  wtlo[MAX_BISECT_WGTS];    \/* total weight of dot(s) on lo boundary *\/$/;"	m	struct:bisector	typeref:typename:double[]	file:
wtlo	zoltan/par/par_median.c	/^  double    wtlo, wthi;         \/* total weight of dot(s) at that position *\/$/;"	m	struct:median	typeref:typename:double	file:
wtlo	zoltan/rcb/rcb.h	/^  double    wtlo, wthi;         \/* total weight of dot(s) at that position *\/$/;"	m	struct:rcb_median	typeref:typename:double
x	zoltan/hsfc/hsfc.h	/^   double x[3];         \/* dots coordinates in problem domain     *\/$/;"	m	struct:Dots	typeref:typename:double[3]
xadj	zoltan/hier/hier.h	/^  int *xadj;                         \/* intermediate graph structure storage *\/$/;"	m	struct:HierPartParamsStruct	typeref:typename:int *
xadj	zoltan/tpls/third_library.h	/^  indextype * xadj;                     \/* Indexes on adjency array *\/$/;"	m	struct:ZOLTAN_Third_Graph_	typeref:typename:indextype *
xadj	zoltan/zz/zz_const.h	/^  int *xadj;           \/* pointer to link list *\/$/;"	m	struct:__anond4a4c99f0108	typeref:typename:int *
xtra_cut_wgt	zoltan/include/zoltan_eval.h	/^  float xtra_cut_wgt[EVAL_MAX_XTRA_EWGTS][EVAL_SIZE];$/;"	m	struct:_eval_graph_struct	typeref:typename:float[][]
xtra_imbalance	zoltan/include/zoltan_eval.h	/^  float xtra_imbalance[EVAL_MAX_XTRA_VWGTS];$/;"	m	struct:_eval_balance_struct	typeref:typename:float[]
xtra_imbalance	zoltan/include/zoltan_eval.h	/^  float xtra_imbalance[EVAL_MAX_XTRA_VWGTS];$/;"	m	struct:_eval_graph_struct	typeref:typename:float[]
xtra_imbalance	zoltan/include/zoltan_eval.h	/^  float xtra_imbalance[EVAL_MAX_XTRA_VWGTS];$/;"	m	struct:_eval_hg_struct	typeref:typename:float[]
xtra_obj_wgt	zoltan/include/zoltan_eval.h	/^  float xtra_obj_wgt[EVAL_MAX_XTRA_VWGTS][EVAL_SIZE];$/;"	m	struct:_eval_balance_struct	typeref:typename:float[][]
xtra_obj_wgt	zoltan/include/zoltan_eval.h	/^  float xtra_obj_wgt[EVAL_MAX_XTRA_VWGTS][EVAL_SIZE];$/;"	m	struct:_eval_graph_struct	typeref:typename:float[][]
xtra_obj_wgt	zoltan/include/zoltan_eval.h	/^  float xtra_obj_wgt[EVAL_MAX_XTRA_VWGTS][EVAL_SIZE];$/;"	m	struct:_eval_hg_struct	typeref:typename:float[][]
xyz	zoltan/tpls/third_library.h	/^  realtype *xyz;                        \/* Coordinates *\/$/;"	m	struct:ZOLTAN_Third_Geom_	typeref:typename:realtype *
yGID	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_ID_PTR yGID;           \/* Local Y GID *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:ZOLTAN_ID_PTR
yGNO	zoltan/matrix/zoltan_matrix.h	/^  ZOLTAN_GNO_TYPE  *yGNO;       \/* Local edges gnos *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:ZOLTAN_GNO_TYPE *
ybipart	zoltan/matrix/zoltan_matrix.h	/^  int *ybipart;$/;"	m	struct:Zoltan_matrix_	typeref:typename:int *
yend	zoltan/matrix/zoltan_matrix.h	/^  int          *yend;          \/* end of local pins, usually ystart+1$/;"	m	struct:Zoltan_matrix_	typeref:typename:int *
ypid	zoltan/matrix/zoltan_matrix.h	/^  int *ypid;           \/* Initial processor *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int *
ystart	zoltan/matrix/zoltan_matrix.h	/^  int          *ystart;        \/* Indirection array to describe a column *\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int *
ywgtdim	zoltan/matrix/zoltan_matrix.h	/^  int           ywgtdim;       \/* Wgt dimensions for Y  TODO: where are the weights*\/$/;"	m	struct:Zoltan_matrix_	typeref:typename:int
zCPPdrive$(EXEEXT)	zoltan/driver/Makefile.in	/^zCPPdrive$(EXEEXT): $(zCPPdrive_OBJECTS) $(zCPPdrive_DEPENDENCIES) $(EXTRA_zCPPdrive_DEPENDENCIE/;"	t
zCPPdrive-ch_dist_graph.o	zoltan/driver/Makefile.in	/^zCPPdrive-ch_dist_graph.o: $(top_srcdir)\/src\/ch\/ch_dist_graph.c$/;"	t
zCPPdrive-ch_dist_graph.obj	zoltan/driver/Makefile.in	/^zCPPdrive-ch_dist_graph.obj: $(top_srcdir)\/src\/ch\/ch_dist_graph.c$/;"	t
zCPPdrive-ch_init_dist.o	zoltan/driver/Makefile.in	/^zCPPdrive-ch_init_dist.o: $(top_srcdir)\/src\/ch\/ch_init_dist.c$/;"	t
zCPPdrive-ch_init_dist.obj	zoltan/driver/Makefile.in	/^zCPPdrive-ch_init_dist.obj: $(top_srcdir)\/src\/ch\/ch_init_dist.c$/;"	t
zCPPdrive-ch_input_assign.o	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_assign.o: $(top_srcdir)\/src\/ch\/ch_input_assign.c$/;"	t
zCPPdrive-ch_input_assign.obj	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_assign.obj: $(top_srcdir)\/src\/ch\/ch_input_assign.c$/;"	t
zCPPdrive-ch_input_geom.o	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_geom.o: $(top_srcdir)\/src\/ch\/ch_input_geom.c$/;"	t
zCPPdrive-ch_input_geom.obj	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_geom.obj: $(top_srcdir)\/src\/ch\/ch_input_geom.c$/;"	t
zCPPdrive-ch_input_graph.o	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_graph.o: $(top_srcdir)\/src\/ch\/ch_input_graph.c$/;"	t
zCPPdrive-ch_input_graph.obj	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_graph.obj: $(top_srcdir)\/src\/ch\/ch_input_graph.c$/;"	t
zCPPdrive-ch_input_read.o	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_read.o: $(top_srcdir)\/src\/ch\/ch_input_read.c$/;"	t
zCPPdrive-ch_input_read.obj	zoltan/driver/Makefile.in	/^zCPPdrive-ch_input_read.obj: $(top_srcdir)\/src\/ch\/ch_input_read.c$/;"	t
zCPPdrive-dr_chaco_io.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_chaco_io.o: $(srcdir)\/dr_chaco_io.c$/;"	t
zCPPdrive-dr_chaco_io.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_chaco_io.obj: $(srcdir)\/dr_chaco_io.c$/;"	t
zCPPdrive-dr_compress.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_compress.o: $(srcdir)\/dr_compress.c$/;"	t
zCPPdrive-dr_compress.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_compress.obj: $(srcdir)\/dr_compress.c$/;"	t
zCPPdrive-dr_ddCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_ddCPP.o: $(srcdir)\/dr_ddCPP.cpp$/;"	t
zCPPdrive-dr_ddCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_ddCPP.obj: $(srcdir)\/dr_ddCPP.cpp$/;"	t
zCPPdrive-dr_elem.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_elem.o: $(srcdir)\/dr_elem.c$/;"	t
zCPPdrive-dr_elem.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_elem.obj: $(srcdir)\/dr_elem.c$/;"	t
zCPPdrive-dr_elem_util.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_elem_util.o: $(srcdir)\/dr_elem_util.c$/;"	t
zCPPdrive-dr_elem_util.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_elem_util.obj: $(srcdir)\/dr_elem_util.c$/;"	t
zCPPdrive-dr_err.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_err.o: $(srcdir)\/dr_err.c$/;"	t
zCPPdrive-dr_err.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_err.obj: $(srcdir)\/dr_err.c$/;"	t
zCPPdrive-dr_eval.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_eval.o: $(srcdir)\/dr_eval.c$/;"	t
zCPPdrive-dr_eval.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_eval.obj: $(srcdir)\/dr_eval.c$/;"	t
zCPPdrive-dr_exoII_ioCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_exoII_ioCPP.o: $(srcdir)\/dr_exoII_ioCPP.cpp$/;"	t
zCPPdrive-dr_exoII_ioCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_exoII_ioCPP.obj: $(srcdir)\/dr_exoII_ioCPP.cpp$/;"	t
zCPPdrive-dr_gnuplot.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_gnuplot.o: $(srcdir)\/dr_gnuplot.c$/;"	t
zCPPdrive-dr_gnuplot.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_gnuplot.obj: $(srcdir)\/dr_gnuplot.c$/;"	t
zCPPdrive-dr_hg_io.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_hg_io.o: $(srcdir)\/dr_hg_io.c$/;"	t
zCPPdrive-dr_hg_io.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_hg_io.obj: $(srcdir)\/dr_hg_io.c$/;"	t
zCPPdrive-dr_hg_readfile.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_hg_readfile.o: $(srcdir)\/dr_hg_readfile.c$/;"	t
zCPPdrive-dr_hg_readfile.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_hg_readfile.obj: $(srcdir)\/dr_hg_readfile.c$/;"	t
zCPPdrive-dr_input.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_input.o: $(srcdir)\/dr_input.c$/;"	t
zCPPdrive-dr_input.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_input.obj: $(srcdir)\/dr_input.c$/;"	t
zCPPdrive-dr_loadbalCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_loadbalCPP.o: $(srcdir)\/dr_loadbalCPP.cpp$/;"	t
zCPPdrive-dr_loadbalCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_loadbalCPP.obj: $(srcdir)\/dr_loadbalCPP.cpp$/;"	t
zCPPdrive-dr_mainCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mainCPP.o: $(srcdir)\/dr_mainCPP.cpp$/;"	t
zCPPdrive-dr_mainCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mainCPP.obj: $(srcdir)\/dr_mainCPP.cpp$/;"	t
zCPPdrive-dr_mapsCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mapsCPP.o: $(srcdir)\/dr_mapsCPP.cpp$/;"	t
zCPPdrive-dr_mapsCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mapsCPP.obj: $(srcdir)\/dr_mapsCPP.cpp$/;"	t
zCPPdrive-dr_migrateCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_migrateCPP.o: $(srcdir)\/dr_migrateCPP.cpp$/;"	t
zCPPdrive-dr_migrateCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_migrateCPP.obj: $(srcdir)\/dr_migrateCPP.cpp$/;"	t
zCPPdrive-dr_mm_readfile.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mm_readfile.o: $(srcdir)\/dr_mm_readfile.c$/;"	t
zCPPdrive-dr_mm_readfile.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mm_readfile.obj: $(srcdir)\/dr_mm_readfile.c$/;"	t
zCPPdrive-dr_mmio.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mmio.o: $(srcdir)\/dr_mmio.c$/;"	t
zCPPdrive-dr_mmio.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_mmio.obj: $(srcdir)\/dr_mmio.c$/;"	t
zCPPdrive-dr_output.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_output.o: $(srcdir)\/dr_output.c$/;"	t
zCPPdrive-dr_output.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_output.obj: $(srcdir)\/dr_output.c$/;"	t
zCPPdrive-dr_par_util.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_par_util.o: $(srcdir)\/dr_par_util.c$/;"	t
zCPPdrive-dr_par_util.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_par_util.obj: $(srcdir)\/dr_par_util.c$/;"	t
zCPPdrive-dr_param_fileCPP.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_param_fileCPP.o: $(srcdir)\/dr_param_fileCPP.cpp$/;"	t
zCPPdrive-dr_param_fileCPP.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_param_fileCPP.obj: $(srcdir)\/dr_param_fileCPP.cpp$/;"	t
zCPPdrive-dr_random_io.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_random_io.o: $(srcdir)\/dr_random_io.c$/;"	t
zCPPdrive-dr_random_io.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_random_io.obj: $(srcdir)\/dr_random_io.c$/;"	t
zCPPdrive-dr_setfixed.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_setfixed.o: $(srcdir)\/dr_setfixed.c$/;"	t
zCPPdrive-dr_setfixed.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_setfixed.obj: $(srcdir)\/dr_setfixed.c$/;"	t
zCPPdrive-dr_util.o	zoltan/driver/Makefile.in	/^zCPPdrive-dr_util.o: $(srcdir)\/dr_util.c$/;"	t
zCPPdrive-dr_util.obj	zoltan/driver/Makefile.in	/^zCPPdrive-dr_util.obj: $(srcdir)\/dr_util.c$/;"	t
zCPPdrive_CPPFLAGS	zoltan/driver/Makefile.am	/^zCPPdrive_CPPFLAGS = $(EXPORT_INC_PATH) -I$(srcdir)\/ -I$(top_srcdir)\/src\/ch\/$/;"	m
zCPPdrive_CPPFLAGS	zoltan/driver/Makefile.in	/^zCPPdrive_CPPFLAGS = $(EXPORT_INC_PATH) -I$(srcdir)\/ -I$(top_srcdir)\/src\/ch\/$/;"	m
zCPPdrive_DEPENDENCIES	zoltan/driver/Makefile.am	/^zCPPdrive_DEPENDENCIES = \\$/;"	m
zCPPdrive_DEPENDENCIES	zoltan/driver/Makefile.in	/^zCPPdrive_DEPENDENCIES = \\$/;"	m
zCPPdrive_HDRS	zoltan/driver/Makefile.am	/^zCPPdrive_HDRS = \\$/;"	m
zCPPdrive_HDRS	zoltan/driver/Makefile.in	/^zCPPdrive_HDRS = \\$/;"	m
zCPPdrive_LDADD	zoltan/driver/Makefile.am	/^zCPPdrive_LDADD = $(EXPORT_LIBS)$/;"	m
zCPPdrive_LDADD	zoltan/driver/Makefile.in	/^zCPPdrive_LDADD = $(EXPORT_LIBS)$/;"	m
zCPPdrive_OBJECTS	zoltan/driver/Makefile.in	/^zCPPdrive_OBJECTS = $(am_zCPPdrive_OBJECTS)$/;"	m
zCPPdrive_SOURCES	zoltan/driver/Makefile.am	/^zCPPdrive_SOURCES = \\$/;"	m
zCPPdrive_SOURCES	zoltan/driver/Makefile.in	/^zCPPdrive_SOURCES = \\$/;"	m
zdrive$(EXEEXT)	zoltan/driver/Makefile.in	/^zdrive$(EXEEXT): $(zdrive_OBJECTS) $(zdrive_DEPENDENCIES) $(EXTRA_zdrive_DEPENDENCIES) $/;"	t
zdrive-ch_dist_graph.o	zoltan/driver/Makefile.in	/^zdrive-ch_dist_graph.o: $(top_srcdir)\/src\/ch\/ch_dist_graph.c$/;"	t
zdrive-ch_dist_graph.obj	zoltan/driver/Makefile.in	/^zdrive-ch_dist_graph.obj: $(top_srcdir)\/src\/ch\/ch_dist_graph.c$/;"	t
zdrive-ch_init_dist.o	zoltan/driver/Makefile.in	/^zdrive-ch_init_dist.o: $(top_srcdir)\/src\/ch\/ch_init_dist.c$/;"	t
zdrive-ch_init_dist.obj	zoltan/driver/Makefile.in	/^zdrive-ch_init_dist.obj: $(top_srcdir)\/src\/ch\/ch_init_dist.c$/;"	t
zdrive-ch_input_assign.o	zoltan/driver/Makefile.in	/^zdrive-ch_input_assign.o: $(top_srcdir)\/src\/ch\/ch_input_assign.c$/;"	t
zdrive-ch_input_assign.obj	zoltan/driver/Makefile.in	/^zdrive-ch_input_assign.obj: $(top_srcdir)\/src\/ch\/ch_input_assign.c$/;"	t
zdrive-ch_input_geom.o	zoltan/driver/Makefile.in	/^zdrive-ch_input_geom.o: $(top_srcdir)\/src\/ch\/ch_input_geom.c$/;"	t
zdrive-ch_input_geom.obj	zoltan/driver/Makefile.in	/^zdrive-ch_input_geom.obj: $(top_srcdir)\/src\/ch\/ch_input_geom.c$/;"	t
zdrive-ch_input_graph.o	zoltan/driver/Makefile.in	/^zdrive-ch_input_graph.o: $(top_srcdir)\/src\/ch\/ch_input_graph.c$/;"	t
zdrive-ch_input_graph.obj	zoltan/driver/Makefile.in	/^zdrive-ch_input_graph.obj: $(top_srcdir)\/src\/ch\/ch_input_graph.c$/;"	t
zdrive-ch_input_read.o	zoltan/driver/Makefile.in	/^zdrive-ch_input_read.o: $(top_srcdir)\/src\/ch\/ch_input_read.c$/;"	t
zdrive-ch_input_read.obj	zoltan/driver/Makefile.in	/^zdrive-ch_input_read.obj: $(top_srcdir)\/src\/ch\/ch_input_read.c$/;"	t
zdrive-dr_chaco_io.o	zoltan/driver/Makefile.in	/^zdrive-dr_chaco_io.o: $(srcdir)\/dr_chaco_io.c$/;"	t
zdrive-dr_chaco_io.obj	zoltan/driver/Makefile.in	/^zdrive-dr_chaco_io.obj: $(srcdir)\/dr_chaco_io.c$/;"	t
zdrive-dr_compress.o	zoltan/driver/Makefile.in	/^zdrive-dr_compress.o: $(srcdir)\/dr_compress.c$/;"	t
zdrive-dr_compress.obj	zoltan/driver/Makefile.in	/^zdrive-dr_compress.obj: $(srcdir)\/dr_compress.c$/;"	t
zdrive-dr_dd.o	zoltan/driver/Makefile.in	/^zdrive-dr_dd.o: $(srcdir)\/dr_dd.c$/;"	t
zdrive-dr_dd.obj	zoltan/driver/Makefile.in	/^zdrive-dr_dd.obj: $(srcdir)\/dr_dd.c$/;"	t
zdrive-dr_elem.o	zoltan/driver/Makefile.in	/^zdrive-dr_elem.o: $(srcdir)\/dr_elem.c$/;"	t
zdrive-dr_elem.obj	zoltan/driver/Makefile.in	/^zdrive-dr_elem.obj: $(srcdir)\/dr_elem.c$/;"	t
zdrive-dr_elem_util.o	zoltan/driver/Makefile.in	/^zdrive-dr_elem_util.o: $(srcdir)\/dr_elem_util.c$/;"	t
zdrive-dr_elem_util.obj	zoltan/driver/Makefile.in	/^zdrive-dr_elem_util.obj: $(srcdir)\/dr_elem_util.c$/;"	t
zdrive-dr_err.o	zoltan/driver/Makefile.in	/^zdrive-dr_err.o: $(srcdir)\/dr_err.c$/;"	t
zdrive-dr_err.obj	zoltan/driver/Makefile.in	/^zdrive-dr_err.obj: $(srcdir)\/dr_err.c$/;"	t
zdrive-dr_eval.o	zoltan/driver/Makefile.in	/^zdrive-dr_eval.o: $(srcdir)\/dr_eval.c$/;"	t
zdrive-dr_eval.obj	zoltan/driver/Makefile.in	/^zdrive-dr_eval.obj: $(srcdir)\/dr_eval.c$/;"	t
zdrive-dr_exoII_io.o	zoltan/driver/Makefile.in	/^zdrive-dr_exoII_io.o: $(srcdir)\/dr_exoII_io.c$/;"	t
zdrive-dr_exoII_io.obj	zoltan/driver/Makefile.in	/^zdrive-dr_exoII_io.obj: $(srcdir)\/dr_exoII_io.c$/;"	t
zdrive-dr_gnuplot.o	zoltan/driver/Makefile.in	/^zdrive-dr_gnuplot.o: $(srcdir)\/dr_gnuplot.c$/;"	t
zdrive-dr_gnuplot.obj	zoltan/driver/Makefile.in	/^zdrive-dr_gnuplot.obj: $(srcdir)\/dr_gnuplot.c$/;"	t
zdrive-dr_hg_io.o	zoltan/driver/Makefile.in	/^zdrive-dr_hg_io.o: $(srcdir)\/dr_hg_io.c$/;"	t
zdrive-dr_hg_io.obj	zoltan/driver/Makefile.in	/^zdrive-dr_hg_io.obj: $(srcdir)\/dr_hg_io.c$/;"	t
zdrive-dr_hg_readfile.o	zoltan/driver/Makefile.in	/^zdrive-dr_hg_readfile.o: $(srcdir)\/dr_hg_readfile.c$/;"	t
zdrive-dr_hg_readfile.obj	zoltan/driver/Makefile.in	/^zdrive-dr_hg_readfile.obj: $(srcdir)\/dr_hg_readfile.c$/;"	t
zdrive-dr_input.o	zoltan/driver/Makefile.in	/^zdrive-dr_input.o: $(srcdir)\/dr_input.c$/;"	t
zdrive-dr_input.obj	zoltan/driver/Makefile.in	/^zdrive-dr_input.obj: $(srcdir)\/dr_input.c$/;"	t
zdrive-dr_loadbal.o	zoltan/driver/Makefile.in	/^zdrive-dr_loadbal.o: $(srcdir)\/dr_loadbal.c$/;"	t
zdrive-dr_loadbal.obj	zoltan/driver/Makefile.in	/^zdrive-dr_loadbal.obj: $(srcdir)\/dr_loadbal.c$/;"	t
zdrive-dr_main.o	zoltan/driver/Makefile.in	/^zdrive-dr_main.o: $(srcdir)\/dr_main.c$/;"	t
zdrive-dr_main.obj	zoltan/driver/Makefile.in	/^zdrive-dr_main.obj: $(srcdir)\/dr_main.c$/;"	t
zdrive-dr_maps.o	zoltan/driver/Makefile.in	/^zdrive-dr_maps.o: $(srcdir)\/dr_maps.c$/;"	t
zdrive-dr_maps.obj	zoltan/driver/Makefile.in	/^zdrive-dr_maps.obj: $(srcdir)\/dr_maps.c$/;"	t
zdrive-dr_migrate.o	zoltan/driver/Makefile.in	/^zdrive-dr_migrate.o: $(srcdir)\/dr_migrate.c$/;"	t
zdrive-dr_migrate.obj	zoltan/driver/Makefile.in	/^zdrive-dr_migrate.obj: $(srcdir)\/dr_migrate.c$/;"	t
zdrive-dr_mm_readfile.o	zoltan/driver/Makefile.in	/^zdrive-dr_mm_readfile.o: $(srcdir)\/dr_mm_readfile.c$/;"	t
zdrive-dr_mm_readfile.obj	zoltan/driver/Makefile.in	/^zdrive-dr_mm_readfile.obj: $(srcdir)\/dr_mm_readfile.c$/;"	t
zdrive-dr_mmio.o	zoltan/driver/Makefile.in	/^zdrive-dr_mmio.o: $(srcdir)\/dr_mmio.c$/;"	t
zdrive-dr_mmio.obj	zoltan/driver/Makefile.in	/^zdrive-dr_mmio.obj: $(srcdir)\/dr_mmio.c$/;"	t
zdrive-dr_output.o	zoltan/driver/Makefile.in	/^zdrive-dr_output.o: $(srcdir)\/dr_output.c$/;"	t
zdrive-dr_output.obj	zoltan/driver/Makefile.in	/^zdrive-dr_output.obj: $(srcdir)\/dr_output.c$/;"	t
zdrive-dr_par_util.o	zoltan/driver/Makefile.in	/^zdrive-dr_par_util.o: $(srcdir)\/dr_par_util.c$/;"	t
zdrive-dr_par_util.obj	zoltan/driver/Makefile.in	/^zdrive-dr_par_util.obj: $(srcdir)\/dr_par_util.c$/;"	t
zdrive-dr_param_file.o	zoltan/driver/Makefile.in	/^zdrive-dr_param_file.o: $(srcdir)\/dr_param_file.c$/;"	t
zdrive-dr_param_file.obj	zoltan/driver/Makefile.in	/^zdrive-dr_param_file.obj: $(srcdir)\/dr_param_file.c$/;"	t
zdrive-dr_random_io.o	zoltan/driver/Makefile.in	/^zdrive-dr_random_io.o: $(srcdir)\/dr_random_io.c$/;"	t
zdrive-dr_random_io.obj	zoltan/driver/Makefile.in	/^zdrive-dr_random_io.obj: $(srcdir)\/dr_random_io.c$/;"	t
zdrive-dr_setfixed.o	zoltan/driver/Makefile.in	/^zdrive-dr_setfixed.o: $(srcdir)\/dr_setfixed.c$/;"	t
zdrive-dr_setfixed.obj	zoltan/driver/Makefile.in	/^zdrive-dr_setfixed.obj: $(srcdir)\/dr_setfixed.c$/;"	t
zdrive-dr_util.o	zoltan/driver/Makefile.in	/^zdrive-dr_util.o: $(srcdir)\/dr_util.c$/;"	t
zdrive-dr_util.obj	zoltan/driver/Makefile.in	/^zdrive-dr_util.obj: $(srcdir)\/dr_util.c$/;"	t
zdrive-order_test.o	zoltan/driver/Makefile.in	/^zdrive-order_test.o: $(srcdir)\/order_test.c$/;"	t
zdrive-order_test.obj	zoltan/driver/Makefile.in	/^zdrive-order_test.obj: $(srcdir)\/order_test.c$/;"	t
zdrive_CPPFLAGS	zoltan/driver/Makefile.am	/^zdrive_CPPFLAGS = $(EXPORT_INC_PATH) -I$(srcdir)\/ -I$(top_srcdir)\/src\/ch\/$/;"	m
zdrive_CPPFLAGS	zoltan/driver/Makefile.in	/^zdrive_CPPFLAGS = $(EXPORT_INC_PATH) -I$(srcdir)\/ -I$(top_srcdir)\/src\/ch\/$/;"	m
zdrive_DEPENDENCIES	zoltan/driver/Makefile.am	/^zdrive_DEPENDENCIES = \\$/;"	m
zdrive_DEPENDENCIES	zoltan/driver/Makefile.in	/^zdrive_DEPENDENCIES = \\$/;"	m
zdrive_LDADD	zoltan/driver/Makefile.am	/^zdrive_LDADD = $(EXPORT_LIBS)$/;"	m
zdrive_LDADD	zoltan/driver/Makefile.in	/^zdrive_LDADD = $(EXPORT_LIBS)$/;"	m
zdrive_OBJECTS	zoltan/driver/Makefile.in	/^zdrive_OBJECTS = $(am_zdrive_OBJECTS)$/;"	m
zdrive_SOURCES	zoltan/driver/Makefile.am	/^zdrive_SOURCES = \\$/;"	m
zdrive_SOURCES	zoltan/driver/Makefile.in	/^zdrive_SOURCES = \\$/;"	m
zdrive_hash	zoltan/driver/dr_maps.c	/^unsigned int zdrive_hash(ZOLTAN_ID_TYPE *id, int ngid, unsigned int nprocs)$/;"	f	typeref:typename:unsigned int
zeros	zoltan/driver/dr_input_const.h	/^  int     zeros;        \/* 1 - if the target machine uses leading zeros when *\/$/;"	m	struct:Parallel_IO	typeref:typename:int
zeros	zoltan/fdriver/fdr_input.f90	/^  integer(Zoltan_INT) :: zeros$/;"	k	type:PARIO_INFO
zfdrive	zoltan/fdriver/makefile	/^zfdrive:	$(ZOD)\/fdr_migrate.o \\$/;"	t
zfdrive$(EXEEXT)	zoltan/fdriver/Makefile.in	/^zfdrive$(EXEEXT): $(zfdrive_OBJECTS) $(zfdrive_DEPENDENCIES) $(EXTRA_zfdrive_DEPENDENCIES) $/;"	t
zfdrive_CPPFLAGS	zoltan/fdriver/Makefile.am	/^zfdrive_CPPFLAGS = $(EXPORT_INC_PATH) -I$(srcdir)\/ -I$(top_srcdir)\/src\/ch\/$/;"	m
zfdrive_CPPFLAGS	zoltan/fdriver/Makefile.in	/^zfdrive_CPPFLAGS = $(EXPORT_INC_PATH) -I$(srcdir)\/ -I$(top_srcdir)\/src\/ch\/$/;"	m
zfdrive_DEPENDENCIES	zoltan/fdriver/Makefile.am	/^zfdrive_DEPENDENCIES = \\$/;"	m
zfdrive_DEPENDENCIES	zoltan/fdriver/Makefile.in	/^zfdrive_DEPENDENCIES = \\$/;"	m
zfdrive_LDADD	zoltan/fdriver/Makefile.am	/^zfdrive_LDADD = $(EXPORT_LIBS)$/;"	m
zfdrive_LDADD	zoltan/fdriver/Makefile.in	/^zfdrive_LDADD = $(EXPORT_LIBS)$/;"	m
zfdrive_OBJECTS	zoltan/fdriver/Makefile.in	/^zfdrive_OBJECTS = $(am_zfdrive_OBJECTS)$/;"	m
zfdrive_SOURCES	zoltan/fdriver/Makefile.am	/^zfdrive_SOURCES = \\$/;"	m
zfdrive_SOURCES	zoltan/fdriver/Makefile.in	/^zfdrive_SOURCES = \\$/;"	m
zid	zoltan/zz/zz_util_const.h	/^  ZOLTAN_ID_PTR zid;    \/* buffer to hold key if it is not a multiple of ZOLTAN_ID_TYPEs *\/$/;"	m	struct:Zoltan_Map_List	typeref:typename:ZOLTAN_ID_PTR
zidum	zoltan/zz/zz_rand.c	/^static unsigned int zidum = ZOLTAN_RAND_INIT;$/;"	v	typeref:typename:unsigned int	file:
zoltan	zoltan/CMakeLists.txt	/^ADD_LIBRARY(zoltan ${SOURCES})$/;"	t
zoltan	zoltan/fort/fwrap.f90	/^module zoltan$/;"	m
zoltan	zoltan/matlab/zoltan.m	/^function [part,perm] = zoltan(A, p, method, dir, opt)$/;"	f
zoltanParams_file	zoltan/driver/dr_const.h	/^  char zoltanParams_file[FILENAME_MAX]; \/* file name to get more$/;"	m	struct:Problem_Description	typeref:typename:char[]
zoltanParams_hier_free	zoltan/driver/dr_param_file.c	/^void zoltanParams_hier_free() {$/;"	f	typeref:typename:void
zoltanParams_hier_free	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_hier_free() {$/;"	f	typeref:typename:void
zoltanParams_hier_get_num_levels	zoltan/driver/dr_param_file.c	/^int zoltanParams_hier_get_num_levels() {$/;"	f	typeref:typename:int
zoltanParams_hier_get_num_levels	zoltan/driver/dr_param_fileCPP.cpp	/^int zoltanParams_hier_get_num_levels() {$/;"	f	typeref:typename:int
zoltanParams_hier_get_part	zoltan/driver/dr_param_fileCPP.cpp	/^int zoltanParams_hier_get_part(int level) {$/;"	f	typeref:typename:int
zoltanParams_hier_get_partition	zoltan/driver/dr_param_file.c	/^int zoltanParams_hier_get_partition(int level) {$/;"	f	typeref:typename:int
zoltanParams_hier_set_num_levels	zoltan/driver/dr_param_file.c	/^void zoltanParams_hier_set_num_levels(int levels) {$/;"	f	typeref:typename:void
zoltanParams_hier_set_num_levels	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_hier_set_num_levels(int levels) {$/;"	f	typeref:typename:void
zoltanParams_hier_set_param	zoltan/driver/dr_param_file.c	/^void zoltanParams_hier_set_param(int level, char *param, char *value) {$/;"	f	typeref:typename:void
zoltanParams_hier_set_param	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_hier_set_param(int level, char *param, char *value) {$/;"	f	typeref:typename:void
zoltanParams_hier_set_partition	zoltan/driver/dr_param_file.c	/^void zoltanParams_hier_set_partition(int level, int partition) {$/;"	f	typeref:typename:void
zoltanParams_hier_set_partition	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_hier_set_partition(int level, int partition) {$/;"	f	typeref:typename:void
zoltanParams_hier_setup	zoltan/driver/dr_param_file.c	/^void zoltanParams_hier_setup(struct Zoltan_Struct *zz) {$/;"	f	typeref:typename:void
zoltanParams_hier_setup	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_hier_setup(Zoltan &zz) {$/;"	f	typeref:typename:void
zoltanParams_hier_struct	zoltan/driver/dr_param_file.c	/^struct zoltanParams_hier_struct {$/;"	s	file:
zoltanParams_hier_struct	zoltan/driver/dr_param_fileCPP.cpp	/^struct zoltanParams_hier_struct {$/;"	s	file:
zoltanParams_hier_use_params	zoltan/driver/dr_param_file.c	/^void zoltanParams_hier_use_params(int level, struct Zoltan_Struct *zz, int *ierr) {$/;"	f	typeref:typename:void
zoltanParams_hier_use_params	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_hier_use_params(int level, struct Zoltan_Struct *zz, int *ierr) {$/;"	f	typeref:typename:void
zoltanParams_list_entry	zoltan/driver/dr_param_file.c	/^struct zoltanParams_list_entry {$/;"	s	file:
zoltanParams_list_entry	zoltan/driver/dr_param_fileCPP.cpp	/^struct zoltanParams_list_entry {$/;"	s	file:
zoltanParams_read_file	zoltan/driver/dr_param_file.c	/^void zoltanParams_read_file(struct Zoltan_Struct *lb, char *file, $/;"	f	typeref:typename:void
zoltanParams_read_file	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_read_file(Zoltan &lb, char *file, $/;"	f	typeref:typename:void
zoltanParams_set_comm	zoltan/driver/dr_param_file.c	/^void zoltanParams_set_comm(MPI_Comm thecomm) {$/;"	f	typeref:typename:void
zoltanParams_set_comm	zoltan/driver/dr_param_fileCPP.cpp	/^void zoltanParams_set_comm(MPI_Comm thecomm) {$/;"	f	typeref:typename:void
zoltan_align.o	zoltan/Makefile.in	/^zoltan_align.o: $(srcdir)\/Utilities\/shared\/zoltan_align.c$/;"	t
zoltan_align.obj	zoltan/Makefile.in	/^zoltan_align.obj: $(srcdir)\/Utilities\/shared\/zoltan_align.c$/;"	t
zoltan_ews	zoltan/phg/phg_lookup.h	/^}zoltan_ews;$/;"	t	typeref:struct:_myEW
zoltan_gno_datatype_name	zoltan/include/zoltan_types.h	/^#define zoltan_gno_datatype_name /;"	d
zoltan_hier_platform_specs	zoltan/hier/hier.c	/^       zoltan_hier_platform_specs[ZOLTAN_HIER_LAST_PLATFORM]={$/;"	v	typeref:typename:zoltan_platform_specification[]	file:
zoltan_id.o	zoltan/Makefile.in	/^zoltan_id.o: $(srcdir)\/Utilities\/shared\/zoltan_id.c$/;"	t
zoltan_id.obj	zoltan/Makefile.in	/^zoltan_id.obj: $(srcdir)\/Utilities\/shared\/zoltan_id.c$/;"	t
zoltan_id_datatype_name	zoltan/include/zoltan_types.h	/^#define zoltan_id_datatype_name /;"	d
zoltan_lb_eval_sort_increasing	zoltan/lb/lb_eval.c	/^int zoltan_lb_eval_sort_increasing(const void *a, const void *b)$/;"	f	typeref:typename:int
zoltan_mpi_id_datatype_name	zoltan/include/zoltan_types.h	/^#define zoltan_mpi_id_datatype_name /;"	d
zoltan_objects	zoltan/phg/phg_lookup.h	/^}zoltan_objects;$/;"	t	typeref:struct:_myObj
zoltan_pins	zoltan/phg/phg_lookup.h	/^}zoltan_pins;$/;"	t	typeref:struct:_myPin
zoltan_platform_names	zoltan/hier/hier.c	/^enum zoltan_platform_names {$/;"	g	file:
zoltan_platform_specification	zoltan/hier/hier.h	/^} zoltan_platform_specification;$/;"	t	typeref:struct:_spec
zoltan_temp_edges	zoltan/phg/phg_lookup.h	/^}zoltan_temp_edges;$/;"	t	typeref:struct:_hshEdge
zoltan_temp_vertices	zoltan/phg/phg_lookup.h	/^}zoltan_temp_vertices;$/;"	t	typeref:struct:_hshVtx
zoltan_timer.o	zoltan/Makefile.in	/^zoltan_timer.o: $(srcdir)\/Utilities\/Timer\/zoltan_timer.c$/;"	t
zoltan_timer.obj	zoltan/Makefile.in	/^zoltan_timer.obj: $(srcdir)\/Utilities\/Timer\/zoltan_timer.c$/;"	t
zoltan_types	zoltan/fort/ztypes.f90	/^module zoltan_types$/;"	m
zoltan_user_data	zoltan/fort/zoltan_user_data.f90	/^module zoltan_user_data$/;"	m
zoltan_user_data.o	zoltan/Makefile.in	/^zoltan_user_data.o: $(srcdir)\/fort\/zoltan_user_data.f90$/;"	t
zoltan_user_data.obj	zoltan/Makefile.in	/^zoltan_user_data.obj: $(srcdir)\/fort\/zoltan_user_data.f90$/;"	t
zph	zoltan/driver/dr_param_file.c	/^static struct zoltanParams_hier_struct **zph = NULL;$/;"	v	typeref:struct:zoltanParams_hier_struct **	file:
zph	zoltan/driver/dr_param_fileCPP.cpp	/^static struct zoltanParams_hier_struct **zph = NULL;$/;"	v	typeref:struct:zoltanParams_hier_struct **	file:
zph	zoltan/fdriver/fdr_param_file.f90	/^type(ztnPrm_hier_struct), save, allocatable :: zph(/;"	v	module:dr_param_file
ztnPrm_file	zoltan/fdriver/fdr_const.f90	/^  character(len=FILENAME_MAX) :: ztnPrm_file /;"	k	type:PROB_INFO
ztnPrm_hier_free	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_hier_free(/;"	s	module:dr_param_file
ztnPrm_hier_get_num_levels	zoltan/fdriver/fdr_param_file.f90	/^function ztnPrm_hier_get_num_levels(/;"	f	module:dr_param_file
ztnPrm_hier_get_part	zoltan/fdriver/fdr_param_file.f90	/^function ztnPrm_hier_get_part(/;"	f	module:dr_param_file
ztnPrm_hier_set_num_levels	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_hier_set_num_levels(/;"	s	module:dr_param_file
ztnPrm_hier_set_param	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_hier_set_param(/;"	s	module:dr_param_file
ztnPrm_hier_set_partition	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_hier_set_partition(/;"	s	module:dr_param_file
ztnPrm_hier_setup	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_hier_setup(/;"	s	module:dr_param_file
ztnPrm_hier_struct	zoltan/fdriver/fdr_param_file.f90	/^type ztnPrm_hier_struct$/;"	t	module:dr_param_file
ztnPrm_hier_use_params	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_hier_use_params(/;"	s	module:dr_param_file
ztnPrm_list_entry	zoltan/fdriver/fdr_param_file.f90	/^type ztnPrm_list_entry$/;"	t	module:dr_param_file
ztnPrm_read_file	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_read_file(/;"	s	module:dr_param_file
ztnPrm_set_comm	zoltan/fdriver/fdr_param_file.f90	/^subroutine ztnPrm_set_comm(/;"	s	module:dr_param_file
ztypes.o	zoltan/Makefile.in	/^ztypes.o: $(srcdir)\/fort\/ztypes.f90$/;"	t
ztypes.obj	zoltan/Makefile.in	/^ztypes.obj: $(srcdir)\/fort\/ztypes.f90$/;"	t
zz	zoltan/matrix/matrix_distribute.c	/^  ZZ* zz;$/;"	m	struct:ZOLTAN_DIST_PART_	typeref:typename:ZZ *	file:
zz	zoltan/phg/phg_comm.h	/^  ZZ  *zz;        \/* for debugging purpose *\/$/;"	m	struct:PHGCommStruct	typeref:typename:ZZ *
zz_back_trace.o	zoltan/Makefile.in	/^zz_back_trace.o: $(srcdir)\/zz\/zz_back_trace.c$/;"	t
zz_back_trace.obj	zoltan/Makefile.in	/^zz_back_trace.obj: $(srcdir)\/zz\/zz_back_trace.c$/;"	t
zz_coord.o	zoltan/Makefile.in	/^zz_coord.o: $(srcdir)\/zz\/zz_coord.c$/;"	t
zz_coord.obj	zoltan/Makefile.in	/^zz_coord.obj: $(srcdir)\/zz\/zz_coord.c$/;"	t
zz_gen_files.o	zoltan/Makefile.in	/^zz_gen_files.o: $(srcdir)\/zz\/zz_gen_files.c$/;"	t
zz_gen_files.obj	zoltan/Makefile.in	/^zz_gen_files.obj: $(srcdir)\/zz\/zz_gen_files.c$/;"	t
zz_hash.o	zoltan/Makefile.in	/^zz_hash.o: $(srcdir)\/zz\/zz_hash.c$/;"	t
zz_hash.obj	zoltan/Makefile.in	/^zz_hash.obj: $(srcdir)\/zz\/zz_hash.c$/;"	t
zz_heap.o	zoltan/Makefile.in	/^zz_heap.o: $(srcdir)\/zz\/zz_heap.c$/;"	t
zz_heap.obj	zoltan/Makefile.in	/^zz_heap.obj: $(srcdir)\/zz\/zz_heap.c$/;"	t
zz_init.o	zoltan/Makefile.in	/^zz_init.o: $(srcdir)\/zz\/zz_init.c$/;"	t
zz_init.obj	zoltan/Makefile.in	/^zz_init.obj: $(srcdir)\/zz\/zz_init.c$/;"	t
zz_map.o	zoltan/Makefile.in	/^zz_map.o: $(srcdir)\/zz\/zz_map.c$/;"	t
zz_map.obj	zoltan/Makefile.in	/^zz_map.obj: $(srcdir)\/zz\/zz_map.c$/;"	t
zz_mpi_datatype_names	zoltan/zz/zz_util.c	/^static char* zz_mpi_datatype_names[5] =$/;"	v	typeref:typename:char * [5]	file:
zz_mpi_gno_name	zoltan/zz/zz_util.c	/^static char* zz_mpi_gno_name=NULL;$/;"	v	typeref:typename:char *	file:
zz_mpi_gno_type	zoltan/zz/zz_util.c	/^static MPI_Datatype zz_mpi_gno_type;$/;"	v	typeref:typename:MPI_Datatype	file:
zz_obj_list.o	zoltan/Makefile.in	/^zz_obj_list.o: $(srcdir)\/zz\/zz_obj_list.c$/;"	t
zz_obj_list.obj	zoltan/Makefile.in	/^zz_obj_list.obj: $(srcdir)\/zz\/zz_obj_list.c$/;"	t
zz_rand.o	zoltan/Makefile.in	/^zz_rand.o: $(srcdir)\/zz\/zz_rand.c$/;"	t
zz_rand.obj	zoltan/Makefile.in	/^zz_rand.obj: $(srcdir)\/zz\/zz_rand.c$/;"	t
zz_set_fn.o	zoltan/Makefile.in	/^zz_set_fn.o: $(srcdir)\/zz\/zz_set_fn.c$/;"	t
zz_set_fn.obj	zoltan/Makefile.in	/^zz_set_fn.obj: $(srcdir)\/zz\/zz_set_fn.c$/;"	t
zz_sort.o	zoltan/Makefile.in	/^zz_sort.o: $(srcdir)\/zz\/zz_sort.c$/;"	t
zz_sort.obj	zoltan/Makefile.in	/^zz_sort.obj: $(srcdir)\/zz\/zz_sort.c$/;"	t
zz_struct.o	zoltan/Makefile.in	/^zz_struct.o: $(srcdir)\/zz\/zz_struct.c$/;"	t
zz_struct.obj	zoltan/Makefile.in	/^zz_struct.obj: $(srcdir)\/zz\/zz_struct.c$/;"	t
zz_util.o	zoltan/Makefile.in	/^zz_util.o: $(srcdir)\/zz\/zz_util.c$/;"	t
zz_util.obj	zoltan/Makefile.in	/^zz_util.obj: $(srcdir)\/zz\/zz_util.c$/;"	t
~Zoltan	zoltan/include/zoltan_cpp.h	/^  ~Zoltan()$/;"	f	class:Zoltan
~Zoltan_Comm	zoltan/include/zoltan_comm_cpp.h	/^  ~Zoltan_Comm()$/;"	f	class:Zoltan_Comm
~Zoltan_DD	zoltan/include/zoltan_dd_cpp.h	/^  ~Zoltan_DD()$/;"	f	class:Zoltan_DD
~Zoltan_Timer_Object	zoltan/include/zoltan_timer_cpp.h	/^  ~Zoltan_Timer_Object() {$/;"	f	class:Zoltan_Timer_Object
